/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TripGeneratedEvents extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5284490060697727272L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TripGeneratedEvents\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"tripPayload\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Trip\",\"fields\":[{\"name\":\"distance\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"quantityOfMaterial\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"unitOfQuantity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"driverName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"driverMobNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"remarks\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"origin\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TripLocation\",\"fields\":[{\"name\":\"freightLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"FreightLocation\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"geofence\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geofence\",\"fields\":[{\"name\":\"center\",\"type\":{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}},{\"name\":\"boundry\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Location\"}],\"default\":null},{\"name\":\"circle\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Circle\",\"fields\":[{\"name\":\"center\",\"type\":\"Location\"},{\"name\":\"radius\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"GeofenceType\",\"symbols\":[\"Proximity\",\"Polygon\"]}],\"default\":null}]}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"favouriteOf\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"FreightLocType\",\"symbols\":[\"Private\",\"Public\"]}],\"default\":null},{\"name\":\"isDeleted\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"fretronPlace\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoJsonFence\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Properties\",\"fields\":[{\"name\":\"catagory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"level\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customeFields\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"geometry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geometry\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"coordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null}]}],\"default\":null},{\"name\":\"metadata\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MetaData\",\"fields\":[{\"name\":\"clazz\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"fromTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"tillTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"userGivenFromTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"userGivenTillTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"firstGpsLogId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastGpsLogId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ignoredVehicleGpsLogs\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updatedAt\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"}]}}],\"default\":null},{\"name\":\"destination\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TripLocation\"}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tripId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"actualStartTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"actualEndTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"plannedStartTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"plannedEndTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"lane\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Lane\",\"fields\":[{\"name\":\"sources\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"FreightLocation\"}],\"default\":null},{\"name\":\"destination\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"FreightLocation\"}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"baseSource\",\"type\":[\"null\",\"FreightLocation\"],\"default\":null},{\"name\":\"baseDestination\",\"type\":[\"null\",\"FreightLocation\"],\"default\":null},{\"name\":\"baseMaterial\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"baseRate\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"sourceOffSet\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"destinationOffSet\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"materialOffSet\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"baseTransitDays\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null},{\"name\":\"tripState\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"TripState\",\"symbols\":[\"Created\",\"Started\",\"Completed\"]}],\"default\":null},{\"name\":\"deviceImei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"shipmentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"trackingType\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"TrackingType\",\"symbols\":[\"Tracker\",\"Trip\",\"Manual\"]}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"expectedDestinations\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"FreightLocation\"}],\"default\":null},{\"name\":\"reprocessTill\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"sharedWith\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"liveliness\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isOffTrack\",\"type\":\"boolean\",\"default\":false},{\"name\":\"offTrackSince\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"expectedSystemResolution\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdAt\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"originPlace\",\"type\":[\"null\",\"TripLocation\"],\"default\":null},{\"name\":\"destinationPlace\",\"type\":[\"null\",\"TripLocat","ion\"],\"default\":null}]}],\"default\":null},{\"name\":\"vehicleTripStatePayload\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"VehicleTripState\",\"fields\":[{\"name\":\"deviceImei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"VehicleState\",\"symbols\":[\"WaitingForLoad\",\"EnrouteForPickUp\",\"AtPickUpPoint\",\"EnrouteForDestination\",\"AtDestination\"]}],\"default\":null},{\"name\":\"tripId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"endTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"latitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"vehicleTripStateEventPayload\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"VehicleTripStateEvents\",\"fields\":[{\"name\":\"eventName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"tripId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventTime\",\"type\":[\"null\",\"long\"],\"logicalType\":\"timestamp-millis\"}]}],\"default\":null},{\"name\":\"trackerTripPayload\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TrackerTrip\",\"fields\":[{\"name\":\"distance\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"quantityOfMaterial\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"unitOfQuantity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"driverName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"driverMobNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"remarks\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"origin\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TripLocation\"}],\"default\":null},{\"name\":\"destination\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TripLocation\"}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tripId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"actualStartTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"actualEndTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"plannedStartTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"plannedEndTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"lane\",\"type\":[\"null\",\"Lane\"],\"default\":null},{\"name\":\"tripState\",\"type\":[\"null\",\"TripState\"],\"default\":null},{\"name\":\"deviceImei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"shipmentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String type;
  @Deprecated public com.fretron.Model.Trip tripPayload;
  @Deprecated public com.fretron.Model.VehicleTripState vehicleTripStatePayload;
  @Deprecated public com.fretron.Model.VehicleTripStateEvents vehicleTripStateEventPayload;
  @Deprecated public com.fretron.Model.TrackerTrip trackerTripPayload;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TripGeneratedEvents() {}

  /**
   * All-args constructor.
   * @param type The new value for type
   * @param tripPayload The new value for tripPayload
   * @param vehicleTripStatePayload The new value for vehicleTripStatePayload
   * @param vehicleTripStateEventPayload The new value for vehicleTripStateEventPayload
   * @param trackerTripPayload The new value for trackerTripPayload
   */
  public TripGeneratedEvents(java.lang.String type, com.fretron.Model.Trip tripPayload, com.fretron.Model.VehicleTripState vehicleTripStatePayload, com.fretron.Model.VehicleTripStateEvents vehicleTripStateEventPayload, com.fretron.Model.TrackerTrip trackerTripPayload) {
    this.type = type;
    this.tripPayload = tripPayload;
    this.vehicleTripStatePayload = vehicleTripStatePayload;
    this.vehicleTripStateEventPayload = vehicleTripStateEventPayload;
    this.trackerTripPayload = trackerTripPayload;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return tripPayload;
    case 2: return vehicleTripStatePayload;
    case 3: return vehicleTripStateEventPayload;
    case 4: return trackerTripPayload;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (java.lang.String)value$; break;
    case 1: tripPayload = (com.fretron.Model.Trip)value$; break;
    case 2: vehicleTripStatePayload = (com.fretron.Model.VehicleTripState)value$; break;
    case 3: vehicleTripStateEventPayload = (com.fretron.Model.VehicleTripStateEvents)value$; break;
    case 4: trackerTripPayload = (com.fretron.Model.TrackerTrip)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'tripPayload' field.
   * @return The value of the 'tripPayload' field.
   */
  public com.fretron.Model.Trip getTripPayload() {
    return tripPayload;
  }

  /**
   * Sets the value of the 'tripPayload' field.
   * @param value the value to set.
   */
  public void setTripPayload(com.fretron.Model.Trip value) {
    this.tripPayload = value;
  }

  /**
   * Gets the value of the 'vehicleTripStatePayload' field.
   * @return The value of the 'vehicleTripStatePayload' field.
   */
  public com.fretron.Model.VehicleTripState getVehicleTripStatePayload() {
    return vehicleTripStatePayload;
  }

  /**
   * Sets the value of the 'vehicleTripStatePayload' field.
   * @param value the value to set.
   */
  public void setVehicleTripStatePayload(com.fretron.Model.VehicleTripState value) {
    this.vehicleTripStatePayload = value;
  }

  /**
   * Gets the value of the 'vehicleTripStateEventPayload' field.
   * @return The value of the 'vehicleTripStateEventPayload' field.
   */
  public com.fretron.Model.VehicleTripStateEvents getVehicleTripStateEventPayload() {
    return vehicleTripStateEventPayload;
  }

  /**
   * Sets the value of the 'vehicleTripStateEventPayload' field.
   * @param value the value to set.
   */
  public void setVehicleTripStateEventPayload(com.fretron.Model.VehicleTripStateEvents value) {
    this.vehicleTripStateEventPayload = value;
  }

  /**
   * Gets the value of the 'trackerTripPayload' field.
   * @return The value of the 'trackerTripPayload' field.
   */
  public com.fretron.Model.TrackerTrip getTrackerTripPayload() {
    return trackerTripPayload;
  }

  /**
   * Sets the value of the 'trackerTripPayload' field.
   * @param value the value to set.
   */
  public void setTrackerTripPayload(com.fretron.Model.TrackerTrip value) {
    this.trackerTripPayload = value;
  }

  /**
   * Creates a new TripGeneratedEvents RecordBuilder.
   * @return A new TripGeneratedEvents RecordBuilder
   */
  public static com.fretron.Model.TripGeneratedEvents.Builder newBuilder() {
    return new com.fretron.Model.TripGeneratedEvents.Builder();
  }

  /**
   * Creates a new TripGeneratedEvents RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TripGeneratedEvents RecordBuilder
   */
  public static com.fretron.Model.TripGeneratedEvents.Builder newBuilder(com.fretron.Model.TripGeneratedEvents.Builder other) {
    return new com.fretron.Model.TripGeneratedEvents.Builder(other);
  }

  /**
   * Creates a new TripGeneratedEvents RecordBuilder by copying an existing TripGeneratedEvents instance.
   * @param other The existing instance to copy.
   * @return A new TripGeneratedEvents RecordBuilder
   */
  public static com.fretron.Model.TripGeneratedEvents.Builder newBuilder(com.fretron.Model.TripGeneratedEvents other) {
    return new com.fretron.Model.TripGeneratedEvents.Builder(other);
  }

  /**
   * RecordBuilder for TripGeneratedEvents instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TripGeneratedEvents>
    implements org.apache.avro.data.RecordBuilder<TripGeneratedEvents> {

    private java.lang.String type;
    private com.fretron.Model.Trip tripPayload;
    private com.fretron.Model.Trip.Builder tripPayloadBuilder;
    private com.fretron.Model.VehicleTripState vehicleTripStatePayload;
    private com.fretron.Model.VehicleTripState.Builder vehicleTripStatePayloadBuilder;
    private com.fretron.Model.VehicleTripStateEvents vehicleTripStateEventPayload;
    private com.fretron.Model.VehicleTripStateEvents.Builder vehicleTripStateEventPayloadBuilder;
    private com.fretron.Model.TrackerTrip trackerTripPayload;
    private com.fretron.Model.TrackerTrip.Builder trackerTripPayloadBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.TripGeneratedEvents.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tripPayload)) {
        this.tripPayload = data().deepCopy(fields()[1].schema(), other.tripPayload);
        fieldSetFlags()[1] = true;
      }
      if (other.hasTripPayloadBuilder()) {
        this.tripPayloadBuilder = com.fretron.Model.Trip.newBuilder(other.getTripPayloadBuilder());
      }
      if (isValidValue(fields()[2], other.vehicleTripStatePayload)) {
        this.vehicleTripStatePayload = data().deepCopy(fields()[2].schema(), other.vehicleTripStatePayload);
        fieldSetFlags()[2] = true;
      }
      if (other.hasVehicleTripStatePayloadBuilder()) {
        this.vehicleTripStatePayloadBuilder = com.fretron.Model.VehicleTripState.newBuilder(other.getVehicleTripStatePayloadBuilder());
      }
      if (isValidValue(fields()[3], other.vehicleTripStateEventPayload)) {
        this.vehicleTripStateEventPayload = data().deepCopy(fields()[3].schema(), other.vehicleTripStateEventPayload);
        fieldSetFlags()[3] = true;
      }
      if (other.hasVehicleTripStateEventPayloadBuilder()) {
        this.vehicleTripStateEventPayloadBuilder = com.fretron.Model.VehicleTripStateEvents.newBuilder(other.getVehicleTripStateEventPayloadBuilder());
      }
      if (isValidValue(fields()[4], other.trackerTripPayload)) {
        this.trackerTripPayload = data().deepCopy(fields()[4].schema(), other.trackerTripPayload);
        fieldSetFlags()[4] = true;
      }
      if (other.hasTrackerTripPayloadBuilder()) {
        this.trackerTripPayloadBuilder = com.fretron.Model.TrackerTrip.newBuilder(other.getTrackerTripPayloadBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing TripGeneratedEvents instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.TripGeneratedEvents other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tripPayload)) {
        this.tripPayload = data().deepCopy(fields()[1].schema(), other.tripPayload);
        fieldSetFlags()[1] = true;
      }
      this.tripPayloadBuilder = null;
      if (isValidValue(fields()[2], other.vehicleTripStatePayload)) {
        this.vehicleTripStatePayload = data().deepCopy(fields()[2].schema(), other.vehicleTripStatePayload);
        fieldSetFlags()[2] = true;
      }
      this.vehicleTripStatePayloadBuilder = null;
      if (isValidValue(fields()[3], other.vehicleTripStateEventPayload)) {
        this.vehicleTripStateEventPayload = data().deepCopy(fields()[3].schema(), other.vehicleTripStateEventPayload);
        fieldSetFlags()[3] = true;
      }
      this.vehicleTripStateEventPayloadBuilder = null;
      if (isValidValue(fields()[4], other.trackerTripPayload)) {
        this.trackerTripPayload = data().deepCopy(fields()[4].schema(), other.trackerTripPayload);
        fieldSetFlags()[4] = true;
      }
      this.trackerTripPayloadBuilder = null;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.fretron.Model.TripGeneratedEvents.Builder setType(java.lang.String value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.fretron.Model.TripGeneratedEvents.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'tripPayload' field.
      * @return The value.
      */
    public com.fretron.Model.Trip getTripPayload() {
      return tripPayload;
    }

    /**
      * Sets the value of the 'tripPayload' field.
      * @param value The value of 'tripPayload'.
      * @return This builder.
      */
    public com.fretron.Model.TripGeneratedEvents.Builder setTripPayload(com.fretron.Model.Trip value) {
      validate(fields()[1], value);
      this.tripPayloadBuilder = null;
      this.tripPayload = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'tripPayload' field has been set.
      * @return True if the 'tripPayload' field has been set, false otherwise.
      */
    public boolean hasTripPayload() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'tripPayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Trip.Builder getTripPayloadBuilder() {
      if (tripPayloadBuilder == null) {
        if (hasTripPayload()) {
          setTripPayloadBuilder(com.fretron.Model.Trip.newBuilder(tripPayload));
        } else {
          setTripPayloadBuilder(com.fretron.Model.Trip.newBuilder());
        }
      }
      return tripPayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'tripPayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.TripGeneratedEvents.Builder setTripPayloadBuilder(com.fretron.Model.Trip.Builder value) {
      clearTripPayload();
      tripPayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'tripPayload' field has an active Builder instance
     * @return True if the 'tripPayload' field has an active Builder instance
     */
    public boolean hasTripPayloadBuilder() {
      return tripPayloadBuilder != null;
    }

    /**
      * Clears the value of the 'tripPayload' field.
      * @return This builder.
      */
    public com.fretron.Model.TripGeneratedEvents.Builder clearTripPayload() {
      tripPayload = null;
      tripPayloadBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleTripStatePayload' field.
      * @return The value.
      */
    public com.fretron.Model.VehicleTripState getVehicleTripStatePayload() {
      return vehicleTripStatePayload;
    }

    /**
      * Sets the value of the 'vehicleTripStatePayload' field.
      * @param value The value of 'vehicleTripStatePayload'.
      * @return This builder.
      */
    public com.fretron.Model.TripGeneratedEvents.Builder setVehicleTripStatePayload(com.fretron.Model.VehicleTripState value) {
      validate(fields()[2], value);
      this.vehicleTripStatePayloadBuilder = null;
      this.vehicleTripStatePayload = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleTripStatePayload' field has been set.
      * @return True if the 'vehicleTripStatePayload' field has been set, false otherwise.
      */
    public boolean hasVehicleTripStatePayload() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'vehicleTripStatePayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.VehicleTripState.Builder getVehicleTripStatePayloadBuilder() {
      if (vehicleTripStatePayloadBuilder == null) {
        if (hasVehicleTripStatePayload()) {
          setVehicleTripStatePayloadBuilder(com.fretron.Model.VehicleTripState.newBuilder(vehicleTripStatePayload));
        } else {
          setVehicleTripStatePayloadBuilder(com.fretron.Model.VehicleTripState.newBuilder());
        }
      }
      return vehicleTripStatePayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'vehicleTripStatePayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.TripGeneratedEvents.Builder setVehicleTripStatePayloadBuilder(com.fretron.Model.VehicleTripState.Builder value) {
      clearVehicleTripStatePayload();
      vehicleTripStatePayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'vehicleTripStatePayload' field has an active Builder instance
     * @return True if the 'vehicleTripStatePayload' field has an active Builder instance
     */
    public boolean hasVehicleTripStatePayloadBuilder() {
      return vehicleTripStatePayloadBuilder != null;
    }

    /**
      * Clears the value of the 'vehicleTripStatePayload' field.
      * @return This builder.
      */
    public com.fretron.Model.TripGeneratedEvents.Builder clearVehicleTripStatePayload() {
      vehicleTripStatePayload = null;
      vehicleTripStatePayloadBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleTripStateEventPayload' field.
      * @return The value.
      */
    public com.fretron.Model.VehicleTripStateEvents getVehicleTripStateEventPayload() {
      return vehicleTripStateEventPayload;
    }

    /**
      * Sets the value of the 'vehicleTripStateEventPayload' field.
      * @param value The value of 'vehicleTripStateEventPayload'.
      * @return This builder.
      */
    public com.fretron.Model.TripGeneratedEvents.Builder setVehicleTripStateEventPayload(com.fretron.Model.VehicleTripStateEvents value) {
      validate(fields()[3], value);
      this.vehicleTripStateEventPayloadBuilder = null;
      this.vehicleTripStateEventPayload = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleTripStateEventPayload' field has been set.
      * @return True if the 'vehicleTripStateEventPayload' field has been set, false otherwise.
      */
    public boolean hasVehicleTripStateEventPayload() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'vehicleTripStateEventPayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.VehicleTripStateEvents.Builder getVehicleTripStateEventPayloadBuilder() {
      if (vehicleTripStateEventPayloadBuilder == null) {
        if (hasVehicleTripStateEventPayload()) {
          setVehicleTripStateEventPayloadBuilder(com.fretron.Model.VehicleTripStateEvents.newBuilder(vehicleTripStateEventPayload));
        } else {
          setVehicleTripStateEventPayloadBuilder(com.fretron.Model.VehicleTripStateEvents.newBuilder());
        }
      }
      return vehicleTripStateEventPayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'vehicleTripStateEventPayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.TripGeneratedEvents.Builder setVehicleTripStateEventPayloadBuilder(com.fretron.Model.VehicleTripStateEvents.Builder value) {
      clearVehicleTripStateEventPayload();
      vehicleTripStateEventPayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'vehicleTripStateEventPayload' field has an active Builder instance
     * @return True if the 'vehicleTripStateEventPayload' field has an active Builder instance
     */
    public boolean hasVehicleTripStateEventPayloadBuilder() {
      return vehicleTripStateEventPayloadBuilder != null;
    }

    /**
      * Clears the value of the 'vehicleTripStateEventPayload' field.
      * @return This builder.
      */
    public com.fretron.Model.TripGeneratedEvents.Builder clearVehicleTripStateEventPayload() {
      vehicleTripStateEventPayload = null;
      vehicleTripStateEventPayloadBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'trackerTripPayload' field.
      * @return The value.
      */
    public com.fretron.Model.TrackerTrip getTrackerTripPayload() {
      return trackerTripPayload;
    }

    /**
      * Sets the value of the 'trackerTripPayload' field.
      * @param value The value of 'trackerTripPayload'.
      * @return This builder.
      */
    public com.fretron.Model.TripGeneratedEvents.Builder setTrackerTripPayload(com.fretron.Model.TrackerTrip value) {
      validate(fields()[4], value);
      this.trackerTripPayloadBuilder = null;
      this.trackerTripPayload = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'trackerTripPayload' field has been set.
      * @return True if the 'trackerTripPayload' field has been set, false otherwise.
      */
    public boolean hasTrackerTripPayload() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'trackerTripPayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.TrackerTrip.Builder getTrackerTripPayloadBuilder() {
      if (trackerTripPayloadBuilder == null) {
        if (hasTrackerTripPayload()) {
          setTrackerTripPayloadBuilder(com.fretron.Model.TrackerTrip.newBuilder(trackerTripPayload));
        } else {
          setTrackerTripPayloadBuilder(com.fretron.Model.TrackerTrip.newBuilder());
        }
      }
      return trackerTripPayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'trackerTripPayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.TripGeneratedEvents.Builder setTrackerTripPayloadBuilder(com.fretron.Model.TrackerTrip.Builder value) {
      clearTrackerTripPayload();
      trackerTripPayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'trackerTripPayload' field has an active Builder instance
     * @return True if the 'trackerTripPayload' field has an active Builder instance
     */
    public boolean hasTrackerTripPayloadBuilder() {
      return trackerTripPayloadBuilder != null;
    }

    /**
      * Clears the value of the 'trackerTripPayload' field.
      * @return This builder.
      */
    public com.fretron.Model.TripGeneratedEvents.Builder clearTrackerTripPayload() {
      trackerTripPayload = null;
      trackerTripPayloadBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public TripGeneratedEvents build() {
      try {
        TripGeneratedEvents record = new TripGeneratedEvents();
        record.type = fieldSetFlags()[0] ? this.type : (java.lang.String) defaultValue(fields()[0]);
        if (tripPayloadBuilder != null) {
          record.tripPayload = this.tripPayloadBuilder.build();
        } else {
          record.tripPayload = fieldSetFlags()[1] ? this.tripPayload : (com.fretron.Model.Trip) defaultValue(fields()[1]);
        }
        if (vehicleTripStatePayloadBuilder != null) {
          record.vehicleTripStatePayload = this.vehicleTripStatePayloadBuilder.build();
        } else {
          record.vehicleTripStatePayload = fieldSetFlags()[2] ? this.vehicleTripStatePayload : (com.fretron.Model.VehicleTripState) defaultValue(fields()[2]);
        }
        if (vehicleTripStateEventPayloadBuilder != null) {
          record.vehicleTripStateEventPayload = this.vehicleTripStateEventPayloadBuilder.build();
        } else {
          record.vehicleTripStateEventPayload = fieldSetFlags()[3] ? this.vehicleTripStateEventPayload : (com.fretron.Model.VehicleTripStateEvents) defaultValue(fields()[3]);
        }
        if (trackerTripPayloadBuilder != null) {
          record.trackerTripPayload = this.trackerTripPayloadBuilder.build();
        } else {
          record.trackerTripPayload = fieldSetFlags()[4] ? this.trackerTripPayload : (com.fretron.Model.TrackerTrip) defaultValue(fields()[4]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

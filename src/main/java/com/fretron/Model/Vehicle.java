/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Vehicle extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4250279432461913120L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Vehicle\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"customerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleModel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleMake\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vtsDeviceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleRegistrationNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"associatedWith\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isDeleted\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"updateTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"groups\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sharedWith\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"driverId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String customerId;
  @Deprecated public java.lang.String vehicleType;
  @Deprecated public java.lang.String vehicleModel;
  @Deprecated public java.lang.String vehicleMake;
  @Deprecated public java.lang.String vtsDeviceId;
  @Deprecated public java.lang.String vehicleRegistrationNumber;
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String associatedWith;
  @Deprecated public java.lang.String isDeleted;
  @Deprecated public java.lang.Long createTime;
  @Deprecated public java.lang.Long updateTime;
  @Deprecated public java.util.List<java.lang.String> groups;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.util.List<java.lang.String> sharedWith;
  @Deprecated public java.lang.String driverId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Vehicle() {}

  /**
   * All-args constructor.
   * @param customerId The new value for customerId
   * @param vehicleType The new value for vehicleType
   * @param vehicleModel The new value for vehicleModel
   * @param vehicleMake The new value for vehicleMake
   * @param vtsDeviceId The new value for vtsDeviceId
   * @param vehicleRegistrationNumber The new value for vehicleRegistrationNumber
   * @param uuid The new value for uuid
   * @param associatedWith The new value for associatedWith
   * @param isDeleted The new value for isDeleted
   * @param createTime The new value for createTime
   * @param updateTime The new value for updateTime
   * @param groups The new value for groups
   * @param orgId The new value for orgId
   * @param sharedWith The new value for sharedWith
   * @param driverId The new value for driverId
   */
  public Vehicle(java.lang.String customerId, java.lang.String vehicleType, java.lang.String vehicleModel, java.lang.String vehicleMake, java.lang.String vtsDeviceId, java.lang.String vehicleRegistrationNumber, java.lang.String uuid, java.lang.String associatedWith, java.lang.String isDeleted, java.lang.Long createTime, java.lang.Long updateTime, java.util.List<java.lang.String> groups, java.lang.String orgId, java.util.List<java.lang.String> sharedWith, java.lang.String driverId) {
    this.customerId = customerId;
    this.vehicleType = vehicleType;
    this.vehicleModel = vehicleModel;
    this.vehicleMake = vehicleMake;
    this.vtsDeviceId = vtsDeviceId;
    this.vehicleRegistrationNumber = vehicleRegistrationNumber;
    this.uuid = uuid;
    this.associatedWith = associatedWith;
    this.isDeleted = isDeleted;
    this.createTime = createTime;
    this.updateTime = updateTime;
    this.groups = groups;
    this.orgId = orgId;
    this.sharedWith = sharedWith;
    this.driverId = driverId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return customerId;
    case 1: return vehicleType;
    case 2: return vehicleModel;
    case 3: return vehicleMake;
    case 4: return vtsDeviceId;
    case 5: return vehicleRegistrationNumber;
    case 6: return uuid;
    case 7: return associatedWith;
    case 8: return isDeleted;
    case 9: return createTime;
    case 10: return updateTime;
    case 11: return groups;
    case 12: return orgId;
    case 13: return sharedWith;
    case 14: return driverId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: customerId = (java.lang.String)value$; break;
    case 1: vehicleType = (java.lang.String)value$; break;
    case 2: vehicleModel = (java.lang.String)value$; break;
    case 3: vehicleMake = (java.lang.String)value$; break;
    case 4: vtsDeviceId = (java.lang.String)value$; break;
    case 5: vehicleRegistrationNumber = (java.lang.String)value$; break;
    case 6: uuid = (java.lang.String)value$; break;
    case 7: associatedWith = (java.lang.String)value$; break;
    case 8: isDeleted = (java.lang.String)value$; break;
    case 9: createTime = (java.lang.Long)value$; break;
    case 10: updateTime = (java.lang.Long)value$; break;
    case 11: groups = (java.util.List<java.lang.String>)value$; break;
    case 12: orgId = (java.lang.String)value$; break;
    case 13: sharedWith = (java.util.List<java.lang.String>)value$; break;
    case 14: driverId = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.String getCustomerId() {
    return customerId;
  }

  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.String value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'vehicleType' field.
   * @return The value of the 'vehicleType' field.
   */
  public java.lang.String getVehicleType() {
    return vehicleType;
  }

  /**
   * Sets the value of the 'vehicleType' field.
   * @param value the value to set.
   */
  public void setVehicleType(java.lang.String value) {
    this.vehicleType = value;
  }

  /**
   * Gets the value of the 'vehicleModel' field.
   * @return The value of the 'vehicleModel' field.
   */
  public java.lang.String getVehicleModel() {
    return vehicleModel;
  }

  /**
   * Sets the value of the 'vehicleModel' field.
   * @param value the value to set.
   */
  public void setVehicleModel(java.lang.String value) {
    this.vehicleModel = value;
  }

  /**
   * Gets the value of the 'vehicleMake' field.
   * @return The value of the 'vehicleMake' field.
   */
  public java.lang.String getVehicleMake() {
    return vehicleMake;
  }

  /**
   * Sets the value of the 'vehicleMake' field.
   * @param value the value to set.
   */
  public void setVehicleMake(java.lang.String value) {
    this.vehicleMake = value;
  }

  /**
   * Gets the value of the 'vtsDeviceId' field.
   * @return The value of the 'vtsDeviceId' field.
   */
  public java.lang.String getVtsDeviceId() {
    return vtsDeviceId;
  }

  /**
   * Sets the value of the 'vtsDeviceId' field.
   * @param value the value to set.
   */
  public void setVtsDeviceId(java.lang.String value) {
    this.vtsDeviceId = value;
  }

  /**
   * Gets the value of the 'vehicleRegistrationNumber' field.
   * @return The value of the 'vehicleRegistrationNumber' field.
   */
  public java.lang.String getVehicleRegistrationNumber() {
    return vehicleRegistrationNumber;
  }

  /**
   * Sets the value of the 'vehicleRegistrationNumber' field.
   * @param value the value to set.
   */
  public void setVehicleRegistrationNumber(java.lang.String value) {
    this.vehicleRegistrationNumber = value;
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'associatedWith' field.
   * @return The value of the 'associatedWith' field.
   */
  public java.lang.String getAssociatedWith() {
    return associatedWith;
  }

  /**
   * Sets the value of the 'associatedWith' field.
   * @param value the value to set.
   */
  public void setAssociatedWith(java.lang.String value) {
    this.associatedWith = value;
  }

  /**
   * Gets the value of the 'isDeleted' field.
   * @return The value of the 'isDeleted' field.
   */
  public java.lang.String getIsDeleted() {
    return isDeleted;
  }

  /**
   * Sets the value of the 'isDeleted' field.
   * @param value the value to set.
   */
  public void setIsDeleted(java.lang.String value) {
    this.isDeleted = value;
  }

  /**
   * Gets the value of the 'createTime' field.
   * @return The value of the 'createTime' field.
   */
  public java.lang.Long getCreateTime() {
    return createTime;
  }

  /**
   * Sets the value of the 'createTime' field.
   * @param value the value to set.
   */
  public void setCreateTime(java.lang.Long value) {
    this.createTime = value;
  }

  /**
   * Gets the value of the 'updateTime' field.
   * @return The value of the 'updateTime' field.
   */
  public java.lang.Long getUpdateTime() {
    return updateTime;
  }

  /**
   * Sets the value of the 'updateTime' field.
   * @param value the value to set.
   */
  public void setUpdateTime(java.lang.Long value) {
    this.updateTime = value;
  }

  /**
   * Gets the value of the 'groups' field.
   * @return The value of the 'groups' field.
   */
  public java.util.List<java.lang.String> getGroups() {
    return groups;
  }

  /**
   * Sets the value of the 'groups' field.
   * @param value the value to set.
   */
  public void setGroups(java.util.List<java.lang.String> value) {
    this.groups = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'sharedWith' field.
   * @return The value of the 'sharedWith' field.
   */
  public java.util.List<java.lang.String> getSharedWith() {
    return sharedWith;
  }

  /**
   * Sets the value of the 'sharedWith' field.
   * @param value the value to set.
   */
  public void setSharedWith(java.util.List<java.lang.String> value) {
    this.sharedWith = value;
  }

  /**
   * Gets the value of the 'driverId' field.
   * @return The value of the 'driverId' field.
   */
  public java.lang.String getDriverId() {
    return driverId;
  }

  /**
   * Sets the value of the 'driverId' field.
   * @param value the value to set.
   */
  public void setDriverId(java.lang.String value) {
    this.driverId = value;
  }

  /**
   * Creates a new Vehicle RecordBuilder.
   * @return A new Vehicle RecordBuilder
   */
  public static com.fretron.Model.Vehicle.Builder newBuilder() {
    return new com.fretron.Model.Vehicle.Builder();
  }

  /**
   * Creates a new Vehicle RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Vehicle RecordBuilder
   */
  public static com.fretron.Model.Vehicle.Builder newBuilder(com.fretron.Model.Vehicle.Builder other) {
    return new com.fretron.Model.Vehicle.Builder(other);
  }

  /**
   * Creates a new Vehicle RecordBuilder by copying an existing Vehicle instance.
   * @param other The existing instance to copy.
   * @return A new Vehicle RecordBuilder
   */
  public static com.fretron.Model.Vehicle.Builder newBuilder(com.fretron.Model.Vehicle other) {
    return new com.fretron.Model.Vehicle.Builder(other);
  }

  /**
   * RecordBuilder for Vehicle instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Vehicle>
    implements org.apache.avro.data.RecordBuilder<Vehicle> {

    private java.lang.String customerId;
    private java.lang.String vehicleType;
    private java.lang.String vehicleModel;
    private java.lang.String vehicleMake;
    private java.lang.String vtsDeviceId;
    private java.lang.String vehicleRegistrationNumber;
    private java.lang.String uuid;
    private java.lang.String associatedWith;
    private java.lang.String isDeleted;
    private java.lang.Long createTime;
    private java.lang.Long updateTime;
    private java.util.List<java.lang.String> groups;
    private java.lang.String orgId;
    private java.util.List<java.lang.String> sharedWith;
    private java.lang.String driverId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.Vehicle.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.customerId)) {
        this.customerId = data().deepCopy(fields()[0].schema(), other.customerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vehicleType)) {
        this.vehicleType = data().deepCopy(fields()[1].schema(), other.vehicleType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.vehicleModel)) {
        this.vehicleModel = data().deepCopy(fields()[2].schema(), other.vehicleModel);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vehicleMake)) {
        this.vehicleMake = data().deepCopy(fields()[3].schema(), other.vehicleMake);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.vtsDeviceId)) {
        this.vtsDeviceId = data().deepCopy(fields()[4].schema(), other.vtsDeviceId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.vehicleRegistrationNumber)) {
        this.vehicleRegistrationNumber = data().deepCopy(fields()[5].schema(), other.vehicleRegistrationNumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.uuid)) {
        this.uuid = data().deepCopy(fields()[6].schema(), other.uuid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.associatedWith)) {
        this.associatedWith = data().deepCopy(fields()[7].schema(), other.associatedWith);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.isDeleted)) {
        this.isDeleted = data().deepCopy(fields()[8].schema(), other.isDeleted);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.createTime)) {
        this.createTime = data().deepCopy(fields()[9].schema(), other.createTime);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.updateTime)) {
        this.updateTime = data().deepCopy(fields()[10].schema(), other.updateTime);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.groups)) {
        this.groups = data().deepCopy(fields()[11].schema(), other.groups);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.orgId)) {
        this.orgId = data().deepCopy(fields()[12].schema(), other.orgId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.sharedWith)) {
        this.sharedWith = data().deepCopy(fields()[13].schema(), other.sharedWith);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.driverId)) {
        this.driverId = data().deepCopy(fields()[14].schema(), other.driverId);
        fieldSetFlags()[14] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Vehicle instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.Vehicle other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.customerId)) {
        this.customerId = data().deepCopy(fields()[0].schema(), other.customerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vehicleType)) {
        this.vehicleType = data().deepCopy(fields()[1].schema(), other.vehicleType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.vehicleModel)) {
        this.vehicleModel = data().deepCopy(fields()[2].schema(), other.vehicleModel);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vehicleMake)) {
        this.vehicleMake = data().deepCopy(fields()[3].schema(), other.vehicleMake);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.vtsDeviceId)) {
        this.vtsDeviceId = data().deepCopy(fields()[4].schema(), other.vtsDeviceId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.vehicleRegistrationNumber)) {
        this.vehicleRegistrationNumber = data().deepCopy(fields()[5].schema(), other.vehicleRegistrationNumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.uuid)) {
        this.uuid = data().deepCopy(fields()[6].schema(), other.uuid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.associatedWith)) {
        this.associatedWith = data().deepCopy(fields()[7].schema(), other.associatedWith);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.isDeleted)) {
        this.isDeleted = data().deepCopy(fields()[8].schema(), other.isDeleted);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.createTime)) {
        this.createTime = data().deepCopy(fields()[9].schema(), other.createTime);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.updateTime)) {
        this.updateTime = data().deepCopy(fields()[10].schema(), other.updateTime);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.groups)) {
        this.groups = data().deepCopy(fields()[11].schema(), other.groups);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.orgId)) {
        this.orgId = data().deepCopy(fields()[12].schema(), other.orgId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.sharedWith)) {
        this.sharedWith = data().deepCopy(fields()[13].schema(), other.sharedWith);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.driverId)) {
        this.driverId = data().deepCopy(fields()[14].schema(), other.driverId);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.String getCustomerId() {
      return customerId;
    }

    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setCustomerId(java.lang.String value) {
      validate(fields()[0], value);
      this.customerId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleType' field.
      * @return The value.
      */
    public java.lang.String getVehicleType() {
      return vehicleType;
    }

    /**
      * Sets the value of the 'vehicleType' field.
      * @param value The value of 'vehicleType'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setVehicleType(java.lang.String value) {
      validate(fields()[1], value);
      this.vehicleType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleType' field has been set.
      * @return True if the 'vehicleType' field has been set, false otherwise.
      */
    public boolean hasVehicleType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'vehicleType' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearVehicleType() {
      vehicleType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleModel' field.
      * @return The value.
      */
    public java.lang.String getVehicleModel() {
      return vehicleModel;
    }

    /**
      * Sets the value of the 'vehicleModel' field.
      * @param value The value of 'vehicleModel'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setVehicleModel(java.lang.String value) {
      validate(fields()[2], value);
      this.vehicleModel = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleModel' field has been set.
      * @return True if the 'vehicleModel' field has been set, false otherwise.
      */
    public boolean hasVehicleModel() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'vehicleModel' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearVehicleModel() {
      vehicleModel = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleMake' field.
      * @return The value.
      */
    public java.lang.String getVehicleMake() {
      return vehicleMake;
    }

    /**
      * Sets the value of the 'vehicleMake' field.
      * @param value The value of 'vehicleMake'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setVehicleMake(java.lang.String value) {
      validate(fields()[3], value);
      this.vehicleMake = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleMake' field has been set.
      * @return True if the 'vehicleMake' field has been set, false otherwise.
      */
    public boolean hasVehicleMake() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'vehicleMake' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearVehicleMake() {
      vehicleMake = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'vtsDeviceId' field.
      * @return The value.
      */
    public java.lang.String getVtsDeviceId() {
      return vtsDeviceId;
    }

    /**
      * Sets the value of the 'vtsDeviceId' field.
      * @param value The value of 'vtsDeviceId'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setVtsDeviceId(java.lang.String value) {
      validate(fields()[4], value);
      this.vtsDeviceId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'vtsDeviceId' field has been set.
      * @return True if the 'vtsDeviceId' field has been set, false otherwise.
      */
    public boolean hasVtsDeviceId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'vtsDeviceId' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearVtsDeviceId() {
      vtsDeviceId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleRegistrationNumber' field.
      * @return The value.
      */
    public java.lang.String getVehicleRegistrationNumber() {
      return vehicleRegistrationNumber;
    }

    /**
      * Sets the value of the 'vehicleRegistrationNumber' field.
      * @param value The value of 'vehicleRegistrationNumber'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setVehicleRegistrationNumber(java.lang.String value) {
      validate(fields()[5], value);
      this.vehicleRegistrationNumber = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleRegistrationNumber' field has been set.
      * @return True if the 'vehicleRegistrationNumber' field has been set, false otherwise.
      */
    public boolean hasVehicleRegistrationNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'vehicleRegistrationNumber' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearVehicleRegistrationNumber() {
      vehicleRegistrationNumber = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setUuid(java.lang.String value) {
      validate(fields()[6], value);
      this.uuid = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'associatedWith' field.
      * @return The value.
      */
    public java.lang.String getAssociatedWith() {
      return associatedWith;
    }

    /**
      * Sets the value of the 'associatedWith' field.
      * @param value The value of 'associatedWith'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setAssociatedWith(java.lang.String value) {
      validate(fields()[7], value);
      this.associatedWith = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'associatedWith' field has been set.
      * @return True if the 'associatedWith' field has been set, false otherwise.
      */
    public boolean hasAssociatedWith() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'associatedWith' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearAssociatedWith() {
      associatedWith = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'isDeleted' field.
      * @return The value.
      */
    public java.lang.String getIsDeleted() {
      return isDeleted;
    }

    /**
      * Sets the value of the 'isDeleted' field.
      * @param value The value of 'isDeleted'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setIsDeleted(java.lang.String value) {
      validate(fields()[8], value);
      this.isDeleted = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'isDeleted' field has been set.
      * @return True if the 'isDeleted' field has been set, false otherwise.
      */
    public boolean hasIsDeleted() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'isDeleted' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearIsDeleted() {
      isDeleted = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'createTime' field.
      * @return The value.
      */
    public java.lang.Long getCreateTime() {
      return createTime;
    }

    /**
      * Sets the value of the 'createTime' field.
      * @param value The value of 'createTime'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setCreateTime(java.lang.Long value) {
      validate(fields()[9], value);
      this.createTime = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'createTime' field has been set.
      * @return True if the 'createTime' field has been set, false otherwise.
      */
    public boolean hasCreateTime() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'createTime' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearCreateTime() {
      createTime = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'updateTime' field.
      * @return The value.
      */
    public java.lang.Long getUpdateTime() {
      return updateTime;
    }

    /**
      * Sets the value of the 'updateTime' field.
      * @param value The value of 'updateTime'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setUpdateTime(java.lang.Long value) {
      validate(fields()[10], value);
      this.updateTime = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'updateTime' field has been set.
      * @return True if the 'updateTime' field has been set, false otherwise.
      */
    public boolean hasUpdateTime() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'updateTime' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearUpdateTime() {
      updateTime = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'groups' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getGroups() {
      return groups;
    }

    /**
      * Sets the value of the 'groups' field.
      * @param value The value of 'groups'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setGroups(java.util.List<java.lang.String> value) {
      validate(fields()[11], value);
      this.groups = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'groups' field has been set.
      * @return True if the 'groups' field has been set, false otherwise.
      */
    public boolean hasGroups() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'groups' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearGroups() {
      groups = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setOrgId(java.lang.String value) {
      validate(fields()[12], value);
      this.orgId = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'sharedWith' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getSharedWith() {
      return sharedWith;
    }

    /**
      * Sets the value of the 'sharedWith' field.
      * @param value The value of 'sharedWith'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setSharedWith(java.util.List<java.lang.String> value) {
      validate(fields()[13], value);
      this.sharedWith = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'sharedWith' field has been set.
      * @return True if the 'sharedWith' field has been set, false otherwise.
      */
    public boolean hasSharedWith() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'sharedWith' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearSharedWith() {
      sharedWith = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'driverId' field.
      * @return The value.
      */
    public java.lang.String getDriverId() {
      return driverId;
    }

    /**
      * Sets the value of the 'driverId' field.
      * @param value The value of 'driverId'.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder setDriverId(java.lang.String value) {
      validate(fields()[14], value);
      this.driverId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'driverId' field has been set.
      * @return True if the 'driverId' field has been set, false otherwise.
      */
    public boolean hasDriverId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'driverId' field.
      * @return This builder.
      */
    public com.fretron.Model.Vehicle.Builder clearDriverId() {
      driverId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    public Vehicle build() {
      try {
        Vehicle record = new Vehicle();
        record.customerId = fieldSetFlags()[0] ? this.customerId : (java.lang.String) defaultValue(fields()[0]);
        record.vehicleType = fieldSetFlags()[1] ? this.vehicleType : (java.lang.String) defaultValue(fields()[1]);
        record.vehicleModel = fieldSetFlags()[2] ? this.vehicleModel : (java.lang.String) defaultValue(fields()[2]);
        record.vehicleMake = fieldSetFlags()[3] ? this.vehicleMake : (java.lang.String) defaultValue(fields()[3]);
        record.vtsDeviceId = fieldSetFlags()[4] ? this.vtsDeviceId : (java.lang.String) defaultValue(fields()[4]);
        record.vehicleRegistrationNumber = fieldSetFlags()[5] ? this.vehicleRegistrationNumber : (java.lang.String) defaultValue(fields()[5]);
        record.uuid = fieldSetFlags()[6] ? this.uuid : (java.lang.String) defaultValue(fields()[6]);
        record.associatedWith = fieldSetFlags()[7] ? this.associatedWith : (java.lang.String) defaultValue(fields()[7]);
        record.isDeleted = fieldSetFlags()[8] ? this.isDeleted : (java.lang.String) defaultValue(fields()[8]);
        record.createTime = fieldSetFlags()[9] ? this.createTime : (java.lang.Long) defaultValue(fields()[9]);
        record.updateTime = fieldSetFlags()[10] ? this.updateTime : (java.lang.Long) defaultValue(fields()[10]);
        record.groups = fieldSetFlags()[11] ? this.groups : (java.util.List<java.lang.String>) defaultValue(fields()[11]);
        record.orgId = fieldSetFlags()[12] ? this.orgId : (java.lang.String) defaultValue(fields()[12]);
        record.sharedWith = fieldSetFlags()[13] ? this.sharedWith : (java.util.List<java.lang.String>) defaultValue(fields()[13]);
        record.driverId = fieldSetFlags()[14] ? this.driverId : (java.lang.String) defaultValue(fields()[14]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

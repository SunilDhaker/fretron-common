/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Auction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8496791015079742332L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Auction\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"numberOfVehicles\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"origin\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Place\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"center\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"centerCoordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"suggestedRadius\",\"type\":\"double\",\"default\":null},{\"name\":\"viewport\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ViewPort\",\"fields\":[{\"name\":\"northeast\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"southwest\",\"type\":[\"null\",\"Location\"],\"default\":null}]}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hubId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"district\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subDistrict\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"boundary\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null},{\"name\":\"places\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Place\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isOwned\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"geoJsonBoundry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geometry\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"coordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"destination\",\"type\":[\"null\",\"Place\"],\"default\":null},{\"name\":\"remarks\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"alternateOrigins\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Place\"}],\"default\":null},{\"name\":\"alternateDestinations\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Place\"}],\"default\":null},{\"name\":\"bids\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Bid\",\"fields\":[{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"businessPartnerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"partnerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"numberOfVehicles\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"rank\",\"type\":[\"null\",\"double\"],\"default\":null}]}}],\"default\":null},{\"name\":\"price\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"placementDate\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"allowedTransporters\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"allowedMaterial\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"allowedVehicleTypes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"isShowTopRankToOthers\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"purchaseEnquiries\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"tnCs\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ContractTerms\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"round\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AuctionRound\",\"fields\":[{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"endTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"}]}],\"default\":null},{\"name\":\"branch\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"OrgOffice\",\"fields\":[{\"name\":\"_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"geoLocation\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"contacts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Contact\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"emails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"mobileNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"branchName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"regionName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"zoneName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Updates\",\"fields\":[{\"name\":\"forwardReasons\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfInformation\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"n","ame\":\"updateType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"forwardedFrom\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",\"Updates\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String externalId;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.String status;
  @Deprecated public java.lang.String orderId;
  @Deprecated public java.lang.Integer numberOfVehicles;
  @Deprecated public com.fretron.Model.Place origin;
  @Deprecated public com.fretron.Model.Place destination;
  @Deprecated public java.util.List<java.lang.String> remarks;
  @Deprecated public java.util.List<com.fretron.Model.Place> alternateOrigins;
  @Deprecated public java.util.List<com.fretron.Model.Place> alternateDestinations;
  @Deprecated public java.util.List<com.fretron.Model.Bid> bids;
  @Deprecated public java.lang.Double price;
  @Deprecated public java.lang.Long placementDate;
  @Deprecated public java.util.List<java.lang.String> allowedTransporters;
  @Deprecated public java.util.List<java.lang.String> allowedMaterial;
  @Deprecated public java.util.List<java.lang.String> allowedVehicleTypes;
  @Deprecated public java.lang.Boolean isShowTopRankToOthers;
  @Deprecated public java.util.List<java.lang.String> purchaseEnquiries;
  @Deprecated public java.util.List<com.fretron.Model.ContractTerms> tnCs;
  @Deprecated public com.fretron.Model.AuctionRound round;
  @Deprecated public com.fretron.Model.OrgOffice branch;
  @Deprecated public com.fretron.Model.Updates updates;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Auction() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param externalId The new value for externalId
   * @param orgId The new value for orgId
   * @param status The new value for status
   * @param orderId The new value for orderId
   * @param numberOfVehicles The new value for numberOfVehicles
   * @param origin The new value for origin
   * @param destination The new value for destination
   * @param remarks The new value for remarks
   * @param alternateOrigins The new value for alternateOrigins
   * @param alternateDestinations The new value for alternateDestinations
   * @param bids The new value for bids
   * @param price The new value for price
   * @param placementDate The new value for placementDate
   * @param allowedTransporters The new value for allowedTransporters
   * @param allowedMaterial The new value for allowedMaterial
   * @param allowedVehicleTypes The new value for allowedVehicleTypes
   * @param isShowTopRankToOthers The new value for isShowTopRankToOthers
   * @param purchaseEnquiries The new value for purchaseEnquiries
   * @param tnCs The new value for tnCs
   * @param round The new value for round
   * @param branch The new value for branch
   * @param updates The new value for updates
   */
  public Auction(java.lang.String uuid, java.lang.String externalId, java.lang.String orgId, java.lang.String status, java.lang.String orderId, java.lang.Integer numberOfVehicles, com.fretron.Model.Place origin, com.fretron.Model.Place destination, java.util.List<java.lang.String> remarks, java.util.List<com.fretron.Model.Place> alternateOrigins, java.util.List<com.fretron.Model.Place> alternateDestinations, java.util.List<com.fretron.Model.Bid> bids, java.lang.Double price, java.lang.Long placementDate, java.util.List<java.lang.String> allowedTransporters, java.util.List<java.lang.String> allowedMaterial, java.util.List<java.lang.String> allowedVehicleTypes, java.lang.Boolean isShowTopRankToOthers, java.util.List<java.lang.String> purchaseEnquiries, java.util.List<com.fretron.Model.ContractTerms> tnCs, com.fretron.Model.AuctionRound round, com.fretron.Model.OrgOffice branch, com.fretron.Model.Updates updates) {
    this.uuid = uuid;
    this.externalId = externalId;
    this.orgId = orgId;
    this.status = status;
    this.orderId = orderId;
    this.numberOfVehicles = numberOfVehicles;
    this.origin = origin;
    this.destination = destination;
    this.remarks = remarks;
    this.alternateOrigins = alternateOrigins;
    this.alternateDestinations = alternateDestinations;
    this.bids = bids;
    this.price = price;
    this.placementDate = placementDate;
    this.allowedTransporters = allowedTransporters;
    this.allowedMaterial = allowedMaterial;
    this.allowedVehicleTypes = allowedVehicleTypes;
    this.isShowTopRankToOthers = isShowTopRankToOthers;
    this.purchaseEnquiries = purchaseEnquiries;
    this.tnCs = tnCs;
    this.round = round;
    this.branch = branch;
    this.updates = updates;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return externalId;
    case 2: return orgId;
    case 3: return status;
    case 4: return orderId;
    case 5: return numberOfVehicles;
    case 6: return origin;
    case 7: return destination;
    case 8: return remarks;
    case 9: return alternateOrigins;
    case 10: return alternateDestinations;
    case 11: return bids;
    case 12: return price;
    case 13: return placementDate;
    case 14: return allowedTransporters;
    case 15: return allowedMaterial;
    case 16: return allowedVehicleTypes;
    case 17: return isShowTopRankToOthers;
    case 18: return purchaseEnquiries;
    case 19: return tnCs;
    case 20: return round;
    case 21: return branch;
    case 22: return updates;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: externalId = (java.lang.String)value$; break;
    case 2: orgId = (java.lang.String)value$; break;
    case 3: status = (java.lang.String)value$; break;
    case 4: orderId = (java.lang.String)value$; break;
    case 5: numberOfVehicles = (java.lang.Integer)value$; break;
    case 6: origin = (com.fretron.Model.Place)value$; break;
    case 7: destination = (com.fretron.Model.Place)value$; break;
    case 8: remarks = (java.util.List<java.lang.String>)value$; break;
    case 9: alternateOrigins = (java.util.List<com.fretron.Model.Place>)value$; break;
    case 10: alternateDestinations = (java.util.List<com.fretron.Model.Place>)value$; break;
    case 11: bids = (java.util.List<com.fretron.Model.Bid>)value$; break;
    case 12: price = (java.lang.Double)value$; break;
    case 13: placementDate = (java.lang.Long)value$; break;
    case 14: allowedTransporters = (java.util.List<java.lang.String>)value$; break;
    case 15: allowedMaterial = (java.util.List<java.lang.String>)value$; break;
    case 16: allowedVehicleTypes = (java.util.List<java.lang.String>)value$; break;
    case 17: isShowTopRankToOthers = (java.lang.Boolean)value$; break;
    case 18: purchaseEnquiries = (java.util.List<java.lang.String>)value$; break;
    case 19: tnCs = (java.util.List<com.fretron.Model.ContractTerms>)value$; break;
    case 20: round = (com.fretron.Model.AuctionRound)value$; break;
    case 21: branch = (com.fretron.Model.OrgOffice)value$; break;
    case 22: updates = (com.fretron.Model.Updates)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'externalId' field.
   * @return The value of the 'externalId' field.
   */
  public java.lang.String getExternalId() {
    return externalId;
  }

  /**
   * Sets the value of the 'externalId' field.
   * @param value the value to set.
   */
  public void setExternalId(java.lang.String value) {
    this.externalId = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return The value of the 'orderId' field.
   */
  public java.lang.String getOrderId() {
    return orderId;
  }

  /**
   * Sets the value of the 'orderId' field.
   * @param value the value to set.
   */
  public void setOrderId(java.lang.String value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'numberOfVehicles' field.
   * @return The value of the 'numberOfVehicles' field.
   */
  public java.lang.Integer getNumberOfVehicles() {
    return numberOfVehicles;
  }

  /**
   * Sets the value of the 'numberOfVehicles' field.
   * @param value the value to set.
   */
  public void setNumberOfVehicles(java.lang.Integer value) {
    this.numberOfVehicles = value;
  }

  /**
   * Gets the value of the 'origin' field.
   * @return The value of the 'origin' field.
   */
  public com.fretron.Model.Place getOrigin() {
    return origin;
  }

  /**
   * Sets the value of the 'origin' field.
   * @param value the value to set.
   */
  public void setOrigin(com.fretron.Model.Place value) {
    this.origin = value;
  }

  /**
   * Gets the value of the 'destination' field.
   * @return The value of the 'destination' field.
   */
  public com.fretron.Model.Place getDestination() {
    return destination;
  }

  /**
   * Sets the value of the 'destination' field.
   * @param value the value to set.
   */
  public void setDestination(com.fretron.Model.Place value) {
    this.destination = value;
  }

  /**
   * Gets the value of the 'remarks' field.
   * @return The value of the 'remarks' field.
   */
  public java.util.List<java.lang.String> getRemarks() {
    return remarks;
  }

  /**
   * Sets the value of the 'remarks' field.
   * @param value the value to set.
   */
  public void setRemarks(java.util.List<java.lang.String> value) {
    this.remarks = value;
  }

  /**
   * Gets the value of the 'alternateOrigins' field.
   * @return The value of the 'alternateOrigins' field.
   */
  public java.util.List<com.fretron.Model.Place> getAlternateOrigins() {
    return alternateOrigins;
  }

  /**
   * Sets the value of the 'alternateOrigins' field.
   * @param value the value to set.
   */
  public void setAlternateOrigins(java.util.List<com.fretron.Model.Place> value) {
    this.alternateOrigins = value;
  }

  /**
   * Gets the value of the 'alternateDestinations' field.
   * @return The value of the 'alternateDestinations' field.
   */
  public java.util.List<com.fretron.Model.Place> getAlternateDestinations() {
    return alternateDestinations;
  }

  /**
   * Sets the value of the 'alternateDestinations' field.
   * @param value the value to set.
   */
  public void setAlternateDestinations(java.util.List<com.fretron.Model.Place> value) {
    this.alternateDestinations = value;
  }

  /**
   * Gets the value of the 'bids' field.
   * @return The value of the 'bids' field.
   */
  public java.util.List<com.fretron.Model.Bid> getBids() {
    return bids;
  }

  /**
   * Sets the value of the 'bids' field.
   * @param value the value to set.
   */
  public void setBids(java.util.List<com.fretron.Model.Bid> value) {
    this.bids = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public java.lang.Double getPrice() {
    return price;
  }

  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.lang.Double value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'placementDate' field.
   * @return The value of the 'placementDate' field.
   */
  public java.lang.Long getPlacementDate() {
    return placementDate;
  }

  /**
   * Sets the value of the 'placementDate' field.
   * @param value the value to set.
   */
  public void setPlacementDate(java.lang.Long value) {
    this.placementDate = value;
  }

  /**
   * Gets the value of the 'allowedTransporters' field.
   * @return The value of the 'allowedTransporters' field.
   */
  public java.util.List<java.lang.String> getAllowedTransporters() {
    return allowedTransporters;
  }

  /**
   * Sets the value of the 'allowedTransporters' field.
   * @param value the value to set.
   */
  public void setAllowedTransporters(java.util.List<java.lang.String> value) {
    this.allowedTransporters = value;
  }

  /**
   * Gets the value of the 'allowedMaterial' field.
   * @return The value of the 'allowedMaterial' field.
   */
  public java.util.List<java.lang.String> getAllowedMaterial() {
    return allowedMaterial;
  }

  /**
   * Sets the value of the 'allowedMaterial' field.
   * @param value the value to set.
   */
  public void setAllowedMaterial(java.util.List<java.lang.String> value) {
    this.allowedMaterial = value;
  }

  /**
   * Gets the value of the 'allowedVehicleTypes' field.
   * @return The value of the 'allowedVehicleTypes' field.
   */
  public java.util.List<java.lang.String> getAllowedVehicleTypes() {
    return allowedVehicleTypes;
  }

  /**
   * Sets the value of the 'allowedVehicleTypes' field.
   * @param value the value to set.
   */
  public void setAllowedVehicleTypes(java.util.List<java.lang.String> value) {
    this.allowedVehicleTypes = value;
  }

  /**
   * Gets the value of the 'isShowTopRankToOthers' field.
   * @return The value of the 'isShowTopRankToOthers' field.
   */
  public java.lang.Boolean getIsShowTopRankToOthers() {
    return isShowTopRankToOthers;
  }

  /**
   * Sets the value of the 'isShowTopRankToOthers' field.
   * @param value the value to set.
   */
  public void setIsShowTopRankToOthers(java.lang.Boolean value) {
    this.isShowTopRankToOthers = value;
  }

  /**
   * Gets the value of the 'purchaseEnquiries' field.
   * @return The value of the 'purchaseEnquiries' field.
   */
  public java.util.List<java.lang.String> getPurchaseEnquiries() {
    return purchaseEnquiries;
  }

  /**
   * Sets the value of the 'purchaseEnquiries' field.
   * @param value the value to set.
   */
  public void setPurchaseEnquiries(java.util.List<java.lang.String> value) {
    this.purchaseEnquiries = value;
  }

  /**
   * Gets the value of the 'tnCs' field.
   * @return The value of the 'tnCs' field.
   */
  public java.util.List<com.fretron.Model.ContractTerms> getTnCs() {
    return tnCs;
  }

  /**
   * Sets the value of the 'tnCs' field.
   * @param value the value to set.
   */
  public void setTnCs(java.util.List<com.fretron.Model.ContractTerms> value) {
    this.tnCs = value;
  }

  /**
   * Gets the value of the 'round' field.
   * @return The value of the 'round' field.
   */
  public com.fretron.Model.AuctionRound getRound() {
    return round;
  }

  /**
   * Sets the value of the 'round' field.
   * @param value the value to set.
   */
  public void setRound(com.fretron.Model.AuctionRound value) {
    this.round = value;
  }

  /**
   * Gets the value of the 'branch' field.
   * @return The value of the 'branch' field.
   */
  public com.fretron.Model.OrgOffice getBranch() {
    return branch;
  }

  /**
   * Sets the value of the 'branch' field.
   * @param value the value to set.
   */
  public void setBranch(com.fretron.Model.OrgOffice value) {
    this.branch = value;
  }

  /**
   * Gets the value of the 'updates' field.
   * @return The value of the 'updates' field.
   */
  public com.fretron.Model.Updates getUpdates() {
    return updates;
  }

  /**
   * Sets the value of the 'updates' field.
   * @param value the value to set.
   */
  public void setUpdates(com.fretron.Model.Updates value) {
    this.updates = value;
  }

  /**
   * Creates a new Auction RecordBuilder.
   * @return A new Auction RecordBuilder
   */
  public static com.fretron.Model.Auction.Builder newBuilder() {
    return new com.fretron.Model.Auction.Builder();
  }

  /**
   * Creates a new Auction RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Auction RecordBuilder
   */
  public static com.fretron.Model.Auction.Builder newBuilder(com.fretron.Model.Auction.Builder other) {
    return new com.fretron.Model.Auction.Builder(other);
  }

  /**
   * Creates a new Auction RecordBuilder by copying an existing Auction instance.
   * @param other The existing instance to copy.
   * @return A new Auction RecordBuilder
   */
  public static com.fretron.Model.Auction.Builder newBuilder(com.fretron.Model.Auction other) {
    return new com.fretron.Model.Auction.Builder(other);
  }

  /**
   * RecordBuilder for Auction instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Auction>
    implements org.apache.avro.data.RecordBuilder<Auction> {

    private java.lang.String uuid;
    private java.lang.String externalId;
    private java.lang.String orgId;
    private java.lang.String status;
    private java.lang.String orderId;
    private java.lang.Integer numberOfVehicles;
    private com.fretron.Model.Place origin;
    private com.fretron.Model.Place.Builder originBuilder;
    private com.fretron.Model.Place destination;
    private com.fretron.Model.Place.Builder destinationBuilder;
    private java.util.List<java.lang.String> remarks;
    private java.util.List<com.fretron.Model.Place> alternateOrigins;
    private java.util.List<com.fretron.Model.Place> alternateDestinations;
    private java.util.List<com.fretron.Model.Bid> bids;
    private java.lang.Double price;
    private java.lang.Long placementDate;
    private java.util.List<java.lang.String> allowedTransporters;
    private java.util.List<java.lang.String> allowedMaterial;
    private java.util.List<java.lang.String> allowedVehicleTypes;
    private java.lang.Boolean isShowTopRankToOthers;
    private java.util.List<java.lang.String> purchaseEnquiries;
    private java.util.List<com.fretron.Model.ContractTerms> tnCs;
    private com.fretron.Model.AuctionRound round;
    private com.fretron.Model.AuctionRound.Builder roundBuilder;
    private com.fretron.Model.OrgOffice branch;
    private com.fretron.Model.OrgOffice.Builder branchBuilder;
    private com.fretron.Model.Updates updates;
    private com.fretron.Model.Updates.Builder updatesBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.Auction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalId)) {
        this.externalId = data().deepCopy(fields()[1].schema(), other.externalId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.orderId)) {
        this.orderId = data().deepCopy(fields()[4].schema(), other.orderId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.numberOfVehicles)) {
        this.numberOfVehicles = data().deepCopy(fields()[5].schema(), other.numberOfVehicles);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.origin)) {
        this.origin = data().deepCopy(fields()[6].schema(), other.origin);
        fieldSetFlags()[6] = true;
      }
      if (other.hasOriginBuilder()) {
        this.originBuilder = com.fretron.Model.Place.newBuilder(other.getOriginBuilder());
      }
      if (isValidValue(fields()[7], other.destination)) {
        this.destination = data().deepCopy(fields()[7].schema(), other.destination);
        fieldSetFlags()[7] = true;
      }
      if (other.hasDestinationBuilder()) {
        this.destinationBuilder = com.fretron.Model.Place.newBuilder(other.getDestinationBuilder());
      }
      if (isValidValue(fields()[8], other.remarks)) {
        this.remarks = data().deepCopy(fields()[8].schema(), other.remarks);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.alternateOrigins)) {
        this.alternateOrigins = data().deepCopy(fields()[9].schema(), other.alternateOrigins);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.alternateDestinations)) {
        this.alternateDestinations = data().deepCopy(fields()[10].schema(), other.alternateDestinations);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.bids)) {
        this.bids = data().deepCopy(fields()[11].schema(), other.bids);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.price)) {
        this.price = data().deepCopy(fields()[12].schema(), other.price);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.placementDate)) {
        this.placementDate = data().deepCopy(fields()[13].schema(), other.placementDate);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.allowedTransporters)) {
        this.allowedTransporters = data().deepCopy(fields()[14].schema(), other.allowedTransporters);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.allowedMaterial)) {
        this.allowedMaterial = data().deepCopy(fields()[15].schema(), other.allowedMaterial);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.allowedVehicleTypes)) {
        this.allowedVehicleTypes = data().deepCopy(fields()[16].schema(), other.allowedVehicleTypes);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.isShowTopRankToOthers)) {
        this.isShowTopRankToOthers = data().deepCopy(fields()[17].schema(), other.isShowTopRankToOthers);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.purchaseEnquiries)) {
        this.purchaseEnquiries = data().deepCopy(fields()[18].schema(), other.purchaseEnquiries);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.tnCs)) {
        this.tnCs = data().deepCopy(fields()[19].schema(), other.tnCs);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.round)) {
        this.round = data().deepCopy(fields()[20].schema(), other.round);
        fieldSetFlags()[20] = true;
      }
      if (other.hasRoundBuilder()) {
        this.roundBuilder = com.fretron.Model.AuctionRound.newBuilder(other.getRoundBuilder());
      }
      if (isValidValue(fields()[21], other.branch)) {
        this.branch = data().deepCopy(fields()[21].schema(), other.branch);
        fieldSetFlags()[21] = true;
      }
      if (other.hasBranchBuilder()) {
        this.branchBuilder = com.fretron.Model.OrgOffice.newBuilder(other.getBranchBuilder());
      }
      if (isValidValue(fields()[22], other.updates)) {
        this.updates = data().deepCopy(fields()[22].schema(), other.updates);
        fieldSetFlags()[22] = true;
      }
      if (other.hasUpdatesBuilder()) {
        this.updatesBuilder = com.fretron.Model.Updates.newBuilder(other.getUpdatesBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Auction instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.Auction other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalId)) {
        this.externalId = data().deepCopy(fields()[1].schema(), other.externalId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.orderId)) {
        this.orderId = data().deepCopy(fields()[4].schema(), other.orderId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.numberOfVehicles)) {
        this.numberOfVehicles = data().deepCopy(fields()[5].schema(), other.numberOfVehicles);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.origin)) {
        this.origin = data().deepCopy(fields()[6].schema(), other.origin);
        fieldSetFlags()[6] = true;
      }
      this.originBuilder = null;
      if (isValidValue(fields()[7], other.destination)) {
        this.destination = data().deepCopy(fields()[7].schema(), other.destination);
        fieldSetFlags()[7] = true;
      }
      this.destinationBuilder = null;
      if (isValidValue(fields()[8], other.remarks)) {
        this.remarks = data().deepCopy(fields()[8].schema(), other.remarks);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.alternateOrigins)) {
        this.alternateOrigins = data().deepCopy(fields()[9].schema(), other.alternateOrigins);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.alternateDestinations)) {
        this.alternateDestinations = data().deepCopy(fields()[10].schema(), other.alternateDestinations);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.bids)) {
        this.bids = data().deepCopy(fields()[11].schema(), other.bids);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.price)) {
        this.price = data().deepCopy(fields()[12].schema(), other.price);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.placementDate)) {
        this.placementDate = data().deepCopy(fields()[13].schema(), other.placementDate);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.allowedTransporters)) {
        this.allowedTransporters = data().deepCopy(fields()[14].schema(), other.allowedTransporters);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.allowedMaterial)) {
        this.allowedMaterial = data().deepCopy(fields()[15].schema(), other.allowedMaterial);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.allowedVehicleTypes)) {
        this.allowedVehicleTypes = data().deepCopy(fields()[16].schema(), other.allowedVehicleTypes);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.isShowTopRankToOthers)) {
        this.isShowTopRankToOthers = data().deepCopy(fields()[17].schema(), other.isShowTopRankToOthers);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.purchaseEnquiries)) {
        this.purchaseEnquiries = data().deepCopy(fields()[18].schema(), other.purchaseEnquiries);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.tnCs)) {
        this.tnCs = data().deepCopy(fields()[19].schema(), other.tnCs);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.round)) {
        this.round = data().deepCopy(fields()[20].schema(), other.round);
        fieldSetFlags()[20] = true;
      }
      this.roundBuilder = null;
      if (isValidValue(fields()[21], other.branch)) {
        this.branch = data().deepCopy(fields()[21].schema(), other.branch);
        fieldSetFlags()[21] = true;
      }
      this.branchBuilder = null;
      if (isValidValue(fields()[22], other.updates)) {
        this.updates = data().deepCopy(fields()[22].schema(), other.updates);
        fieldSetFlags()[22] = true;
      }
      this.updatesBuilder = null;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalId' field.
      * @return The value.
      */
    public java.lang.String getExternalId() {
      return externalId;
    }

    /**
      * Sets the value of the 'externalId' field.
      * @param value The value of 'externalId'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setExternalId(java.lang.String value) {
      validate(fields()[1], value);
      this.externalId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'externalId' field has been set.
      * @return True if the 'externalId' field has been set, false otherwise.
      */
    public boolean hasExternalId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'externalId' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearExternalId() {
      externalId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setOrgId(java.lang.String value) {
      validate(fields()[2], value);
      this.orgId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setStatus(java.lang.String value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderId' field.
      * @return The value.
      */
    public java.lang.String getOrderId() {
      return orderId;
    }

    /**
      * Sets the value of the 'orderId' field.
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setOrderId(java.lang.String value) {
      validate(fields()[4], value);
      this.orderId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'orderId' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'numberOfVehicles' field.
      * @return The value.
      */
    public java.lang.Integer getNumberOfVehicles() {
      return numberOfVehicles;
    }

    /**
      * Sets the value of the 'numberOfVehicles' field.
      * @param value The value of 'numberOfVehicles'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setNumberOfVehicles(java.lang.Integer value) {
      validate(fields()[5], value);
      this.numberOfVehicles = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'numberOfVehicles' field has been set.
      * @return True if the 'numberOfVehicles' field has been set, false otherwise.
      */
    public boolean hasNumberOfVehicles() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'numberOfVehicles' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearNumberOfVehicles() {
      numberOfVehicles = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'origin' field.
      * @return The value.
      */
    public com.fretron.Model.Place getOrigin() {
      return origin;
    }

    /**
      * Sets the value of the 'origin' field.
      * @param value The value of 'origin'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setOrigin(com.fretron.Model.Place value) {
      validate(fields()[6], value);
      this.originBuilder = null;
      this.origin = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'origin' field has been set.
      * @return True if the 'origin' field has been set, false otherwise.
      */
    public boolean hasOrigin() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'origin' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Place.Builder getOriginBuilder() {
      if (originBuilder == null) {
        if (hasOrigin()) {
          setOriginBuilder(com.fretron.Model.Place.newBuilder(origin));
        } else {
          setOriginBuilder(com.fretron.Model.Place.newBuilder());
        }
      }
      return originBuilder;
    }

    /**
     * Sets the Builder instance for the 'origin' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Auction.Builder setOriginBuilder(com.fretron.Model.Place.Builder value) {
      clearOrigin();
      originBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'origin' field has an active Builder instance
     * @return True if the 'origin' field has an active Builder instance
     */
    public boolean hasOriginBuilder() {
      return originBuilder != null;
    }

    /**
      * Clears the value of the 'origin' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearOrigin() {
      origin = null;
      originBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'destination' field.
      * @return The value.
      */
    public com.fretron.Model.Place getDestination() {
      return destination;
    }

    /**
      * Sets the value of the 'destination' field.
      * @param value The value of 'destination'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setDestination(com.fretron.Model.Place value) {
      validate(fields()[7], value);
      this.destinationBuilder = null;
      this.destination = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'destination' field has been set.
      * @return True if the 'destination' field has been set, false otherwise.
      */
    public boolean hasDestination() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'destination' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Place.Builder getDestinationBuilder() {
      if (destinationBuilder == null) {
        if (hasDestination()) {
          setDestinationBuilder(com.fretron.Model.Place.newBuilder(destination));
        } else {
          setDestinationBuilder(com.fretron.Model.Place.newBuilder());
        }
      }
      return destinationBuilder;
    }

    /**
     * Sets the Builder instance for the 'destination' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Auction.Builder setDestinationBuilder(com.fretron.Model.Place.Builder value) {
      clearDestination();
      destinationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'destination' field has an active Builder instance
     * @return True if the 'destination' field has an active Builder instance
     */
    public boolean hasDestinationBuilder() {
      return destinationBuilder != null;
    }

    /**
      * Clears the value of the 'destination' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearDestination() {
      destination = null;
      destinationBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'remarks' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getRemarks() {
      return remarks;
    }

    /**
      * Sets the value of the 'remarks' field.
      * @param value The value of 'remarks'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setRemarks(java.util.List<java.lang.String> value) {
      validate(fields()[8], value);
      this.remarks = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'remarks' field has been set.
      * @return True if the 'remarks' field has been set, false otherwise.
      */
    public boolean hasRemarks() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'remarks' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearRemarks() {
      remarks = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'alternateOrigins' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.Place> getAlternateOrigins() {
      return alternateOrigins;
    }

    /**
      * Sets the value of the 'alternateOrigins' field.
      * @param value The value of 'alternateOrigins'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setAlternateOrigins(java.util.List<com.fretron.Model.Place> value) {
      validate(fields()[9], value);
      this.alternateOrigins = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'alternateOrigins' field has been set.
      * @return True if the 'alternateOrigins' field has been set, false otherwise.
      */
    public boolean hasAlternateOrigins() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'alternateOrigins' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearAlternateOrigins() {
      alternateOrigins = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'alternateDestinations' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.Place> getAlternateDestinations() {
      return alternateDestinations;
    }

    /**
      * Sets the value of the 'alternateDestinations' field.
      * @param value The value of 'alternateDestinations'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setAlternateDestinations(java.util.List<com.fretron.Model.Place> value) {
      validate(fields()[10], value);
      this.alternateDestinations = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'alternateDestinations' field has been set.
      * @return True if the 'alternateDestinations' field has been set, false otherwise.
      */
    public boolean hasAlternateDestinations() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'alternateDestinations' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearAlternateDestinations() {
      alternateDestinations = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'bids' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.Bid> getBids() {
      return bids;
    }

    /**
      * Sets the value of the 'bids' field.
      * @param value The value of 'bids'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setBids(java.util.List<com.fretron.Model.Bid> value) {
      validate(fields()[11], value);
      this.bids = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'bids' field has been set.
      * @return True if the 'bids' field has been set, false otherwise.
      */
    public boolean hasBids() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'bids' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearBids() {
      bids = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public java.lang.Double getPrice() {
      return price;
    }

    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setPrice(java.lang.Double value) {
      validate(fields()[12], value);
      this.price = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearPrice() {
      price = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'placementDate' field.
      * @return The value.
      */
    public java.lang.Long getPlacementDate() {
      return placementDate;
    }

    /**
      * Sets the value of the 'placementDate' field.
      * @param value The value of 'placementDate'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setPlacementDate(java.lang.Long value) {
      validate(fields()[13], value);
      this.placementDate = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'placementDate' field has been set.
      * @return True if the 'placementDate' field has been set, false otherwise.
      */
    public boolean hasPlacementDate() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'placementDate' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearPlacementDate() {
      placementDate = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowedTransporters' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getAllowedTransporters() {
      return allowedTransporters;
    }

    /**
      * Sets the value of the 'allowedTransporters' field.
      * @param value The value of 'allowedTransporters'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setAllowedTransporters(java.util.List<java.lang.String> value) {
      validate(fields()[14], value);
      this.allowedTransporters = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'allowedTransporters' field has been set.
      * @return True if the 'allowedTransporters' field has been set, false otherwise.
      */
    public boolean hasAllowedTransporters() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'allowedTransporters' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearAllowedTransporters() {
      allowedTransporters = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowedMaterial' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getAllowedMaterial() {
      return allowedMaterial;
    }

    /**
      * Sets the value of the 'allowedMaterial' field.
      * @param value The value of 'allowedMaterial'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setAllowedMaterial(java.util.List<java.lang.String> value) {
      validate(fields()[15], value);
      this.allowedMaterial = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'allowedMaterial' field has been set.
      * @return True if the 'allowedMaterial' field has been set, false otherwise.
      */
    public boolean hasAllowedMaterial() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'allowedMaterial' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearAllowedMaterial() {
      allowedMaterial = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowedVehicleTypes' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getAllowedVehicleTypes() {
      return allowedVehicleTypes;
    }

    /**
      * Sets the value of the 'allowedVehicleTypes' field.
      * @param value The value of 'allowedVehicleTypes'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setAllowedVehicleTypes(java.util.List<java.lang.String> value) {
      validate(fields()[16], value);
      this.allowedVehicleTypes = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'allowedVehicleTypes' field has been set.
      * @return True if the 'allowedVehicleTypes' field has been set, false otherwise.
      */
    public boolean hasAllowedVehicleTypes() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'allowedVehicleTypes' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearAllowedVehicleTypes() {
      allowedVehicleTypes = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'isShowTopRankToOthers' field.
      * @return The value.
      */
    public java.lang.Boolean getIsShowTopRankToOthers() {
      return isShowTopRankToOthers;
    }

    /**
      * Sets the value of the 'isShowTopRankToOthers' field.
      * @param value The value of 'isShowTopRankToOthers'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setIsShowTopRankToOthers(java.lang.Boolean value) {
      validate(fields()[17], value);
      this.isShowTopRankToOthers = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'isShowTopRankToOthers' field has been set.
      * @return True if the 'isShowTopRankToOthers' field has been set, false otherwise.
      */
    public boolean hasIsShowTopRankToOthers() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'isShowTopRankToOthers' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearIsShowTopRankToOthers() {
      isShowTopRankToOthers = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'purchaseEnquiries' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getPurchaseEnquiries() {
      return purchaseEnquiries;
    }

    /**
      * Sets the value of the 'purchaseEnquiries' field.
      * @param value The value of 'purchaseEnquiries'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setPurchaseEnquiries(java.util.List<java.lang.String> value) {
      validate(fields()[18], value);
      this.purchaseEnquiries = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'purchaseEnquiries' field has been set.
      * @return True if the 'purchaseEnquiries' field has been set, false otherwise.
      */
    public boolean hasPurchaseEnquiries() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'purchaseEnquiries' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearPurchaseEnquiries() {
      purchaseEnquiries = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'tnCs' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.ContractTerms> getTnCs() {
      return tnCs;
    }

    /**
      * Sets the value of the 'tnCs' field.
      * @param value The value of 'tnCs'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setTnCs(java.util.List<com.fretron.Model.ContractTerms> value) {
      validate(fields()[19], value);
      this.tnCs = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'tnCs' field has been set.
      * @return True if the 'tnCs' field has been set, false otherwise.
      */
    public boolean hasTnCs() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'tnCs' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearTnCs() {
      tnCs = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'round' field.
      * @return The value.
      */
    public com.fretron.Model.AuctionRound getRound() {
      return round;
    }

    /**
      * Sets the value of the 'round' field.
      * @param value The value of 'round'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setRound(com.fretron.Model.AuctionRound value) {
      validate(fields()[20], value);
      this.roundBuilder = null;
      this.round = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'round' field has been set.
      * @return True if the 'round' field has been set, false otherwise.
      */
    public boolean hasRound() {
      return fieldSetFlags()[20];
    }

    /**
     * Gets the Builder instance for the 'round' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.AuctionRound.Builder getRoundBuilder() {
      if (roundBuilder == null) {
        if (hasRound()) {
          setRoundBuilder(com.fretron.Model.AuctionRound.newBuilder(round));
        } else {
          setRoundBuilder(com.fretron.Model.AuctionRound.newBuilder());
        }
      }
      return roundBuilder;
    }

    /**
     * Sets the Builder instance for the 'round' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Auction.Builder setRoundBuilder(com.fretron.Model.AuctionRound.Builder value) {
      clearRound();
      roundBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'round' field has an active Builder instance
     * @return True if the 'round' field has an active Builder instance
     */
    public boolean hasRoundBuilder() {
      return roundBuilder != null;
    }

    /**
      * Clears the value of the 'round' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearRound() {
      round = null;
      roundBuilder = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'branch' field.
      * @return The value.
      */
    public com.fretron.Model.OrgOffice getBranch() {
      return branch;
    }

    /**
      * Sets the value of the 'branch' field.
      * @param value The value of 'branch'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setBranch(com.fretron.Model.OrgOffice value) {
      validate(fields()[21], value);
      this.branchBuilder = null;
      this.branch = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'branch' field has been set.
      * @return True if the 'branch' field has been set, false otherwise.
      */
    public boolean hasBranch() {
      return fieldSetFlags()[21];
    }

    /**
     * Gets the Builder instance for the 'branch' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.OrgOffice.Builder getBranchBuilder() {
      if (branchBuilder == null) {
        if (hasBranch()) {
          setBranchBuilder(com.fretron.Model.OrgOffice.newBuilder(branch));
        } else {
          setBranchBuilder(com.fretron.Model.OrgOffice.newBuilder());
        }
      }
      return branchBuilder;
    }

    /**
     * Sets the Builder instance for the 'branch' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Auction.Builder setBranchBuilder(com.fretron.Model.OrgOffice.Builder value) {
      clearBranch();
      branchBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'branch' field has an active Builder instance
     * @return True if the 'branch' field has an active Builder instance
     */
    public boolean hasBranchBuilder() {
      return branchBuilder != null;
    }

    /**
      * Clears the value of the 'branch' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearBranch() {
      branch = null;
      branchBuilder = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'updates' field.
      * @return The value.
      */
    public com.fretron.Model.Updates getUpdates() {
      return updates;
    }

    /**
      * Sets the value of the 'updates' field.
      * @param value The value of 'updates'.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder setUpdates(com.fretron.Model.Updates value) {
      validate(fields()[22], value);
      this.updatesBuilder = null;
      this.updates = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'updates' field has been set.
      * @return True if the 'updates' field has been set, false otherwise.
      */
    public boolean hasUpdates() {
      return fieldSetFlags()[22];
    }

    /**
     * Gets the Builder instance for the 'updates' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Updates.Builder getUpdatesBuilder() {
      if (updatesBuilder == null) {
        if (hasUpdates()) {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder(updates));
        } else {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder());
        }
      }
      return updatesBuilder;
    }

    /**
     * Sets the Builder instance for the 'updates' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Auction.Builder setUpdatesBuilder(com.fretron.Model.Updates.Builder value) {
      clearUpdates();
      updatesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'updates' field has an active Builder instance
     * @return True if the 'updates' field has an active Builder instance
     */
    public boolean hasUpdatesBuilder() {
      return updatesBuilder != null;
    }

    /**
      * Clears the value of the 'updates' field.
      * @return This builder.
      */
    public com.fretron.Model.Auction.Builder clearUpdates() {
      updates = null;
      updatesBuilder = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    @Override
    public Auction build() {
      try {
        Auction record = new Auction();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.externalId = fieldSetFlags()[1] ? this.externalId : (java.lang.String) defaultValue(fields()[1]);
        record.orgId = fieldSetFlags()[2] ? this.orgId : (java.lang.String) defaultValue(fields()[2]);
        record.status = fieldSetFlags()[3] ? this.status : (java.lang.String) defaultValue(fields()[3]);
        record.orderId = fieldSetFlags()[4] ? this.orderId : (java.lang.String) defaultValue(fields()[4]);
        record.numberOfVehicles = fieldSetFlags()[5] ? this.numberOfVehicles : (java.lang.Integer) defaultValue(fields()[5]);
        if (originBuilder != null) {
          record.origin = this.originBuilder.build();
        } else {
          record.origin = fieldSetFlags()[6] ? this.origin : (com.fretron.Model.Place) defaultValue(fields()[6]);
        }
        if (destinationBuilder != null) {
          record.destination = this.destinationBuilder.build();
        } else {
          record.destination = fieldSetFlags()[7] ? this.destination : (com.fretron.Model.Place) defaultValue(fields()[7]);
        }
        record.remarks = fieldSetFlags()[8] ? this.remarks : (java.util.List<java.lang.String>) defaultValue(fields()[8]);
        record.alternateOrigins = fieldSetFlags()[9] ? this.alternateOrigins : (java.util.List<com.fretron.Model.Place>) defaultValue(fields()[9]);
        record.alternateDestinations = fieldSetFlags()[10] ? this.alternateDestinations : (java.util.List<com.fretron.Model.Place>) defaultValue(fields()[10]);
        record.bids = fieldSetFlags()[11] ? this.bids : (java.util.List<com.fretron.Model.Bid>) defaultValue(fields()[11]);
        record.price = fieldSetFlags()[12] ? this.price : (java.lang.Double) defaultValue(fields()[12]);
        record.placementDate = fieldSetFlags()[13] ? this.placementDate : (java.lang.Long) defaultValue(fields()[13]);
        record.allowedTransporters = fieldSetFlags()[14] ? this.allowedTransporters : (java.util.List<java.lang.String>) defaultValue(fields()[14]);
        record.allowedMaterial = fieldSetFlags()[15] ? this.allowedMaterial : (java.util.List<java.lang.String>) defaultValue(fields()[15]);
        record.allowedVehicleTypes = fieldSetFlags()[16] ? this.allowedVehicleTypes : (java.util.List<java.lang.String>) defaultValue(fields()[16]);
        record.isShowTopRankToOthers = fieldSetFlags()[17] ? this.isShowTopRankToOthers : (java.lang.Boolean) defaultValue(fields()[17]);
        record.purchaseEnquiries = fieldSetFlags()[18] ? this.purchaseEnquiries : (java.util.List<java.lang.String>) defaultValue(fields()[18]);
        record.tnCs = fieldSetFlags()[19] ? this.tnCs : (java.util.List<com.fretron.Model.ContractTerms>) defaultValue(fields()[19]);
        if (roundBuilder != null) {
          record.round = this.roundBuilder.build();
        } else {
          record.round = fieldSetFlags()[20] ? this.round : (com.fretron.Model.AuctionRound) defaultValue(fields()[20]);
        }
        if (branchBuilder != null) {
          record.branch = this.branchBuilder.build();
        } else {
          record.branch = fieldSetFlags()[21] ? this.branch : (com.fretron.Model.OrgOffice) defaultValue(fields()[21]);
        }
        if (updatesBuilder != null) {
          record.updates = this.updatesBuilder.build();
        } else {
          record.updates = fieldSetFlags()[22] ? this.updates : (com.fretron.Model.Updates) defaultValue(fields()[22]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

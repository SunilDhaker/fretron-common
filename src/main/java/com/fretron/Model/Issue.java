/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Issue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5177232893957781221L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Issue\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"issueSummery\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"issueType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"issueDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"reporter\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"User\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"authToken\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Token\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"provider\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"token\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"tokens\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"onBoardingType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"otpEnabled\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isGod\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"assignee\",\"type\":[\"null\",\"User\"],\"default\":null},{\"name\":\"creator\",\"type\":[\"null\",\"User\"],\"default\":null},{\"name\":\"priority\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdAt\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"updatedAt\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resolutionDate\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resolutionDuration\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"estimatedResolutionDate\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"userWatchers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"User\"}],\"default\":null},{\"name\":\"userFollowers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"User\"}],\"default\":null},{\"name\":\"bpartnerFollowers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BuisnessPartner\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fretronId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"geoFence\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoJsonFence\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Properties\",\"fields\":[{\"name\":\"catagory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"level\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customeFields\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"geometry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geometry\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"coordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null}]}],\"default\":null},{\"name\":\"metadata\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MetaData\",\"fields\":[{\"name\":\"clazz\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"places\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Place\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"center\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"suggestedRadius\",\"type\":\"double\",\"default\":null},{\"name\":\"viewport\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ViewPort\",\"fields\":[{\"name\":\"northeast\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"southwest\",\"type\":[\"null\",\"Location\"],\"default\":null}]}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"boundary\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null}]}}],\"default\":null},{\"name\":\"contacts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Contact\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"emails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"mobileNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isPortalEnabled\",\"type\":\"boolean\",\"default\":false}]}}],\"default\":null},{\"name\":\"bpartnerWatchers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"BuisnessPartner\"}],\"default\":null},{\"name\":\"tags\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"comments\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Comment\",\"fields\":[{\"name\":\"uuid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"comment\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"by\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"likedBy\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"}]}}],\"default\":null},{\"name\":\"attachments\",\"type\":[\"null\",{\"type\":","\"array\",\"items\":{\"type\":\"record\",\"name\":\"Document\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"isExpirable\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"expireDate\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"docPath\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"downloadUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"previewString\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"customeFields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CustomeField\",\"fields\":[{\"name\":\"fieldId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"key\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"keyValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"valueClass\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"valueSerializer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Updates\",\"fields\":[{\"name\":\"forwardReasons\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfInformation\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String resourceId;
  @Deprecated public java.lang.String resourceType;
  @Deprecated public java.lang.String issueSummery;
  @Deprecated public java.lang.String issueType;
  @Deprecated public java.lang.String issueDescription;
  @Deprecated public com.fretron.Model.User reporter;
  @Deprecated public com.fretron.Model.User assignee;
  @Deprecated public com.fretron.Model.User creator;
  @Deprecated public java.lang.String priority;
  @Deprecated public java.lang.String status;
  @Deprecated public java.lang.Long createdAt;
  @Deprecated public java.lang.Long updatedAt;
  @Deprecated public java.lang.String updatedBy;
  @Deprecated public java.lang.Long resolutionDate;
  @Deprecated public java.lang.Long resolutionDuration;
  @Deprecated public java.lang.Long estimatedResolutionDate;
  @Deprecated public java.util.List<com.fretron.Model.User> userWatchers;
  @Deprecated public java.util.List<com.fretron.Model.User> userFollowers;
  @Deprecated public java.util.List<com.fretron.Model.BuisnessPartner> bpartnerFollowers;
  @Deprecated public java.util.List<com.fretron.Model.BuisnessPartner> bpartnerWatchers;
  @Deprecated public java.util.List<java.lang.String> tags;
  @Deprecated public java.util.List<com.fretron.Model.Comment> comments;
  @Deprecated public java.util.List<com.fretron.Model.Document> attachments;
  @Deprecated public java.util.List<com.fretron.Model.CustomeField> customeFields;
  @Deprecated public com.fretron.Model.Updates updates;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Issue() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param resourceId The new value for resourceId
   * @param resourceType The new value for resourceType
   * @param issueSummery The new value for issueSummery
   * @param issueType The new value for issueType
   * @param issueDescription The new value for issueDescription
   * @param reporter The new value for reporter
   * @param assignee The new value for assignee
   * @param creator The new value for creator
   * @param priority The new value for priority
   * @param status The new value for status
   * @param createdAt The new value for createdAt
   * @param updatedAt The new value for updatedAt
   * @param updatedBy The new value for updatedBy
   * @param resolutionDate The new value for resolutionDate
   * @param resolutionDuration The new value for resolutionDuration
   * @param estimatedResolutionDate The new value for estimatedResolutionDate
   * @param userWatchers The new value for userWatchers
   * @param userFollowers The new value for userFollowers
   * @param bpartnerFollowers The new value for bpartnerFollowers
   * @param bpartnerWatchers The new value for bpartnerWatchers
   * @param tags The new value for tags
   * @param comments The new value for comments
   * @param attachments The new value for attachments
   * @param customeFields The new value for customeFields
   * @param updates The new value for updates
   */
  public Issue(java.lang.String uuid, java.lang.String resourceId, java.lang.String resourceType, java.lang.String issueSummery, java.lang.String issueType, java.lang.String issueDescription, com.fretron.Model.User reporter, com.fretron.Model.User assignee, com.fretron.Model.User creator, java.lang.String priority, java.lang.String status, java.lang.Long createdAt, java.lang.Long updatedAt, java.lang.String updatedBy, java.lang.Long resolutionDate, java.lang.Long resolutionDuration, java.lang.Long estimatedResolutionDate, java.util.List<com.fretron.Model.User> userWatchers, java.util.List<com.fretron.Model.User> userFollowers, java.util.List<com.fretron.Model.BuisnessPartner> bpartnerFollowers, java.util.List<com.fretron.Model.BuisnessPartner> bpartnerWatchers, java.util.List<java.lang.String> tags, java.util.List<com.fretron.Model.Comment> comments, java.util.List<com.fretron.Model.Document> attachments, java.util.List<com.fretron.Model.CustomeField> customeFields, com.fretron.Model.Updates updates) {
    this.uuid = uuid;
    this.resourceId = resourceId;
    this.resourceType = resourceType;
    this.issueSummery = issueSummery;
    this.issueType = issueType;
    this.issueDescription = issueDescription;
    this.reporter = reporter;
    this.assignee = assignee;
    this.creator = creator;
    this.priority = priority;
    this.status = status;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.updatedBy = updatedBy;
    this.resolutionDate = resolutionDate;
    this.resolutionDuration = resolutionDuration;
    this.estimatedResolutionDate = estimatedResolutionDate;
    this.userWatchers = userWatchers;
    this.userFollowers = userFollowers;
    this.bpartnerFollowers = bpartnerFollowers;
    this.bpartnerWatchers = bpartnerWatchers;
    this.tags = tags;
    this.comments = comments;
    this.attachments = attachments;
    this.customeFields = customeFields;
    this.updates = updates;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return resourceId;
    case 2: return resourceType;
    case 3: return issueSummery;
    case 4: return issueType;
    case 5: return issueDescription;
    case 6: return reporter;
    case 7: return assignee;
    case 8: return creator;
    case 9: return priority;
    case 10: return status;
    case 11: return createdAt;
    case 12: return updatedAt;
    case 13: return updatedBy;
    case 14: return resolutionDate;
    case 15: return resolutionDuration;
    case 16: return estimatedResolutionDate;
    case 17: return userWatchers;
    case 18: return userFollowers;
    case 19: return bpartnerFollowers;
    case 20: return bpartnerWatchers;
    case 21: return tags;
    case 22: return comments;
    case 23: return attachments;
    case 24: return customeFields;
    case 25: return updates;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: resourceId = (java.lang.String)value$; break;
    case 2: resourceType = (java.lang.String)value$; break;
    case 3: issueSummery = (java.lang.String)value$; break;
    case 4: issueType = (java.lang.String)value$; break;
    case 5: issueDescription = (java.lang.String)value$; break;
    case 6: reporter = (com.fretron.Model.User)value$; break;
    case 7: assignee = (com.fretron.Model.User)value$; break;
    case 8: creator = (com.fretron.Model.User)value$; break;
    case 9: priority = (java.lang.String)value$; break;
    case 10: status = (java.lang.String)value$; break;
    case 11: createdAt = (java.lang.Long)value$; break;
    case 12: updatedAt = (java.lang.Long)value$; break;
    case 13: updatedBy = (java.lang.String)value$; break;
    case 14: resolutionDate = (java.lang.Long)value$; break;
    case 15: resolutionDuration = (java.lang.Long)value$; break;
    case 16: estimatedResolutionDate = (java.lang.Long)value$; break;
    case 17: userWatchers = (java.util.List<com.fretron.Model.User>)value$; break;
    case 18: userFollowers = (java.util.List<com.fretron.Model.User>)value$; break;
    case 19: bpartnerFollowers = (java.util.List<com.fretron.Model.BuisnessPartner>)value$; break;
    case 20: bpartnerWatchers = (java.util.List<com.fretron.Model.BuisnessPartner>)value$; break;
    case 21: tags = (java.util.List<java.lang.String>)value$; break;
    case 22: comments = (java.util.List<com.fretron.Model.Comment>)value$; break;
    case 23: attachments = (java.util.List<com.fretron.Model.Document>)value$; break;
    case 24: customeFields = (java.util.List<com.fretron.Model.CustomeField>)value$; break;
    case 25: updates = (com.fretron.Model.Updates)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'resourceId' field.
   * @return The value of the 'resourceId' field.
   */
  public java.lang.String getResourceId() {
    return resourceId;
  }

  /**
   * Sets the value of the 'resourceId' field.
   * @param value the value to set.
   */
  public void setResourceId(java.lang.String value) {
    this.resourceId = value;
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.String getResourceType() {
    return resourceType;
  }

  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.String value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'issueSummery' field.
   * @return The value of the 'issueSummery' field.
   */
  public java.lang.String getIssueSummery() {
    return issueSummery;
  }

  /**
   * Sets the value of the 'issueSummery' field.
   * @param value the value to set.
   */
  public void setIssueSummery(java.lang.String value) {
    this.issueSummery = value;
  }

  /**
   * Gets the value of the 'issueType' field.
   * @return The value of the 'issueType' field.
   */
  public java.lang.String getIssueType() {
    return issueType;
  }

  /**
   * Sets the value of the 'issueType' field.
   * @param value the value to set.
   */
  public void setIssueType(java.lang.String value) {
    this.issueType = value;
  }

  /**
   * Gets the value of the 'issueDescription' field.
   * @return The value of the 'issueDescription' field.
   */
  public java.lang.String getIssueDescription() {
    return issueDescription;
  }

  /**
   * Sets the value of the 'issueDescription' field.
   * @param value the value to set.
   */
  public void setIssueDescription(java.lang.String value) {
    this.issueDescription = value;
  }

  /**
   * Gets the value of the 'reporter' field.
   * @return The value of the 'reporter' field.
   */
  public com.fretron.Model.User getReporter() {
    return reporter;
  }

  /**
   * Sets the value of the 'reporter' field.
   * @param value the value to set.
   */
  public void setReporter(com.fretron.Model.User value) {
    this.reporter = value;
  }

  /**
   * Gets the value of the 'assignee' field.
   * @return The value of the 'assignee' field.
   */
  public com.fretron.Model.User getAssignee() {
    return assignee;
  }

  /**
   * Sets the value of the 'assignee' field.
   * @param value the value to set.
   */
  public void setAssignee(com.fretron.Model.User value) {
    this.assignee = value;
  }

  /**
   * Gets the value of the 'creator' field.
   * @return The value of the 'creator' field.
   */
  public com.fretron.Model.User getCreator() {
    return creator;
  }

  /**
   * Sets the value of the 'creator' field.
   * @param value the value to set.
   */
  public void setCreator(com.fretron.Model.User value) {
    this.creator = value;
  }

  /**
   * Gets the value of the 'priority' field.
   * @return The value of the 'priority' field.
   */
  public java.lang.String getPriority() {
    return priority;
  }

  /**
   * Sets the value of the 'priority' field.
   * @param value the value to set.
   */
  public void setPriority(java.lang.String value) {
    this.priority = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.lang.Long getCreatedAt() {
    return createdAt;
  }

  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.Long value) {
    this.createdAt = value;
  }

  /**
   * Gets the value of the 'updatedAt' field.
   * @return The value of the 'updatedAt' field.
   */
  public java.lang.Long getUpdatedAt() {
    return updatedAt;
  }

  /**
   * Sets the value of the 'updatedAt' field.
   * @param value the value to set.
   */
  public void setUpdatedAt(java.lang.Long value) {
    this.updatedAt = value;
  }

  /**
   * Gets the value of the 'updatedBy' field.
   * @return The value of the 'updatedBy' field.
   */
  public java.lang.String getUpdatedBy() {
    return updatedBy;
  }

  /**
   * Sets the value of the 'updatedBy' field.
   * @param value the value to set.
   */
  public void setUpdatedBy(java.lang.String value) {
    this.updatedBy = value;
  }

  /**
   * Gets the value of the 'resolutionDate' field.
   * @return The value of the 'resolutionDate' field.
   */
  public java.lang.Long getResolutionDate() {
    return resolutionDate;
  }

  /**
   * Sets the value of the 'resolutionDate' field.
   * @param value the value to set.
   */
  public void setResolutionDate(java.lang.Long value) {
    this.resolutionDate = value;
  }

  /**
   * Gets the value of the 'resolutionDuration' field.
   * @return The value of the 'resolutionDuration' field.
   */
  public java.lang.Long getResolutionDuration() {
    return resolutionDuration;
  }

  /**
   * Sets the value of the 'resolutionDuration' field.
   * @param value the value to set.
   */
  public void setResolutionDuration(java.lang.Long value) {
    this.resolutionDuration = value;
  }

  /**
   * Gets the value of the 'estimatedResolutionDate' field.
   * @return The value of the 'estimatedResolutionDate' field.
   */
  public java.lang.Long getEstimatedResolutionDate() {
    return estimatedResolutionDate;
  }

  /**
   * Sets the value of the 'estimatedResolutionDate' field.
   * @param value the value to set.
   */
  public void setEstimatedResolutionDate(java.lang.Long value) {
    this.estimatedResolutionDate = value;
  }

  /**
   * Gets the value of the 'userWatchers' field.
   * @return The value of the 'userWatchers' field.
   */
  public java.util.List<com.fretron.Model.User> getUserWatchers() {
    return userWatchers;
  }

  /**
   * Sets the value of the 'userWatchers' field.
   * @param value the value to set.
   */
  public void setUserWatchers(java.util.List<com.fretron.Model.User> value) {
    this.userWatchers = value;
  }

  /**
   * Gets the value of the 'userFollowers' field.
   * @return The value of the 'userFollowers' field.
   */
  public java.util.List<com.fretron.Model.User> getUserFollowers() {
    return userFollowers;
  }

  /**
   * Sets the value of the 'userFollowers' field.
   * @param value the value to set.
   */
  public void setUserFollowers(java.util.List<com.fretron.Model.User> value) {
    this.userFollowers = value;
  }

  /**
   * Gets the value of the 'bpartnerFollowers' field.
   * @return The value of the 'bpartnerFollowers' field.
   */
  public java.util.List<com.fretron.Model.BuisnessPartner> getBpartnerFollowers() {
    return bpartnerFollowers;
  }

  /**
   * Sets the value of the 'bpartnerFollowers' field.
   * @param value the value to set.
   */
  public void setBpartnerFollowers(java.util.List<com.fretron.Model.BuisnessPartner> value) {
    this.bpartnerFollowers = value;
  }

  /**
   * Gets the value of the 'bpartnerWatchers' field.
   * @return The value of the 'bpartnerWatchers' field.
   */
  public java.util.List<com.fretron.Model.BuisnessPartner> getBpartnerWatchers() {
    return bpartnerWatchers;
  }

  /**
   * Sets the value of the 'bpartnerWatchers' field.
   * @param value the value to set.
   */
  public void setBpartnerWatchers(java.util.List<com.fretron.Model.BuisnessPartner> value) {
    this.bpartnerWatchers = value;
  }

  /**
   * Gets the value of the 'tags' field.
   * @return The value of the 'tags' field.
   */
  public java.util.List<java.lang.String> getTags() {
    return tags;
  }

  /**
   * Sets the value of the 'tags' field.
   * @param value the value to set.
   */
  public void setTags(java.util.List<java.lang.String> value) {
    this.tags = value;
  }

  /**
   * Gets the value of the 'comments' field.
   * @return The value of the 'comments' field.
   */
  public java.util.List<com.fretron.Model.Comment> getComments() {
    return comments;
  }

  /**
   * Sets the value of the 'comments' field.
   * @param value the value to set.
   */
  public void setComments(java.util.List<com.fretron.Model.Comment> value) {
    this.comments = value;
  }

  /**
   * Gets the value of the 'attachments' field.
   * @return The value of the 'attachments' field.
   */
  public java.util.List<com.fretron.Model.Document> getAttachments() {
    return attachments;
  }

  /**
   * Sets the value of the 'attachments' field.
   * @param value the value to set.
   */
  public void setAttachments(java.util.List<com.fretron.Model.Document> value) {
    this.attachments = value;
  }

  /**
   * Gets the value of the 'customeFields' field.
   * @return The value of the 'customeFields' field.
   */
  public java.util.List<com.fretron.Model.CustomeField> getCustomeFields() {
    return customeFields;
  }

  /**
   * Sets the value of the 'customeFields' field.
   * @param value the value to set.
   */
  public void setCustomeFields(java.util.List<com.fretron.Model.CustomeField> value) {
    this.customeFields = value;
  }

  /**
   * Gets the value of the 'updates' field.
   * @return The value of the 'updates' field.
   */
  public com.fretron.Model.Updates getUpdates() {
    return updates;
  }

  /**
   * Sets the value of the 'updates' field.
   * @param value the value to set.
   */
  public void setUpdates(com.fretron.Model.Updates value) {
    this.updates = value;
  }

  /**
   * Creates a new Issue RecordBuilder.
   * @return A new Issue RecordBuilder
   */
  public static com.fretron.Model.Issue.Builder newBuilder() {
    return new com.fretron.Model.Issue.Builder();
  }

  /**
   * Creates a new Issue RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Issue RecordBuilder
   */
  public static com.fretron.Model.Issue.Builder newBuilder(com.fretron.Model.Issue.Builder other) {
    return new com.fretron.Model.Issue.Builder(other);
  }

  /**
   * Creates a new Issue RecordBuilder by copying an existing Issue instance.
   * @param other The existing instance to copy.
   * @return A new Issue RecordBuilder
   */
  public static com.fretron.Model.Issue.Builder newBuilder(com.fretron.Model.Issue other) {
    return new com.fretron.Model.Issue.Builder(other);
  }

  /**
   * RecordBuilder for Issue instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Issue>
    implements org.apache.avro.data.RecordBuilder<Issue> {

    private java.lang.String uuid;
    private java.lang.String resourceId;
    private java.lang.String resourceType;
    private java.lang.String issueSummery;
    private java.lang.String issueType;
    private java.lang.String issueDescription;
    private com.fretron.Model.User reporter;
    private com.fretron.Model.User.Builder reporterBuilder;
    private com.fretron.Model.User assignee;
    private com.fretron.Model.User.Builder assigneeBuilder;
    private com.fretron.Model.User creator;
    private com.fretron.Model.User.Builder creatorBuilder;
    private java.lang.String priority;
    private java.lang.String status;
    private java.lang.Long createdAt;
    private java.lang.Long updatedAt;
    private java.lang.String updatedBy;
    private java.lang.Long resolutionDate;
    private java.lang.Long resolutionDuration;
    private java.lang.Long estimatedResolutionDate;
    private java.util.List<com.fretron.Model.User> userWatchers;
    private java.util.List<com.fretron.Model.User> userFollowers;
    private java.util.List<com.fretron.Model.BuisnessPartner> bpartnerFollowers;
    private java.util.List<com.fretron.Model.BuisnessPartner> bpartnerWatchers;
    private java.util.List<java.lang.String> tags;
    private java.util.List<com.fretron.Model.Comment> comments;
    private java.util.List<com.fretron.Model.Document> attachments;
    private java.util.List<com.fretron.Model.CustomeField> customeFields;
    private com.fretron.Model.Updates updates;
    private com.fretron.Model.Updates.Builder updatesBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.Issue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.resourceId)) {
        this.resourceId = data().deepCopy(fields()[1].schema(), other.resourceId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[2].schema(), other.resourceType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.issueSummery)) {
        this.issueSummery = data().deepCopy(fields()[3].schema(), other.issueSummery);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.issueType)) {
        this.issueType = data().deepCopy(fields()[4].schema(), other.issueType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.issueDescription)) {
        this.issueDescription = data().deepCopy(fields()[5].schema(), other.issueDescription);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.reporter)) {
        this.reporter = data().deepCopy(fields()[6].schema(), other.reporter);
        fieldSetFlags()[6] = true;
      }
      if (other.hasReporterBuilder()) {
        this.reporterBuilder = com.fretron.Model.User.newBuilder(other.getReporterBuilder());
      }
      if (isValidValue(fields()[7], other.assignee)) {
        this.assignee = data().deepCopy(fields()[7].schema(), other.assignee);
        fieldSetFlags()[7] = true;
      }
      if (other.hasAssigneeBuilder()) {
        this.assigneeBuilder = com.fretron.Model.User.newBuilder(other.getAssigneeBuilder());
      }
      if (isValidValue(fields()[8], other.creator)) {
        this.creator = data().deepCopy(fields()[8].schema(), other.creator);
        fieldSetFlags()[8] = true;
      }
      if (other.hasCreatorBuilder()) {
        this.creatorBuilder = com.fretron.Model.User.newBuilder(other.getCreatorBuilder());
      }
      if (isValidValue(fields()[9], other.priority)) {
        this.priority = data().deepCopy(fields()[9].schema(), other.priority);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.status)) {
        this.status = data().deepCopy(fields()[10].schema(), other.status);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[11].schema(), other.createdAt);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[12].schema(), other.updatedAt);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[13].schema(), other.updatedBy);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.resolutionDate)) {
        this.resolutionDate = data().deepCopy(fields()[14].schema(), other.resolutionDate);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.resolutionDuration)) {
        this.resolutionDuration = data().deepCopy(fields()[15].schema(), other.resolutionDuration);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.estimatedResolutionDate)) {
        this.estimatedResolutionDate = data().deepCopy(fields()[16].schema(), other.estimatedResolutionDate);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.userWatchers)) {
        this.userWatchers = data().deepCopy(fields()[17].schema(), other.userWatchers);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.userFollowers)) {
        this.userFollowers = data().deepCopy(fields()[18].schema(), other.userFollowers);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.bpartnerFollowers)) {
        this.bpartnerFollowers = data().deepCopy(fields()[19].schema(), other.bpartnerFollowers);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.bpartnerWatchers)) {
        this.bpartnerWatchers = data().deepCopy(fields()[20].schema(), other.bpartnerWatchers);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.tags)) {
        this.tags = data().deepCopy(fields()[21].schema(), other.tags);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.comments)) {
        this.comments = data().deepCopy(fields()[22].schema(), other.comments);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.attachments)) {
        this.attachments = data().deepCopy(fields()[23].schema(), other.attachments);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.customeFields)) {
        this.customeFields = data().deepCopy(fields()[24].schema(), other.customeFields);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.updates)) {
        this.updates = data().deepCopy(fields()[25].schema(), other.updates);
        fieldSetFlags()[25] = true;
      }
      if (other.hasUpdatesBuilder()) {
        this.updatesBuilder = com.fretron.Model.Updates.newBuilder(other.getUpdatesBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Issue instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.Issue other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.resourceId)) {
        this.resourceId = data().deepCopy(fields()[1].schema(), other.resourceId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[2].schema(), other.resourceType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.issueSummery)) {
        this.issueSummery = data().deepCopy(fields()[3].schema(), other.issueSummery);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.issueType)) {
        this.issueType = data().deepCopy(fields()[4].schema(), other.issueType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.issueDescription)) {
        this.issueDescription = data().deepCopy(fields()[5].schema(), other.issueDescription);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.reporter)) {
        this.reporter = data().deepCopy(fields()[6].schema(), other.reporter);
        fieldSetFlags()[6] = true;
      }
      this.reporterBuilder = null;
      if (isValidValue(fields()[7], other.assignee)) {
        this.assignee = data().deepCopy(fields()[7].schema(), other.assignee);
        fieldSetFlags()[7] = true;
      }
      this.assigneeBuilder = null;
      if (isValidValue(fields()[8], other.creator)) {
        this.creator = data().deepCopy(fields()[8].schema(), other.creator);
        fieldSetFlags()[8] = true;
      }
      this.creatorBuilder = null;
      if (isValidValue(fields()[9], other.priority)) {
        this.priority = data().deepCopy(fields()[9].schema(), other.priority);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.status)) {
        this.status = data().deepCopy(fields()[10].schema(), other.status);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[11].schema(), other.createdAt);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[12].schema(), other.updatedAt);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[13].schema(), other.updatedBy);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.resolutionDate)) {
        this.resolutionDate = data().deepCopy(fields()[14].schema(), other.resolutionDate);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.resolutionDuration)) {
        this.resolutionDuration = data().deepCopy(fields()[15].schema(), other.resolutionDuration);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.estimatedResolutionDate)) {
        this.estimatedResolutionDate = data().deepCopy(fields()[16].schema(), other.estimatedResolutionDate);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.userWatchers)) {
        this.userWatchers = data().deepCopy(fields()[17].schema(), other.userWatchers);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.userFollowers)) {
        this.userFollowers = data().deepCopy(fields()[18].schema(), other.userFollowers);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.bpartnerFollowers)) {
        this.bpartnerFollowers = data().deepCopy(fields()[19].schema(), other.bpartnerFollowers);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.bpartnerWatchers)) {
        this.bpartnerWatchers = data().deepCopy(fields()[20].schema(), other.bpartnerWatchers);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.tags)) {
        this.tags = data().deepCopy(fields()[21].schema(), other.tags);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.comments)) {
        this.comments = data().deepCopy(fields()[22].schema(), other.comments);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.attachments)) {
        this.attachments = data().deepCopy(fields()[23].schema(), other.attachments);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.customeFields)) {
        this.customeFields = data().deepCopy(fields()[24].schema(), other.customeFields);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.updates)) {
        this.updates = data().deepCopy(fields()[25].schema(), other.updates);
        fieldSetFlags()[25] = true;
      }
      this.updatesBuilder = null;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'resourceId' field.
      * @return The value.
      */
    public java.lang.String getResourceId() {
      return resourceId;
    }

    /**
      * Sets the value of the 'resourceId' field.
      * @param value The value of 'resourceId'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setResourceId(java.lang.String value) {
      validate(fields()[1], value);
      this.resourceId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceId' field has been set.
      * @return True if the 'resourceId' field has been set, false otherwise.
      */
    public boolean hasResourceId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'resourceId' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearResourceId() {
      resourceId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.String getResourceType() {
      return resourceType;
    }

    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setResourceType(java.lang.String value) {
      validate(fields()[2], value);
      this.resourceType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'issueSummery' field.
      * @return The value.
      */
    public java.lang.String getIssueSummery() {
      return issueSummery;
    }

    /**
      * Sets the value of the 'issueSummery' field.
      * @param value The value of 'issueSummery'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setIssueSummery(java.lang.String value) {
      validate(fields()[3], value);
      this.issueSummery = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'issueSummery' field has been set.
      * @return True if the 'issueSummery' field has been set, false otherwise.
      */
    public boolean hasIssueSummery() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'issueSummery' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearIssueSummery() {
      issueSummery = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'issueType' field.
      * @return The value.
      */
    public java.lang.String getIssueType() {
      return issueType;
    }

    /**
      * Sets the value of the 'issueType' field.
      * @param value The value of 'issueType'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setIssueType(java.lang.String value) {
      validate(fields()[4], value);
      this.issueType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'issueType' field has been set.
      * @return True if the 'issueType' field has been set, false otherwise.
      */
    public boolean hasIssueType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'issueType' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearIssueType() {
      issueType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'issueDescription' field.
      * @return The value.
      */
    public java.lang.String getIssueDescription() {
      return issueDescription;
    }

    /**
      * Sets the value of the 'issueDescription' field.
      * @param value The value of 'issueDescription'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setIssueDescription(java.lang.String value) {
      validate(fields()[5], value);
      this.issueDescription = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'issueDescription' field has been set.
      * @return True if the 'issueDescription' field has been set, false otherwise.
      */
    public boolean hasIssueDescription() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'issueDescription' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearIssueDescription() {
      issueDescription = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'reporter' field.
      * @return The value.
      */
    public com.fretron.Model.User getReporter() {
      return reporter;
    }

    /**
      * Sets the value of the 'reporter' field.
      * @param value The value of 'reporter'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setReporter(com.fretron.Model.User value) {
      validate(fields()[6], value);
      this.reporterBuilder = null;
      this.reporter = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'reporter' field has been set.
      * @return True if the 'reporter' field has been set, false otherwise.
      */
    public boolean hasReporter() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'reporter' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.User.Builder getReporterBuilder() {
      if (reporterBuilder == null) {
        if (hasReporter()) {
          setReporterBuilder(com.fretron.Model.User.newBuilder(reporter));
        } else {
          setReporterBuilder(com.fretron.Model.User.newBuilder());
        }
      }
      return reporterBuilder;
    }

    /**
     * Sets the Builder instance for the 'reporter' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Issue.Builder setReporterBuilder(com.fretron.Model.User.Builder value) {
      clearReporter();
      reporterBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'reporter' field has an active Builder instance
     * @return True if the 'reporter' field has an active Builder instance
     */
    public boolean hasReporterBuilder() {
      return reporterBuilder != null;
    }

    /**
      * Clears the value of the 'reporter' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearReporter() {
      reporter = null;
      reporterBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'assignee' field.
      * @return The value.
      */
    public com.fretron.Model.User getAssignee() {
      return assignee;
    }

    /**
      * Sets the value of the 'assignee' field.
      * @param value The value of 'assignee'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setAssignee(com.fretron.Model.User value) {
      validate(fields()[7], value);
      this.assigneeBuilder = null;
      this.assignee = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'assignee' field has been set.
      * @return True if the 'assignee' field has been set, false otherwise.
      */
    public boolean hasAssignee() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'assignee' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.User.Builder getAssigneeBuilder() {
      if (assigneeBuilder == null) {
        if (hasAssignee()) {
          setAssigneeBuilder(com.fretron.Model.User.newBuilder(assignee));
        } else {
          setAssigneeBuilder(com.fretron.Model.User.newBuilder());
        }
      }
      return assigneeBuilder;
    }

    /**
     * Sets the Builder instance for the 'assignee' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Issue.Builder setAssigneeBuilder(com.fretron.Model.User.Builder value) {
      clearAssignee();
      assigneeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'assignee' field has an active Builder instance
     * @return True if the 'assignee' field has an active Builder instance
     */
    public boolean hasAssigneeBuilder() {
      return assigneeBuilder != null;
    }

    /**
      * Clears the value of the 'assignee' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearAssignee() {
      assignee = null;
      assigneeBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'creator' field.
      * @return The value.
      */
    public com.fretron.Model.User getCreator() {
      return creator;
    }

    /**
      * Sets the value of the 'creator' field.
      * @param value The value of 'creator'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setCreator(com.fretron.Model.User value) {
      validate(fields()[8], value);
      this.creatorBuilder = null;
      this.creator = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'creator' field has been set.
      * @return True if the 'creator' field has been set, false otherwise.
      */
    public boolean hasCreator() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'creator' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.User.Builder getCreatorBuilder() {
      if (creatorBuilder == null) {
        if (hasCreator()) {
          setCreatorBuilder(com.fretron.Model.User.newBuilder(creator));
        } else {
          setCreatorBuilder(com.fretron.Model.User.newBuilder());
        }
      }
      return creatorBuilder;
    }

    /**
     * Sets the Builder instance for the 'creator' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Issue.Builder setCreatorBuilder(com.fretron.Model.User.Builder value) {
      clearCreator();
      creatorBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'creator' field has an active Builder instance
     * @return True if the 'creator' field has an active Builder instance
     */
    public boolean hasCreatorBuilder() {
      return creatorBuilder != null;
    }

    /**
      * Clears the value of the 'creator' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearCreator() {
      creator = null;
      creatorBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'priority' field.
      * @return The value.
      */
    public java.lang.String getPriority() {
      return priority;
    }

    /**
      * Sets the value of the 'priority' field.
      * @param value The value of 'priority'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setPriority(java.lang.String value) {
      validate(fields()[9], value);
      this.priority = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'priority' field has been set.
      * @return True if the 'priority' field has been set, false otherwise.
      */
    public boolean hasPriority() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'priority' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearPriority() {
      priority = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setStatus(java.lang.String value) {
      validate(fields()[10], value);
      this.status = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearStatus() {
      status = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.lang.Long getCreatedAt() {
      return createdAt;
    }

    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setCreatedAt(java.lang.Long value) {
      validate(fields()[11], value);
      this.createdAt = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedAt' field.
      * @return The value.
      */
    public java.lang.Long getUpdatedAt() {
      return updatedAt;
    }

    /**
      * Sets the value of the 'updatedAt' field.
      * @param value The value of 'updatedAt'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setUpdatedAt(java.lang.Long value) {
      validate(fields()[12], value);
      this.updatedAt = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedAt' field has been set.
      * @return True if the 'updatedAt' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'updatedAt' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearUpdatedAt() {
      updatedAt = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedBy' field.
      * @return The value.
      */
    public java.lang.String getUpdatedBy() {
      return updatedBy;
    }

    /**
      * Sets the value of the 'updatedBy' field.
      * @param value The value of 'updatedBy'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setUpdatedBy(java.lang.String value) {
      validate(fields()[13], value);
      this.updatedBy = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedBy' field has been set.
      * @return True if the 'updatedBy' field has been set, false otherwise.
      */
    public boolean hasUpdatedBy() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'updatedBy' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearUpdatedBy() {
      updatedBy = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'resolutionDate' field.
      * @return The value.
      */
    public java.lang.Long getResolutionDate() {
      return resolutionDate;
    }

    /**
      * Sets the value of the 'resolutionDate' field.
      * @param value The value of 'resolutionDate'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setResolutionDate(java.lang.Long value) {
      validate(fields()[14], value);
      this.resolutionDate = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'resolutionDate' field has been set.
      * @return True if the 'resolutionDate' field has been set, false otherwise.
      */
    public boolean hasResolutionDate() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'resolutionDate' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearResolutionDate() {
      resolutionDate = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'resolutionDuration' field.
      * @return The value.
      */
    public java.lang.Long getResolutionDuration() {
      return resolutionDuration;
    }

    /**
      * Sets the value of the 'resolutionDuration' field.
      * @param value The value of 'resolutionDuration'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setResolutionDuration(java.lang.Long value) {
      validate(fields()[15], value);
      this.resolutionDuration = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'resolutionDuration' field has been set.
      * @return True if the 'resolutionDuration' field has been set, false otherwise.
      */
    public boolean hasResolutionDuration() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'resolutionDuration' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearResolutionDuration() {
      resolutionDuration = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'estimatedResolutionDate' field.
      * @return The value.
      */
    public java.lang.Long getEstimatedResolutionDate() {
      return estimatedResolutionDate;
    }

    /**
      * Sets the value of the 'estimatedResolutionDate' field.
      * @param value The value of 'estimatedResolutionDate'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setEstimatedResolutionDate(java.lang.Long value) {
      validate(fields()[16], value);
      this.estimatedResolutionDate = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'estimatedResolutionDate' field has been set.
      * @return True if the 'estimatedResolutionDate' field has been set, false otherwise.
      */
    public boolean hasEstimatedResolutionDate() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'estimatedResolutionDate' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearEstimatedResolutionDate() {
      estimatedResolutionDate = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'userWatchers' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.User> getUserWatchers() {
      return userWatchers;
    }

    /**
      * Sets the value of the 'userWatchers' field.
      * @param value The value of 'userWatchers'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setUserWatchers(java.util.List<com.fretron.Model.User> value) {
      validate(fields()[17], value);
      this.userWatchers = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'userWatchers' field has been set.
      * @return True if the 'userWatchers' field has been set, false otherwise.
      */
    public boolean hasUserWatchers() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'userWatchers' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearUserWatchers() {
      userWatchers = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'userFollowers' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.User> getUserFollowers() {
      return userFollowers;
    }

    /**
      * Sets the value of the 'userFollowers' field.
      * @param value The value of 'userFollowers'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setUserFollowers(java.util.List<com.fretron.Model.User> value) {
      validate(fields()[18], value);
      this.userFollowers = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'userFollowers' field has been set.
      * @return True if the 'userFollowers' field has been set, false otherwise.
      */
    public boolean hasUserFollowers() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'userFollowers' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearUserFollowers() {
      userFollowers = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'bpartnerFollowers' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.BuisnessPartner> getBpartnerFollowers() {
      return bpartnerFollowers;
    }

    /**
      * Sets the value of the 'bpartnerFollowers' field.
      * @param value The value of 'bpartnerFollowers'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setBpartnerFollowers(java.util.List<com.fretron.Model.BuisnessPartner> value) {
      validate(fields()[19], value);
      this.bpartnerFollowers = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'bpartnerFollowers' field has been set.
      * @return True if the 'bpartnerFollowers' field has been set, false otherwise.
      */
    public boolean hasBpartnerFollowers() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'bpartnerFollowers' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearBpartnerFollowers() {
      bpartnerFollowers = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'bpartnerWatchers' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.BuisnessPartner> getBpartnerWatchers() {
      return bpartnerWatchers;
    }

    /**
      * Sets the value of the 'bpartnerWatchers' field.
      * @param value The value of 'bpartnerWatchers'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setBpartnerWatchers(java.util.List<com.fretron.Model.BuisnessPartner> value) {
      validate(fields()[20], value);
      this.bpartnerWatchers = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'bpartnerWatchers' field has been set.
      * @return True if the 'bpartnerWatchers' field has been set, false otherwise.
      */
    public boolean hasBpartnerWatchers() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'bpartnerWatchers' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearBpartnerWatchers() {
      bpartnerWatchers = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'tags' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getTags() {
      return tags;
    }

    /**
      * Sets the value of the 'tags' field.
      * @param value The value of 'tags'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setTags(java.util.List<java.lang.String> value) {
      validate(fields()[21], value);
      this.tags = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'tags' field has been set.
      * @return True if the 'tags' field has been set, false otherwise.
      */
    public boolean hasTags() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'tags' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearTags() {
      tags = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'comments' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.Comment> getComments() {
      return comments;
    }

    /**
      * Sets the value of the 'comments' field.
      * @param value The value of 'comments'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setComments(java.util.List<com.fretron.Model.Comment> value) {
      validate(fields()[22], value);
      this.comments = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'comments' field has been set.
      * @return True if the 'comments' field has been set, false otherwise.
      */
    public boolean hasComments() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'comments' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearComments() {
      comments = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'attachments' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.Document> getAttachments() {
      return attachments;
    }

    /**
      * Sets the value of the 'attachments' field.
      * @param value The value of 'attachments'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setAttachments(java.util.List<com.fretron.Model.Document> value) {
      validate(fields()[23], value);
      this.attachments = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'attachments' field has been set.
      * @return True if the 'attachments' field has been set, false otherwise.
      */
    public boolean hasAttachments() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'attachments' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearAttachments() {
      attachments = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'customeFields' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.CustomeField> getCustomeFields() {
      return customeFields;
    }

    /**
      * Sets the value of the 'customeFields' field.
      * @param value The value of 'customeFields'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setCustomeFields(java.util.List<com.fretron.Model.CustomeField> value) {
      validate(fields()[24], value);
      this.customeFields = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'customeFields' field has been set.
      * @return True if the 'customeFields' field has been set, false otherwise.
      */
    public boolean hasCustomeFields() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'customeFields' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearCustomeFields() {
      customeFields = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'updates' field.
      * @return The value.
      */
    public com.fretron.Model.Updates getUpdates() {
      return updates;
    }

    /**
      * Sets the value of the 'updates' field.
      * @param value The value of 'updates'.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder setUpdates(com.fretron.Model.Updates value) {
      validate(fields()[25], value);
      this.updatesBuilder = null;
      this.updates = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'updates' field has been set.
      * @return True if the 'updates' field has been set, false otherwise.
      */
    public boolean hasUpdates() {
      return fieldSetFlags()[25];
    }

    /**
     * Gets the Builder instance for the 'updates' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Updates.Builder getUpdatesBuilder() {
      if (updatesBuilder == null) {
        if (hasUpdates()) {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder(updates));
        } else {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder());
        }
      }
      return updatesBuilder;
    }

    /**
     * Sets the Builder instance for the 'updates' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Issue.Builder setUpdatesBuilder(com.fretron.Model.Updates.Builder value) {
      clearUpdates();
      updatesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'updates' field has an active Builder instance
     * @return True if the 'updates' field has an active Builder instance
     */
    public boolean hasUpdatesBuilder() {
      return updatesBuilder != null;
    }

    /**
      * Clears the value of the 'updates' field.
      * @return This builder.
      */
    public com.fretron.Model.Issue.Builder clearUpdates() {
      updates = null;
      updatesBuilder = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    @Override
    public Issue build() {
      try {
        Issue record = new Issue();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.resourceId = fieldSetFlags()[1] ? this.resourceId : (java.lang.String) defaultValue(fields()[1]);
        record.resourceType = fieldSetFlags()[2] ? this.resourceType : (java.lang.String) defaultValue(fields()[2]);
        record.issueSummery = fieldSetFlags()[3] ? this.issueSummery : (java.lang.String) defaultValue(fields()[3]);
        record.issueType = fieldSetFlags()[4] ? this.issueType : (java.lang.String) defaultValue(fields()[4]);
        record.issueDescription = fieldSetFlags()[5] ? this.issueDescription : (java.lang.String) defaultValue(fields()[5]);
        if (reporterBuilder != null) {
          record.reporter = this.reporterBuilder.build();
        } else {
          record.reporter = fieldSetFlags()[6] ? this.reporter : (com.fretron.Model.User) defaultValue(fields()[6]);
        }
        if (assigneeBuilder != null) {
          record.assignee = this.assigneeBuilder.build();
        } else {
          record.assignee = fieldSetFlags()[7] ? this.assignee : (com.fretron.Model.User) defaultValue(fields()[7]);
        }
        if (creatorBuilder != null) {
          record.creator = this.creatorBuilder.build();
        } else {
          record.creator = fieldSetFlags()[8] ? this.creator : (com.fretron.Model.User) defaultValue(fields()[8]);
        }
        record.priority = fieldSetFlags()[9] ? this.priority : (java.lang.String) defaultValue(fields()[9]);
        record.status = fieldSetFlags()[10] ? this.status : (java.lang.String) defaultValue(fields()[10]);
        record.createdAt = fieldSetFlags()[11] ? this.createdAt : (java.lang.Long) defaultValue(fields()[11]);
        record.updatedAt = fieldSetFlags()[12] ? this.updatedAt : (java.lang.Long) defaultValue(fields()[12]);
        record.updatedBy = fieldSetFlags()[13] ? this.updatedBy : (java.lang.String) defaultValue(fields()[13]);
        record.resolutionDate = fieldSetFlags()[14] ? this.resolutionDate : (java.lang.Long) defaultValue(fields()[14]);
        record.resolutionDuration = fieldSetFlags()[15] ? this.resolutionDuration : (java.lang.Long) defaultValue(fields()[15]);
        record.estimatedResolutionDate = fieldSetFlags()[16] ? this.estimatedResolutionDate : (java.lang.Long) defaultValue(fields()[16]);
        record.userWatchers = fieldSetFlags()[17] ? this.userWatchers : (java.util.List<com.fretron.Model.User>) defaultValue(fields()[17]);
        record.userFollowers = fieldSetFlags()[18] ? this.userFollowers : (java.util.List<com.fretron.Model.User>) defaultValue(fields()[18]);
        record.bpartnerFollowers = fieldSetFlags()[19] ? this.bpartnerFollowers : (java.util.List<com.fretron.Model.BuisnessPartner>) defaultValue(fields()[19]);
        record.bpartnerWatchers = fieldSetFlags()[20] ? this.bpartnerWatchers : (java.util.List<com.fretron.Model.BuisnessPartner>) defaultValue(fields()[20]);
        record.tags = fieldSetFlags()[21] ? this.tags : (java.util.List<java.lang.String>) defaultValue(fields()[21]);
        record.comments = fieldSetFlags()[22] ? this.comments : (java.util.List<com.fretron.Model.Comment>) defaultValue(fields()[22]);
        record.attachments = fieldSetFlags()[23] ? this.attachments : (java.util.List<com.fretron.Model.Document>) defaultValue(fields()[23]);
        record.customeFields = fieldSetFlags()[24] ? this.customeFields : (java.util.List<com.fretron.Model.CustomeField>) defaultValue(fields()[24]);
        if (updatesBuilder != null) {
          record.updates = this.updatesBuilder.build();
        } else {
          record.updates = fieldSetFlags()[25] ? this.updates : (com.fretron.Model.Updates) defaultValue(fields()[25]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DeviceStatus extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4321215980103487915L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DeviceStatus\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"deviceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"protocol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"attributes\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Attributes\",\"fields\":[{\"name\":\"battery\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"alarm\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ip\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"distance\",\"type\":[\"null\",\"double\"]},{\"name\":\"totalDistance\",\"type\":[\"null\",\"double\"]},{\"name\":\"isCharge\",\"type\":\"boolean\",\"default\":false},{\"name\":\"ignition\",\"type\":\"boolean\",\"default\":false},{\"name\":\"isOilElectricityConnected\",\"type\":\"boolean\",\"default\":false},{\"name\":\"isGpsTrackingOn\",\"type\":\"boolean\",\"default\":false},{\"name\":\"acc\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"satellitesGpsQualityInfo\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"uploadReason\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uploadMode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"signalStrength\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"commandResult\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"serialNumber\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null},{\"name\":\"batteryLevelEvent\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DeviceEvent\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"time\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}]}],\"default\":null},{\"name\":\"lowBatteryEvent\",\"type\":[\"null\",\"DeviceEvent\"],\"default\":null},{\"name\":\"powerCutEvent\",\"type\":[\"null\",\"DeviceEvent\"],\"default\":null},{\"name\":\"vibrationEvent\",\"type\":[\"null\",\"DeviceEvent\"],\"default\":null},{\"name\":\"lastUpdateTime\",\"type\":[\"null\",\"long\"]},{\"name\":\"lastPositionDeviceTime\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lastPositionServerTime\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lastDisconnectionTime\",\"type\":[\"null\",\"long\"]},{\"name\":\"lastDisconnectionDuration\",\"type\":[\"null\",\"long\"]},{\"name\":\"isConnected\",\"type\":\"boolean\"},{\"name\":\"disconnectionReason\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"batteryStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastGpsPacketDeviceTime\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lastGpsPacketServerTime\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"isIgnitionOn\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LitePosition\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"},{\"name\":\"speed\",\"type\":\"double\"},{\"name\":\"course\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"decoder\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"imei\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lngLat\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"isFillingEnabled\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String deviceId;
  @Deprecated public java.lang.String protocol;
  @Deprecated public com.fretron.Model.Attributes attributes;
  @Deprecated public com.fretron.Model.DeviceEvent batteryLevelEvent;
  @Deprecated public com.fretron.Model.DeviceEvent lowBatteryEvent;
  @Deprecated public com.fretron.Model.DeviceEvent powerCutEvent;
  @Deprecated public com.fretron.Model.DeviceEvent vibrationEvent;
  @Deprecated public java.lang.Long lastUpdateTime;
  @Deprecated public java.lang.Long lastPositionDeviceTime;
  @Deprecated public java.lang.Long lastPositionServerTime;
  @Deprecated public java.lang.Long lastDisconnectionTime;
  @Deprecated public java.lang.Long lastDisconnectionDuration;
  @Deprecated public boolean isConnected;
  @Deprecated public java.lang.String disconnectionReason;
  @Deprecated public java.lang.String vehicleId;
  @Deprecated public java.lang.String batteryStatus;
  @Deprecated public java.lang.Long lastGpsPacketDeviceTime;
  @Deprecated public java.lang.Long lastGpsPacketServerTime;
  @Deprecated public java.lang.Boolean isIgnitionOn;
  @Deprecated public com.fretron.Model.LitePosition location;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DeviceStatus() {}

  /**
   * All-args constructor.
   * @param deviceId The new value for deviceId
   * @param protocol The new value for protocol
   * @param attributes The new value for attributes
   * @param batteryLevelEvent The new value for batteryLevelEvent
   * @param lowBatteryEvent The new value for lowBatteryEvent
   * @param powerCutEvent The new value for powerCutEvent
   * @param vibrationEvent The new value for vibrationEvent
   * @param lastUpdateTime The new value for lastUpdateTime
   * @param lastPositionDeviceTime The new value for lastPositionDeviceTime
   * @param lastPositionServerTime The new value for lastPositionServerTime
   * @param lastDisconnectionTime The new value for lastDisconnectionTime
   * @param lastDisconnectionDuration The new value for lastDisconnectionDuration
   * @param isConnected The new value for isConnected
   * @param disconnectionReason The new value for disconnectionReason
   * @param vehicleId The new value for vehicleId
   * @param batteryStatus The new value for batteryStatus
   * @param lastGpsPacketDeviceTime The new value for lastGpsPacketDeviceTime
   * @param lastGpsPacketServerTime The new value for lastGpsPacketServerTime
   * @param isIgnitionOn The new value for isIgnitionOn
   * @param location The new value for location
   */
  public DeviceStatus(java.lang.String deviceId, java.lang.String protocol, com.fretron.Model.Attributes attributes, com.fretron.Model.DeviceEvent batteryLevelEvent, com.fretron.Model.DeviceEvent lowBatteryEvent, com.fretron.Model.DeviceEvent powerCutEvent, com.fretron.Model.DeviceEvent vibrationEvent, java.lang.Long lastUpdateTime, java.lang.Long lastPositionDeviceTime, java.lang.Long lastPositionServerTime, java.lang.Long lastDisconnectionTime, java.lang.Long lastDisconnectionDuration, java.lang.Boolean isConnected, java.lang.String disconnectionReason, java.lang.String vehicleId, java.lang.String batteryStatus, java.lang.Long lastGpsPacketDeviceTime, java.lang.Long lastGpsPacketServerTime, java.lang.Boolean isIgnitionOn, com.fretron.Model.LitePosition location) {
    this.deviceId = deviceId;
    this.protocol = protocol;
    this.attributes = attributes;
    this.batteryLevelEvent = batteryLevelEvent;
    this.lowBatteryEvent = lowBatteryEvent;
    this.powerCutEvent = powerCutEvent;
    this.vibrationEvent = vibrationEvent;
    this.lastUpdateTime = lastUpdateTime;
    this.lastPositionDeviceTime = lastPositionDeviceTime;
    this.lastPositionServerTime = lastPositionServerTime;
    this.lastDisconnectionTime = lastDisconnectionTime;
    this.lastDisconnectionDuration = lastDisconnectionDuration;
    this.isConnected = isConnected;
    this.disconnectionReason = disconnectionReason;
    this.vehicleId = vehicleId;
    this.batteryStatus = batteryStatus;
    this.lastGpsPacketDeviceTime = lastGpsPacketDeviceTime;
    this.lastGpsPacketServerTime = lastGpsPacketServerTime;
    this.isIgnitionOn = isIgnitionOn;
    this.location = location;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return deviceId;
    case 1: return protocol;
    case 2: return attributes;
    case 3: return batteryLevelEvent;
    case 4: return lowBatteryEvent;
    case 5: return powerCutEvent;
    case 6: return vibrationEvent;
    case 7: return lastUpdateTime;
    case 8: return lastPositionDeviceTime;
    case 9: return lastPositionServerTime;
    case 10: return lastDisconnectionTime;
    case 11: return lastDisconnectionDuration;
    case 12: return isConnected;
    case 13: return disconnectionReason;
    case 14: return vehicleId;
    case 15: return batteryStatus;
    case 16: return lastGpsPacketDeviceTime;
    case 17: return lastGpsPacketServerTime;
    case 18: return isIgnitionOn;
    case 19: return location;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: deviceId = (java.lang.String)value$; break;
    case 1: protocol = (java.lang.String)value$; break;
    case 2: attributes = (com.fretron.Model.Attributes)value$; break;
    case 3: batteryLevelEvent = (com.fretron.Model.DeviceEvent)value$; break;
    case 4: lowBatteryEvent = (com.fretron.Model.DeviceEvent)value$; break;
    case 5: powerCutEvent = (com.fretron.Model.DeviceEvent)value$; break;
    case 6: vibrationEvent = (com.fretron.Model.DeviceEvent)value$; break;
    case 7: lastUpdateTime = (java.lang.Long)value$; break;
    case 8: lastPositionDeviceTime = (java.lang.Long)value$; break;
    case 9: lastPositionServerTime = (java.lang.Long)value$; break;
    case 10: lastDisconnectionTime = (java.lang.Long)value$; break;
    case 11: lastDisconnectionDuration = (java.lang.Long)value$; break;
    case 12: isConnected = (java.lang.Boolean)value$; break;
    case 13: disconnectionReason = (java.lang.String)value$; break;
    case 14: vehicleId = (java.lang.String)value$; break;
    case 15: batteryStatus = (java.lang.String)value$; break;
    case 16: lastGpsPacketDeviceTime = (java.lang.Long)value$; break;
    case 17: lastGpsPacketServerTime = (java.lang.Long)value$; break;
    case 18: isIgnitionOn = (java.lang.Boolean)value$; break;
    case 19: location = (com.fretron.Model.LitePosition)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'deviceId' field.
   * @return The value of the 'deviceId' field.
   */
  public java.lang.String getDeviceId() {
    return deviceId;
  }

  /**
   * Sets the value of the 'deviceId' field.
   * @param value the value to set.
   */
  public void setDeviceId(java.lang.String value) {
    this.deviceId = value;
  }

  /**
   * Gets the value of the 'protocol' field.
   * @return The value of the 'protocol' field.
   */
  public java.lang.String getProtocol() {
    return protocol;
  }

  /**
   * Sets the value of the 'protocol' field.
   * @param value the value to set.
   */
  public void setProtocol(java.lang.String value) {
    this.protocol = value;
  }

  /**
   * Gets the value of the 'attributes' field.
   * @return The value of the 'attributes' field.
   */
  public com.fretron.Model.Attributes getAttributes() {
    return attributes;
  }

  /**
   * Sets the value of the 'attributes' field.
   * @param value the value to set.
   */
  public void setAttributes(com.fretron.Model.Attributes value) {
    this.attributes = value;
  }

  /**
   * Gets the value of the 'batteryLevelEvent' field.
   * @return The value of the 'batteryLevelEvent' field.
   */
  public com.fretron.Model.DeviceEvent getBatteryLevelEvent() {
    return batteryLevelEvent;
  }

  /**
   * Sets the value of the 'batteryLevelEvent' field.
   * @param value the value to set.
   */
  public void setBatteryLevelEvent(com.fretron.Model.DeviceEvent value) {
    this.batteryLevelEvent = value;
  }

  /**
   * Gets the value of the 'lowBatteryEvent' field.
   * @return The value of the 'lowBatteryEvent' field.
   */
  public com.fretron.Model.DeviceEvent getLowBatteryEvent() {
    return lowBatteryEvent;
  }

  /**
   * Sets the value of the 'lowBatteryEvent' field.
   * @param value the value to set.
   */
  public void setLowBatteryEvent(com.fretron.Model.DeviceEvent value) {
    this.lowBatteryEvent = value;
  }

  /**
   * Gets the value of the 'powerCutEvent' field.
   * @return The value of the 'powerCutEvent' field.
   */
  public com.fretron.Model.DeviceEvent getPowerCutEvent() {
    return powerCutEvent;
  }

  /**
   * Sets the value of the 'powerCutEvent' field.
   * @param value the value to set.
   */
  public void setPowerCutEvent(com.fretron.Model.DeviceEvent value) {
    this.powerCutEvent = value;
  }

  /**
   * Gets the value of the 'vibrationEvent' field.
   * @return The value of the 'vibrationEvent' field.
   */
  public com.fretron.Model.DeviceEvent getVibrationEvent() {
    return vibrationEvent;
  }

  /**
   * Sets the value of the 'vibrationEvent' field.
   * @param value the value to set.
   */
  public void setVibrationEvent(com.fretron.Model.DeviceEvent value) {
    this.vibrationEvent = value;
  }

  /**
   * Gets the value of the 'lastUpdateTime' field.
   * @return The value of the 'lastUpdateTime' field.
   */
  public java.lang.Long getLastUpdateTime() {
    return lastUpdateTime;
  }

  /**
   * Sets the value of the 'lastUpdateTime' field.
   * @param value the value to set.
   */
  public void setLastUpdateTime(java.lang.Long value) {
    this.lastUpdateTime = value;
  }

  /**
   * Gets the value of the 'lastPositionDeviceTime' field.
   * @return The value of the 'lastPositionDeviceTime' field.
   */
  public java.lang.Long getLastPositionDeviceTime() {
    return lastPositionDeviceTime;
  }

  /**
   * Sets the value of the 'lastPositionDeviceTime' field.
   * @param value the value to set.
   */
  public void setLastPositionDeviceTime(java.lang.Long value) {
    this.lastPositionDeviceTime = value;
  }

  /**
   * Gets the value of the 'lastPositionServerTime' field.
   * @return The value of the 'lastPositionServerTime' field.
   */
  public java.lang.Long getLastPositionServerTime() {
    return lastPositionServerTime;
  }

  /**
   * Sets the value of the 'lastPositionServerTime' field.
   * @param value the value to set.
   */
  public void setLastPositionServerTime(java.lang.Long value) {
    this.lastPositionServerTime = value;
  }

  /**
   * Gets the value of the 'lastDisconnectionTime' field.
   * @return The value of the 'lastDisconnectionTime' field.
   */
  public java.lang.Long getLastDisconnectionTime() {
    return lastDisconnectionTime;
  }

  /**
   * Sets the value of the 'lastDisconnectionTime' field.
   * @param value the value to set.
   */
  public void setLastDisconnectionTime(java.lang.Long value) {
    this.lastDisconnectionTime = value;
  }

  /**
   * Gets the value of the 'lastDisconnectionDuration' field.
   * @return The value of the 'lastDisconnectionDuration' field.
   */
  public java.lang.Long getLastDisconnectionDuration() {
    return lastDisconnectionDuration;
  }

  /**
   * Sets the value of the 'lastDisconnectionDuration' field.
   * @param value the value to set.
   */
  public void setLastDisconnectionDuration(java.lang.Long value) {
    this.lastDisconnectionDuration = value;
  }

  /**
   * Gets the value of the 'isConnected' field.
   * @return The value of the 'isConnected' field.
   */
  public java.lang.Boolean getIsConnected() {
    return isConnected;
  }

  /**
   * Sets the value of the 'isConnected' field.
   * @param value the value to set.
   */
  public void setIsConnected(java.lang.Boolean value) {
    this.isConnected = value;
  }

  /**
   * Gets the value of the 'disconnectionReason' field.
   * @return The value of the 'disconnectionReason' field.
   */
  public java.lang.String getDisconnectionReason() {
    return disconnectionReason;
  }

  /**
   * Sets the value of the 'disconnectionReason' field.
   * @param value the value to set.
   */
  public void setDisconnectionReason(java.lang.String value) {
    this.disconnectionReason = value;
  }

  /**
   * Gets the value of the 'vehicleId' field.
   * @return The value of the 'vehicleId' field.
   */
  public java.lang.String getVehicleId() {
    return vehicleId;
  }

  /**
   * Sets the value of the 'vehicleId' field.
   * @param value the value to set.
   */
  public void setVehicleId(java.lang.String value) {
    this.vehicleId = value;
  }

  /**
   * Gets the value of the 'batteryStatus' field.
   * @return The value of the 'batteryStatus' field.
   */
  public java.lang.String getBatteryStatus() {
    return batteryStatus;
  }

  /**
   * Sets the value of the 'batteryStatus' field.
   * @param value the value to set.
   */
  public void setBatteryStatus(java.lang.String value) {
    this.batteryStatus = value;
  }

  /**
   * Gets the value of the 'lastGpsPacketDeviceTime' field.
   * @return The value of the 'lastGpsPacketDeviceTime' field.
   */
  public java.lang.Long getLastGpsPacketDeviceTime() {
    return lastGpsPacketDeviceTime;
  }

  /**
   * Sets the value of the 'lastGpsPacketDeviceTime' field.
   * @param value the value to set.
   */
  public void setLastGpsPacketDeviceTime(java.lang.Long value) {
    this.lastGpsPacketDeviceTime = value;
  }

  /**
   * Gets the value of the 'lastGpsPacketServerTime' field.
   * @return The value of the 'lastGpsPacketServerTime' field.
   */
  public java.lang.Long getLastGpsPacketServerTime() {
    return lastGpsPacketServerTime;
  }

  /**
   * Sets the value of the 'lastGpsPacketServerTime' field.
   * @param value the value to set.
   */
  public void setLastGpsPacketServerTime(java.lang.Long value) {
    this.lastGpsPacketServerTime = value;
  }

  /**
   * Gets the value of the 'isIgnitionOn' field.
   * @return The value of the 'isIgnitionOn' field.
   */
  public java.lang.Boolean getIsIgnitionOn() {
    return isIgnitionOn;
  }

  /**
   * Sets the value of the 'isIgnitionOn' field.
   * @param value the value to set.
   */
  public void setIsIgnitionOn(java.lang.Boolean value) {
    this.isIgnitionOn = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public com.fretron.Model.LitePosition getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(com.fretron.Model.LitePosition value) {
    this.location = value;
  }

  /**
   * Creates a new DeviceStatus RecordBuilder.
   * @return A new DeviceStatus RecordBuilder
   */
  public static com.fretron.Model.DeviceStatus.Builder newBuilder() {
    return new com.fretron.Model.DeviceStatus.Builder();
  }

  /**
   * Creates a new DeviceStatus RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DeviceStatus RecordBuilder
   */
  public static com.fretron.Model.DeviceStatus.Builder newBuilder(com.fretron.Model.DeviceStatus.Builder other) {
    return new com.fretron.Model.DeviceStatus.Builder(other);
  }

  /**
   * Creates a new DeviceStatus RecordBuilder by copying an existing DeviceStatus instance.
   * @param other The existing instance to copy.
   * @return A new DeviceStatus RecordBuilder
   */
  public static com.fretron.Model.DeviceStatus.Builder newBuilder(com.fretron.Model.DeviceStatus other) {
    return new com.fretron.Model.DeviceStatus.Builder(other);
  }

  /**
   * RecordBuilder for DeviceStatus instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DeviceStatus>
    implements org.apache.avro.data.RecordBuilder<DeviceStatus> {

    private java.lang.String deviceId;
    private java.lang.String protocol;
    private com.fretron.Model.Attributes attributes;
    private com.fretron.Model.Attributes.Builder attributesBuilder;
    private com.fretron.Model.DeviceEvent batteryLevelEvent;
    private com.fretron.Model.DeviceEvent.Builder batteryLevelEventBuilder;
    private com.fretron.Model.DeviceEvent lowBatteryEvent;
    private com.fretron.Model.DeviceEvent.Builder lowBatteryEventBuilder;
    private com.fretron.Model.DeviceEvent powerCutEvent;
    private com.fretron.Model.DeviceEvent.Builder powerCutEventBuilder;
    private com.fretron.Model.DeviceEvent vibrationEvent;
    private com.fretron.Model.DeviceEvent.Builder vibrationEventBuilder;
    private java.lang.Long lastUpdateTime;
    private java.lang.Long lastPositionDeviceTime;
    private java.lang.Long lastPositionServerTime;
    private java.lang.Long lastDisconnectionTime;
    private java.lang.Long lastDisconnectionDuration;
    private boolean isConnected;
    private java.lang.String disconnectionReason;
    private java.lang.String vehicleId;
    private java.lang.String batteryStatus;
    private java.lang.Long lastGpsPacketDeviceTime;
    private java.lang.Long lastGpsPacketServerTime;
    private java.lang.Boolean isIgnitionOn;
    private com.fretron.Model.LitePosition location;
    private com.fretron.Model.LitePosition.Builder locationBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.DeviceStatus.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[0].schema(), other.deviceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.protocol)) {
        this.protocol = data().deepCopy(fields()[1].schema(), other.protocol);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.attributes)) {
        this.attributes = data().deepCopy(fields()[2].schema(), other.attributes);
        fieldSetFlags()[2] = true;
      }
      if (other.hasAttributesBuilder()) {
        this.attributesBuilder = com.fretron.Model.Attributes.newBuilder(other.getAttributesBuilder());
      }
      if (isValidValue(fields()[3], other.batteryLevelEvent)) {
        this.batteryLevelEvent = data().deepCopy(fields()[3].schema(), other.batteryLevelEvent);
        fieldSetFlags()[3] = true;
      }
      if (other.hasBatteryLevelEventBuilder()) {
        this.batteryLevelEventBuilder = com.fretron.Model.DeviceEvent.newBuilder(other.getBatteryLevelEventBuilder());
      }
      if (isValidValue(fields()[4], other.lowBatteryEvent)) {
        this.lowBatteryEvent = data().deepCopy(fields()[4].schema(), other.lowBatteryEvent);
        fieldSetFlags()[4] = true;
      }
      if (other.hasLowBatteryEventBuilder()) {
        this.lowBatteryEventBuilder = com.fretron.Model.DeviceEvent.newBuilder(other.getLowBatteryEventBuilder());
      }
      if (isValidValue(fields()[5], other.powerCutEvent)) {
        this.powerCutEvent = data().deepCopy(fields()[5].schema(), other.powerCutEvent);
        fieldSetFlags()[5] = true;
      }
      if (other.hasPowerCutEventBuilder()) {
        this.powerCutEventBuilder = com.fretron.Model.DeviceEvent.newBuilder(other.getPowerCutEventBuilder());
      }
      if (isValidValue(fields()[6], other.vibrationEvent)) {
        this.vibrationEvent = data().deepCopy(fields()[6].schema(), other.vibrationEvent);
        fieldSetFlags()[6] = true;
      }
      if (other.hasVibrationEventBuilder()) {
        this.vibrationEventBuilder = com.fretron.Model.DeviceEvent.newBuilder(other.getVibrationEventBuilder());
      }
      if (isValidValue(fields()[7], other.lastUpdateTime)) {
        this.lastUpdateTime = data().deepCopy(fields()[7].schema(), other.lastUpdateTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.lastPositionDeviceTime)) {
        this.lastPositionDeviceTime = data().deepCopy(fields()[8].schema(), other.lastPositionDeviceTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.lastPositionServerTime)) {
        this.lastPositionServerTime = data().deepCopy(fields()[9].schema(), other.lastPositionServerTime);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.lastDisconnectionTime)) {
        this.lastDisconnectionTime = data().deepCopy(fields()[10].schema(), other.lastDisconnectionTime);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.lastDisconnectionDuration)) {
        this.lastDisconnectionDuration = data().deepCopy(fields()[11].schema(), other.lastDisconnectionDuration);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.isConnected)) {
        this.isConnected = data().deepCopy(fields()[12].schema(), other.isConnected);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.disconnectionReason)) {
        this.disconnectionReason = data().deepCopy(fields()[13].schema(), other.disconnectionReason);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[14].schema(), other.vehicleId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.batteryStatus)) {
        this.batteryStatus = data().deepCopy(fields()[15].schema(), other.batteryStatus);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.lastGpsPacketDeviceTime)) {
        this.lastGpsPacketDeviceTime = data().deepCopy(fields()[16].schema(), other.lastGpsPacketDeviceTime);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.lastGpsPacketServerTime)) {
        this.lastGpsPacketServerTime = data().deepCopy(fields()[17].schema(), other.lastGpsPacketServerTime);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.isIgnitionOn)) {
        this.isIgnitionOn = data().deepCopy(fields()[18].schema(), other.isIgnitionOn);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.location)) {
        this.location = data().deepCopy(fields()[19].schema(), other.location);
        fieldSetFlags()[19] = true;
      }
      if (other.hasLocationBuilder()) {
        this.locationBuilder = com.fretron.Model.LitePosition.newBuilder(other.getLocationBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing DeviceStatus instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.DeviceStatus other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[0].schema(), other.deviceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.protocol)) {
        this.protocol = data().deepCopy(fields()[1].schema(), other.protocol);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.attributes)) {
        this.attributes = data().deepCopy(fields()[2].schema(), other.attributes);
        fieldSetFlags()[2] = true;
      }
      this.attributesBuilder = null;
      if (isValidValue(fields()[3], other.batteryLevelEvent)) {
        this.batteryLevelEvent = data().deepCopy(fields()[3].schema(), other.batteryLevelEvent);
        fieldSetFlags()[3] = true;
      }
      this.batteryLevelEventBuilder = null;
      if (isValidValue(fields()[4], other.lowBatteryEvent)) {
        this.lowBatteryEvent = data().deepCopy(fields()[4].schema(), other.lowBatteryEvent);
        fieldSetFlags()[4] = true;
      }
      this.lowBatteryEventBuilder = null;
      if (isValidValue(fields()[5], other.powerCutEvent)) {
        this.powerCutEvent = data().deepCopy(fields()[5].schema(), other.powerCutEvent);
        fieldSetFlags()[5] = true;
      }
      this.powerCutEventBuilder = null;
      if (isValidValue(fields()[6], other.vibrationEvent)) {
        this.vibrationEvent = data().deepCopy(fields()[6].schema(), other.vibrationEvent);
        fieldSetFlags()[6] = true;
      }
      this.vibrationEventBuilder = null;
      if (isValidValue(fields()[7], other.lastUpdateTime)) {
        this.lastUpdateTime = data().deepCopy(fields()[7].schema(), other.lastUpdateTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.lastPositionDeviceTime)) {
        this.lastPositionDeviceTime = data().deepCopy(fields()[8].schema(), other.lastPositionDeviceTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.lastPositionServerTime)) {
        this.lastPositionServerTime = data().deepCopy(fields()[9].schema(), other.lastPositionServerTime);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.lastDisconnectionTime)) {
        this.lastDisconnectionTime = data().deepCopy(fields()[10].schema(), other.lastDisconnectionTime);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.lastDisconnectionDuration)) {
        this.lastDisconnectionDuration = data().deepCopy(fields()[11].schema(), other.lastDisconnectionDuration);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.isConnected)) {
        this.isConnected = data().deepCopy(fields()[12].schema(), other.isConnected);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.disconnectionReason)) {
        this.disconnectionReason = data().deepCopy(fields()[13].schema(), other.disconnectionReason);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[14].schema(), other.vehicleId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.batteryStatus)) {
        this.batteryStatus = data().deepCopy(fields()[15].schema(), other.batteryStatus);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.lastGpsPacketDeviceTime)) {
        this.lastGpsPacketDeviceTime = data().deepCopy(fields()[16].schema(), other.lastGpsPacketDeviceTime);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.lastGpsPacketServerTime)) {
        this.lastGpsPacketServerTime = data().deepCopy(fields()[17].schema(), other.lastGpsPacketServerTime);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.isIgnitionOn)) {
        this.isIgnitionOn = data().deepCopy(fields()[18].schema(), other.isIgnitionOn);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.location)) {
        this.location = data().deepCopy(fields()[19].schema(), other.location);
        fieldSetFlags()[19] = true;
      }
      this.locationBuilder = null;
    }

    /**
      * Gets the value of the 'deviceId' field.
      * @return The value.
      */
    public java.lang.String getDeviceId() {
      return deviceId;
    }

    /**
      * Sets the value of the 'deviceId' field.
      * @param value The value of 'deviceId'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setDeviceId(java.lang.String value) {
      validate(fields()[0], value);
      this.deviceId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceId' field has been set.
      * @return True if the 'deviceId' field has been set, false otherwise.
      */
    public boolean hasDeviceId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'deviceId' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearDeviceId() {
      deviceId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'protocol' field.
      * @return The value.
      */
    public java.lang.String getProtocol() {
      return protocol;
    }

    /**
      * Sets the value of the 'protocol' field.
      * @param value The value of 'protocol'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setProtocol(java.lang.String value) {
      validate(fields()[1], value);
      this.protocol = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'protocol' field has been set.
      * @return True if the 'protocol' field has been set, false otherwise.
      */
    public boolean hasProtocol() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'protocol' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearProtocol() {
      protocol = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'attributes' field.
      * @return The value.
      */
    public com.fretron.Model.Attributes getAttributes() {
      return attributes;
    }

    /**
      * Sets the value of the 'attributes' field.
      * @param value The value of 'attributes'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setAttributes(com.fretron.Model.Attributes value) {
      validate(fields()[2], value);
      this.attributesBuilder = null;
      this.attributes = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'attributes' field has been set.
      * @return True if the 'attributes' field has been set, false otherwise.
      */
    public boolean hasAttributes() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'attributes' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Attributes.Builder getAttributesBuilder() {
      if (attributesBuilder == null) {
        if (hasAttributes()) {
          setAttributesBuilder(com.fretron.Model.Attributes.newBuilder(attributes));
        } else {
          setAttributesBuilder(com.fretron.Model.Attributes.newBuilder());
        }
      }
      return attributesBuilder;
    }

    /**
     * Sets the Builder instance for the 'attributes' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.DeviceStatus.Builder setAttributesBuilder(com.fretron.Model.Attributes.Builder value) {
      clearAttributes();
      attributesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'attributes' field has an active Builder instance
     * @return True if the 'attributes' field has an active Builder instance
     */
    public boolean hasAttributesBuilder() {
      return attributesBuilder != null;
    }

    /**
      * Clears the value of the 'attributes' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearAttributes() {
      attributes = null;
      attributesBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'batteryLevelEvent' field.
      * @return The value.
      */
    public com.fretron.Model.DeviceEvent getBatteryLevelEvent() {
      return batteryLevelEvent;
    }

    /**
      * Sets the value of the 'batteryLevelEvent' field.
      * @param value The value of 'batteryLevelEvent'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setBatteryLevelEvent(com.fretron.Model.DeviceEvent value) {
      validate(fields()[3], value);
      this.batteryLevelEventBuilder = null;
      this.batteryLevelEvent = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'batteryLevelEvent' field has been set.
      * @return True if the 'batteryLevelEvent' field has been set, false otherwise.
      */
    public boolean hasBatteryLevelEvent() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'batteryLevelEvent' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.DeviceEvent.Builder getBatteryLevelEventBuilder() {
      if (batteryLevelEventBuilder == null) {
        if (hasBatteryLevelEvent()) {
          setBatteryLevelEventBuilder(com.fretron.Model.DeviceEvent.newBuilder(batteryLevelEvent));
        } else {
          setBatteryLevelEventBuilder(com.fretron.Model.DeviceEvent.newBuilder());
        }
      }
      return batteryLevelEventBuilder;
    }

    /**
     * Sets the Builder instance for the 'batteryLevelEvent' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.DeviceStatus.Builder setBatteryLevelEventBuilder(com.fretron.Model.DeviceEvent.Builder value) {
      clearBatteryLevelEvent();
      batteryLevelEventBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'batteryLevelEvent' field has an active Builder instance
     * @return True if the 'batteryLevelEvent' field has an active Builder instance
     */
    public boolean hasBatteryLevelEventBuilder() {
      return batteryLevelEventBuilder != null;
    }

    /**
      * Clears the value of the 'batteryLevelEvent' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearBatteryLevelEvent() {
      batteryLevelEvent = null;
      batteryLevelEventBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'lowBatteryEvent' field.
      * @return The value.
      */
    public com.fretron.Model.DeviceEvent getLowBatteryEvent() {
      return lowBatteryEvent;
    }

    /**
      * Sets the value of the 'lowBatteryEvent' field.
      * @param value The value of 'lowBatteryEvent'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setLowBatteryEvent(com.fretron.Model.DeviceEvent value) {
      validate(fields()[4], value);
      this.lowBatteryEventBuilder = null;
      this.lowBatteryEvent = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'lowBatteryEvent' field has been set.
      * @return True if the 'lowBatteryEvent' field has been set, false otherwise.
      */
    public boolean hasLowBatteryEvent() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'lowBatteryEvent' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.DeviceEvent.Builder getLowBatteryEventBuilder() {
      if (lowBatteryEventBuilder == null) {
        if (hasLowBatteryEvent()) {
          setLowBatteryEventBuilder(com.fretron.Model.DeviceEvent.newBuilder(lowBatteryEvent));
        } else {
          setLowBatteryEventBuilder(com.fretron.Model.DeviceEvent.newBuilder());
        }
      }
      return lowBatteryEventBuilder;
    }

    /**
     * Sets the Builder instance for the 'lowBatteryEvent' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.DeviceStatus.Builder setLowBatteryEventBuilder(com.fretron.Model.DeviceEvent.Builder value) {
      clearLowBatteryEvent();
      lowBatteryEventBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'lowBatteryEvent' field has an active Builder instance
     * @return True if the 'lowBatteryEvent' field has an active Builder instance
     */
    public boolean hasLowBatteryEventBuilder() {
      return lowBatteryEventBuilder != null;
    }

    /**
      * Clears the value of the 'lowBatteryEvent' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearLowBatteryEvent() {
      lowBatteryEvent = null;
      lowBatteryEventBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'powerCutEvent' field.
      * @return The value.
      */
    public com.fretron.Model.DeviceEvent getPowerCutEvent() {
      return powerCutEvent;
    }

    /**
      * Sets the value of the 'powerCutEvent' field.
      * @param value The value of 'powerCutEvent'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setPowerCutEvent(com.fretron.Model.DeviceEvent value) {
      validate(fields()[5], value);
      this.powerCutEventBuilder = null;
      this.powerCutEvent = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'powerCutEvent' field has been set.
      * @return True if the 'powerCutEvent' field has been set, false otherwise.
      */
    public boolean hasPowerCutEvent() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'powerCutEvent' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.DeviceEvent.Builder getPowerCutEventBuilder() {
      if (powerCutEventBuilder == null) {
        if (hasPowerCutEvent()) {
          setPowerCutEventBuilder(com.fretron.Model.DeviceEvent.newBuilder(powerCutEvent));
        } else {
          setPowerCutEventBuilder(com.fretron.Model.DeviceEvent.newBuilder());
        }
      }
      return powerCutEventBuilder;
    }

    /**
     * Sets the Builder instance for the 'powerCutEvent' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.DeviceStatus.Builder setPowerCutEventBuilder(com.fretron.Model.DeviceEvent.Builder value) {
      clearPowerCutEvent();
      powerCutEventBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'powerCutEvent' field has an active Builder instance
     * @return True if the 'powerCutEvent' field has an active Builder instance
     */
    public boolean hasPowerCutEventBuilder() {
      return powerCutEventBuilder != null;
    }

    /**
      * Clears the value of the 'powerCutEvent' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearPowerCutEvent() {
      powerCutEvent = null;
      powerCutEventBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'vibrationEvent' field.
      * @return The value.
      */
    public com.fretron.Model.DeviceEvent getVibrationEvent() {
      return vibrationEvent;
    }

    /**
      * Sets the value of the 'vibrationEvent' field.
      * @param value The value of 'vibrationEvent'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setVibrationEvent(com.fretron.Model.DeviceEvent value) {
      validate(fields()[6], value);
      this.vibrationEventBuilder = null;
      this.vibrationEvent = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'vibrationEvent' field has been set.
      * @return True if the 'vibrationEvent' field has been set, false otherwise.
      */
    public boolean hasVibrationEvent() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'vibrationEvent' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.DeviceEvent.Builder getVibrationEventBuilder() {
      if (vibrationEventBuilder == null) {
        if (hasVibrationEvent()) {
          setVibrationEventBuilder(com.fretron.Model.DeviceEvent.newBuilder(vibrationEvent));
        } else {
          setVibrationEventBuilder(com.fretron.Model.DeviceEvent.newBuilder());
        }
      }
      return vibrationEventBuilder;
    }

    /**
     * Sets the Builder instance for the 'vibrationEvent' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.DeviceStatus.Builder setVibrationEventBuilder(com.fretron.Model.DeviceEvent.Builder value) {
      clearVibrationEvent();
      vibrationEventBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'vibrationEvent' field has an active Builder instance
     * @return True if the 'vibrationEvent' field has an active Builder instance
     */
    public boolean hasVibrationEventBuilder() {
      return vibrationEventBuilder != null;
    }

    /**
      * Clears the value of the 'vibrationEvent' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearVibrationEvent() {
      vibrationEvent = null;
      vibrationEventBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdateTime' field.
      * @return The value.
      */
    public java.lang.Long getLastUpdateTime() {
      return lastUpdateTime;
    }

    /**
      * Sets the value of the 'lastUpdateTime' field.
      * @param value The value of 'lastUpdateTime'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setLastUpdateTime(java.lang.Long value) {
      validate(fields()[7], value);
      this.lastUpdateTime = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdateTime' field has been set.
      * @return True if the 'lastUpdateTime' field has been set, false otherwise.
      */
    public boolean hasLastUpdateTime() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'lastUpdateTime' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearLastUpdateTime() {
      lastUpdateTime = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastPositionDeviceTime' field.
      * @return The value.
      */
    public java.lang.Long getLastPositionDeviceTime() {
      return lastPositionDeviceTime;
    }

    /**
      * Sets the value of the 'lastPositionDeviceTime' field.
      * @param value The value of 'lastPositionDeviceTime'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setLastPositionDeviceTime(java.lang.Long value) {
      validate(fields()[8], value);
      this.lastPositionDeviceTime = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'lastPositionDeviceTime' field has been set.
      * @return True if the 'lastPositionDeviceTime' field has been set, false otherwise.
      */
    public boolean hasLastPositionDeviceTime() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'lastPositionDeviceTime' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearLastPositionDeviceTime() {
      lastPositionDeviceTime = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastPositionServerTime' field.
      * @return The value.
      */
    public java.lang.Long getLastPositionServerTime() {
      return lastPositionServerTime;
    }

    /**
      * Sets the value of the 'lastPositionServerTime' field.
      * @param value The value of 'lastPositionServerTime'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setLastPositionServerTime(java.lang.Long value) {
      validate(fields()[9], value);
      this.lastPositionServerTime = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'lastPositionServerTime' field has been set.
      * @return True if the 'lastPositionServerTime' field has been set, false otherwise.
      */
    public boolean hasLastPositionServerTime() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'lastPositionServerTime' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearLastPositionServerTime() {
      lastPositionServerTime = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastDisconnectionTime' field.
      * @return The value.
      */
    public java.lang.Long getLastDisconnectionTime() {
      return lastDisconnectionTime;
    }

    /**
      * Sets the value of the 'lastDisconnectionTime' field.
      * @param value The value of 'lastDisconnectionTime'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setLastDisconnectionTime(java.lang.Long value) {
      validate(fields()[10], value);
      this.lastDisconnectionTime = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'lastDisconnectionTime' field has been set.
      * @return True if the 'lastDisconnectionTime' field has been set, false otherwise.
      */
    public boolean hasLastDisconnectionTime() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'lastDisconnectionTime' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearLastDisconnectionTime() {
      lastDisconnectionTime = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastDisconnectionDuration' field.
      * @return The value.
      */
    public java.lang.Long getLastDisconnectionDuration() {
      return lastDisconnectionDuration;
    }

    /**
      * Sets the value of the 'lastDisconnectionDuration' field.
      * @param value The value of 'lastDisconnectionDuration'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setLastDisconnectionDuration(java.lang.Long value) {
      validate(fields()[11], value);
      this.lastDisconnectionDuration = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'lastDisconnectionDuration' field has been set.
      * @return True if the 'lastDisconnectionDuration' field has been set, false otherwise.
      */
    public boolean hasLastDisconnectionDuration() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'lastDisconnectionDuration' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearLastDisconnectionDuration() {
      lastDisconnectionDuration = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'isConnected' field.
      * @return The value.
      */
    public java.lang.Boolean getIsConnected() {
      return isConnected;
    }

    /**
      * Sets the value of the 'isConnected' field.
      * @param value The value of 'isConnected'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setIsConnected(boolean value) {
      validate(fields()[12], value);
      this.isConnected = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'isConnected' field has been set.
      * @return True if the 'isConnected' field has been set, false otherwise.
      */
    public boolean hasIsConnected() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'isConnected' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearIsConnected() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'disconnectionReason' field.
      * @return The value.
      */
    public java.lang.String getDisconnectionReason() {
      return disconnectionReason;
    }

    /**
      * Sets the value of the 'disconnectionReason' field.
      * @param value The value of 'disconnectionReason'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setDisconnectionReason(java.lang.String value) {
      validate(fields()[13], value);
      this.disconnectionReason = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'disconnectionReason' field has been set.
      * @return True if the 'disconnectionReason' field has been set, false otherwise.
      */
    public boolean hasDisconnectionReason() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'disconnectionReason' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearDisconnectionReason() {
      disconnectionReason = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleId' field.
      * @return The value.
      */
    public java.lang.String getVehicleId() {
      return vehicleId;
    }

    /**
      * Sets the value of the 'vehicleId' field.
      * @param value The value of 'vehicleId'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setVehicleId(java.lang.String value) {
      validate(fields()[14], value);
      this.vehicleId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleId' field has been set.
      * @return True if the 'vehicleId' field has been set, false otherwise.
      */
    public boolean hasVehicleId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'vehicleId' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearVehicleId() {
      vehicleId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'batteryStatus' field.
      * @return The value.
      */
    public java.lang.String getBatteryStatus() {
      return batteryStatus;
    }

    /**
      * Sets the value of the 'batteryStatus' field.
      * @param value The value of 'batteryStatus'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setBatteryStatus(java.lang.String value) {
      validate(fields()[15], value);
      this.batteryStatus = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'batteryStatus' field has been set.
      * @return True if the 'batteryStatus' field has been set, false otherwise.
      */
    public boolean hasBatteryStatus() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'batteryStatus' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearBatteryStatus() {
      batteryStatus = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastGpsPacketDeviceTime' field.
      * @return The value.
      */
    public java.lang.Long getLastGpsPacketDeviceTime() {
      return lastGpsPacketDeviceTime;
    }

    /**
      * Sets the value of the 'lastGpsPacketDeviceTime' field.
      * @param value The value of 'lastGpsPacketDeviceTime'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setLastGpsPacketDeviceTime(java.lang.Long value) {
      validate(fields()[16], value);
      this.lastGpsPacketDeviceTime = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'lastGpsPacketDeviceTime' field has been set.
      * @return True if the 'lastGpsPacketDeviceTime' field has been set, false otherwise.
      */
    public boolean hasLastGpsPacketDeviceTime() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'lastGpsPacketDeviceTime' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearLastGpsPacketDeviceTime() {
      lastGpsPacketDeviceTime = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastGpsPacketServerTime' field.
      * @return The value.
      */
    public java.lang.Long getLastGpsPacketServerTime() {
      return lastGpsPacketServerTime;
    }

    /**
      * Sets the value of the 'lastGpsPacketServerTime' field.
      * @param value The value of 'lastGpsPacketServerTime'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setLastGpsPacketServerTime(java.lang.Long value) {
      validate(fields()[17], value);
      this.lastGpsPacketServerTime = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'lastGpsPacketServerTime' field has been set.
      * @return True if the 'lastGpsPacketServerTime' field has been set, false otherwise.
      */
    public boolean hasLastGpsPacketServerTime() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'lastGpsPacketServerTime' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearLastGpsPacketServerTime() {
      lastGpsPacketServerTime = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'isIgnitionOn' field.
      * @return The value.
      */
    public java.lang.Boolean getIsIgnitionOn() {
      return isIgnitionOn;
    }

    /**
      * Sets the value of the 'isIgnitionOn' field.
      * @param value The value of 'isIgnitionOn'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setIsIgnitionOn(java.lang.Boolean value) {
      validate(fields()[18], value);
      this.isIgnitionOn = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'isIgnitionOn' field has been set.
      * @return True if the 'isIgnitionOn' field has been set, false otherwise.
      */
    public boolean hasIsIgnitionOn() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'isIgnitionOn' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearIsIgnitionOn() {
      isIgnitionOn = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public com.fretron.Model.LitePosition getLocation() {
      return location;
    }

    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder setLocation(com.fretron.Model.LitePosition value) {
      validate(fields()[19], value);
      this.locationBuilder = null;
      this.location = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[19];
    }

    /**
     * Gets the Builder instance for the 'location' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.LitePosition.Builder getLocationBuilder() {
      if (locationBuilder == null) {
        if (hasLocation()) {
          setLocationBuilder(com.fretron.Model.LitePosition.newBuilder(location));
        } else {
          setLocationBuilder(com.fretron.Model.LitePosition.newBuilder());
        }
      }
      return locationBuilder;
    }

    /**
     * Sets the Builder instance for the 'location' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.DeviceStatus.Builder setLocationBuilder(com.fretron.Model.LitePosition.Builder value) {
      clearLocation();
      locationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'location' field has an active Builder instance
     * @return True if the 'location' field has an active Builder instance
     */
    public boolean hasLocationBuilder() {
      return locationBuilder != null;
    }

    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public com.fretron.Model.DeviceStatus.Builder clearLocation() {
      location = null;
      locationBuilder = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    public DeviceStatus build() {
      try {
        DeviceStatus record = new DeviceStatus();
        record.deviceId = fieldSetFlags()[0] ? this.deviceId : (java.lang.String) defaultValue(fields()[0]);
        record.protocol = fieldSetFlags()[1] ? this.protocol : (java.lang.String) defaultValue(fields()[1]);
        if (attributesBuilder != null) {
          record.attributes = this.attributesBuilder.build();
        } else {
          record.attributes = fieldSetFlags()[2] ? this.attributes : (com.fretron.Model.Attributes) defaultValue(fields()[2]);
        }
        if (batteryLevelEventBuilder != null) {
          record.batteryLevelEvent = this.batteryLevelEventBuilder.build();
        } else {
          record.batteryLevelEvent = fieldSetFlags()[3] ? this.batteryLevelEvent : (com.fretron.Model.DeviceEvent) defaultValue(fields()[3]);
        }
        if (lowBatteryEventBuilder != null) {
          record.lowBatteryEvent = this.lowBatteryEventBuilder.build();
        } else {
          record.lowBatteryEvent = fieldSetFlags()[4] ? this.lowBatteryEvent : (com.fretron.Model.DeviceEvent) defaultValue(fields()[4]);
        }
        if (powerCutEventBuilder != null) {
          record.powerCutEvent = this.powerCutEventBuilder.build();
        } else {
          record.powerCutEvent = fieldSetFlags()[5] ? this.powerCutEvent : (com.fretron.Model.DeviceEvent) defaultValue(fields()[5]);
        }
        if (vibrationEventBuilder != null) {
          record.vibrationEvent = this.vibrationEventBuilder.build();
        } else {
          record.vibrationEvent = fieldSetFlags()[6] ? this.vibrationEvent : (com.fretron.Model.DeviceEvent) defaultValue(fields()[6]);
        }
        record.lastUpdateTime = fieldSetFlags()[7] ? this.lastUpdateTime : (java.lang.Long) defaultValue(fields()[7]);
        record.lastPositionDeviceTime = fieldSetFlags()[8] ? this.lastPositionDeviceTime : (java.lang.Long) defaultValue(fields()[8]);
        record.lastPositionServerTime = fieldSetFlags()[9] ? this.lastPositionServerTime : (java.lang.Long) defaultValue(fields()[9]);
        record.lastDisconnectionTime = fieldSetFlags()[10] ? this.lastDisconnectionTime : (java.lang.Long) defaultValue(fields()[10]);
        record.lastDisconnectionDuration = fieldSetFlags()[11] ? this.lastDisconnectionDuration : (java.lang.Long) defaultValue(fields()[11]);
        record.isConnected = fieldSetFlags()[12] ? this.isConnected : (java.lang.Boolean) defaultValue(fields()[12]);
        record.disconnectionReason = fieldSetFlags()[13] ? this.disconnectionReason : (java.lang.String) defaultValue(fields()[13]);
        record.vehicleId = fieldSetFlags()[14] ? this.vehicleId : (java.lang.String) defaultValue(fields()[14]);
        record.batteryStatus = fieldSetFlags()[15] ? this.batteryStatus : (java.lang.String) defaultValue(fields()[15]);
        record.lastGpsPacketDeviceTime = fieldSetFlags()[16] ? this.lastGpsPacketDeviceTime : (java.lang.Long) defaultValue(fields()[16]);
        record.lastGpsPacketServerTime = fieldSetFlags()[17] ? this.lastGpsPacketServerTime : (java.lang.Long) defaultValue(fields()[17]);
        record.isIgnitionOn = fieldSetFlags()[18] ? this.isIgnitionOn : (java.lang.Boolean) defaultValue(fields()[18]);
        if (locationBuilder != null) {
          record.location = this.locationBuilder.build();
        } else {
          record.location = fieldSetFlags()[19] ? this.location : (com.fretron.Model.LitePosition) defaultValue(fields()[19]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

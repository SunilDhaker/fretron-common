/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class BillingCycle extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7848388745187394377L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BillingCycle\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"weekDays\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}],\"default\":null},{\"name\":\"dayHours\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}],\"default\":null},{\"name\":\"timesOfDay\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"long\"}],\"default\":null},{\"name\":\"monthDays\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}],\"default\":null},{\"name\":\"billingRule\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billEligibilityRule\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billQuantityRule\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"graceDays\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"billSplitRule\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billClubRule\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String type;
  @Deprecated public java.util.List<java.lang.Integer> weekDays;
  @Deprecated public java.util.List<java.lang.Integer> dayHours;
  @Deprecated public java.util.List<java.lang.Long> timesOfDay;
  @Deprecated public java.util.List<java.lang.Integer> monthDays;
  @Deprecated public java.lang.String billingRule;
  @Deprecated public java.lang.String billEligibilityRule;
  @Deprecated public java.lang.String billQuantityRule;
  @Deprecated public java.lang.Integer graceDays;
  @Deprecated public java.lang.String billSplitRule;
  @Deprecated public java.lang.String billClubRule;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BillingCycle() {}

  /**
   * All-args constructor.
   * @param type The new value for type
   * @param weekDays The new value for weekDays
   * @param dayHours The new value for dayHours
   * @param timesOfDay The new value for timesOfDay
   * @param monthDays The new value for monthDays
   * @param billingRule The new value for billingRule
   * @param billEligibilityRule The new value for billEligibilityRule
   * @param billQuantityRule The new value for billQuantityRule
   * @param graceDays The new value for graceDays
   * @param billSplitRule The new value for billSplitRule
   * @param billClubRule The new value for billClubRule
   */
  public BillingCycle(java.lang.String type, java.util.List<java.lang.Integer> weekDays, java.util.List<java.lang.Integer> dayHours, java.util.List<java.lang.Long> timesOfDay, java.util.List<java.lang.Integer> monthDays, java.lang.String billingRule, java.lang.String billEligibilityRule, java.lang.String billQuantityRule, java.lang.Integer graceDays, java.lang.String billSplitRule, java.lang.String billClubRule) {
    this.type = type;
    this.weekDays = weekDays;
    this.dayHours = dayHours;
    this.timesOfDay = timesOfDay;
    this.monthDays = monthDays;
    this.billingRule = billingRule;
    this.billEligibilityRule = billEligibilityRule;
    this.billQuantityRule = billQuantityRule;
    this.graceDays = graceDays;
    this.billSplitRule = billSplitRule;
    this.billClubRule = billClubRule;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return weekDays;
    case 2: return dayHours;
    case 3: return timesOfDay;
    case 4: return monthDays;
    case 5: return billingRule;
    case 6: return billEligibilityRule;
    case 7: return billQuantityRule;
    case 8: return graceDays;
    case 9: return billSplitRule;
    case 10: return billClubRule;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (java.lang.String)value$; break;
    case 1: weekDays = (java.util.List<java.lang.Integer>)value$; break;
    case 2: dayHours = (java.util.List<java.lang.Integer>)value$; break;
    case 3: timesOfDay = (java.util.List<java.lang.Long>)value$; break;
    case 4: monthDays = (java.util.List<java.lang.Integer>)value$; break;
    case 5: billingRule = (java.lang.String)value$; break;
    case 6: billEligibilityRule = (java.lang.String)value$; break;
    case 7: billQuantityRule = (java.lang.String)value$; break;
    case 8: graceDays = (java.lang.Integer)value$; break;
    case 9: billSplitRule = (java.lang.String)value$; break;
    case 10: billClubRule = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'weekDays' field.
   * @return The value of the 'weekDays' field.
   */
  public java.util.List<java.lang.Integer> getWeekDays() {
    return weekDays;
  }

  /**
   * Sets the value of the 'weekDays' field.
   * @param value the value to set.
   */
  public void setWeekDays(java.util.List<java.lang.Integer> value) {
    this.weekDays = value;
  }

  /**
   * Gets the value of the 'dayHours' field.
   * @return The value of the 'dayHours' field.
   */
  public java.util.List<java.lang.Integer> getDayHours() {
    return dayHours;
  }

  /**
   * Sets the value of the 'dayHours' field.
   * @param value the value to set.
   */
  public void setDayHours(java.util.List<java.lang.Integer> value) {
    this.dayHours = value;
  }

  /**
   * Gets the value of the 'timesOfDay' field.
   * @return The value of the 'timesOfDay' field.
   */
  public java.util.List<java.lang.Long> getTimesOfDay() {
    return timesOfDay;
  }

  /**
   * Sets the value of the 'timesOfDay' field.
   * @param value the value to set.
   */
  public void setTimesOfDay(java.util.List<java.lang.Long> value) {
    this.timesOfDay = value;
  }

  /**
   * Gets the value of the 'monthDays' field.
   * @return The value of the 'monthDays' field.
   */
  public java.util.List<java.lang.Integer> getMonthDays() {
    return monthDays;
  }

  /**
   * Sets the value of the 'monthDays' field.
   * @param value the value to set.
   */
  public void setMonthDays(java.util.List<java.lang.Integer> value) {
    this.monthDays = value;
  }

  /**
   * Gets the value of the 'billingRule' field.
   * @return The value of the 'billingRule' field.
   */
  public java.lang.String getBillingRule() {
    return billingRule;
  }

  /**
   * Sets the value of the 'billingRule' field.
   * @param value the value to set.
   */
  public void setBillingRule(java.lang.String value) {
    this.billingRule = value;
  }

  /**
   * Gets the value of the 'billEligibilityRule' field.
   * @return The value of the 'billEligibilityRule' field.
   */
  public java.lang.String getBillEligibilityRule() {
    return billEligibilityRule;
  }

  /**
   * Sets the value of the 'billEligibilityRule' field.
   * @param value the value to set.
   */
  public void setBillEligibilityRule(java.lang.String value) {
    this.billEligibilityRule = value;
  }

  /**
   * Gets the value of the 'billQuantityRule' field.
   * @return The value of the 'billQuantityRule' field.
   */
  public java.lang.String getBillQuantityRule() {
    return billQuantityRule;
  }

  /**
   * Sets the value of the 'billQuantityRule' field.
   * @param value the value to set.
   */
  public void setBillQuantityRule(java.lang.String value) {
    this.billQuantityRule = value;
  }

  /**
   * Gets the value of the 'graceDays' field.
   * @return The value of the 'graceDays' field.
   */
  public java.lang.Integer getGraceDays() {
    return graceDays;
  }

  /**
   * Sets the value of the 'graceDays' field.
   * @param value the value to set.
   */
  public void setGraceDays(java.lang.Integer value) {
    this.graceDays = value;
  }

  /**
   * Gets the value of the 'billSplitRule' field.
   * @return The value of the 'billSplitRule' field.
   */
  public java.lang.String getBillSplitRule() {
    return billSplitRule;
  }

  /**
   * Sets the value of the 'billSplitRule' field.
   * @param value the value to set.
   */
  public void setBillSplitRule(java.lang.String value) {
    this.billSplitRule = value;
  }

  /**
   * Gets the value of the 'billClubRule' field.
   * @return The value of the 'billClubRule' field.
   */
  public java.lang.String getBillClubRule() {
    return billClubRule;
  }

  /**
   * Sets the value of the 'billClubRule' field.
   * @param value the value to set.
   */
  public void setBillClubRule(java.lang.String value) {
    this.billClubRule = value;
  }

  /**
   * Creates a new BillingCycle RecordBuilder.
   * @return A new BillingCycle RecordBuilder
   */
  public static com.fretron.Model.BillingCycle.Builder newBuilder() {
    return new com.fretron.Model.BillingCycle.Builder();
  }

  /**
   * Creates a new BillingCycle RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BillingCycle RecordBuilder
   */
  public static com.fretron.Model.BillingCycle.Builder newBuilder(com.fretron.Model.BillingCycle.Builder other) {
    return new com.fretron.Model.BillingCycle.Builder(other);
  }

  /**
   * Creates a new BillingCycle RecordBuilder by copying an existing BillingCycle instance.
   * @param other The existing instance to copy.
   * @return A new BillingCycle RecordBuilder
   */
  public static com.fretron.Model.BillingCycle.Builder newBuilder(com.fretron.Model.BillingCycle other) {
    return new com.fretron.Model.BillingCycle.Builder(other);
  }

  /**
   * RecordBuilder for BillingCycle instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BillingCycle>
    implements org.apache.avro.data.RecordBuilder<BillingCycle> {

    private java.lang.String type;
    private java.util.List<java.lang.Integer> weekDays;
    private java.util.List<java.lang.Integer> dayHours;
    private java.util.List<java.lang.Long> timesOfDay;
    private java.util.List<java.lang.Integer> monthDays;
    private java.lang.String billingRule;
    private java.lang.String billEligibilityRule;
    private java.lang.String billQuantityRule;
    private java.lang.Integer graceDays;
    private java.lang.String billSplitRule;
    private java.lang.String billClubRule;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.BillingCycle.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.weekDays)) {
        this.weekDays = data().deepCopy(fields()[1].schema(), other.weekDays);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dayHours)) {
        this.dayHours = data().deepCopy(fields()[2].schema(), other.dayHours);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.timesOfDay)) {
        this.timesOfDay = data().deepCopy(fields()[3].schema(), other.timesOfDay);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.monthDays)) {
        this.monthDays = data().deepCopy(fields()[4].schema(), other.monthDays);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.billingRule)) {
        this.billingRule = data().deepCopy(fields()[5].schema(), other.billingRule);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.billEligibilityRule)) {
        this.billEligibilityRule = data().deepCopy(fields()[6].schema(), other.billEligibilityRule);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.billQuantityRule)) {
        this.billQuantityRule = data().deepCopy(fields()[7].schema(), other.billQuantityRule);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.graceDays)) {
        this.graceDays = data().deepCopy(fields()[8].schema(), other.graceDays);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.billSplitRule)) {
        this.billSplitRule = data().deepCopy(fields()[9].schema(), other.billSplitRule);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.billClubRule)) {
        this.billClubRule = data().deepCopy(fields()[10].schema(), other.billClubRule);
        fieldSetFlags()[10] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing BillingCycle instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.BillingCycle other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.weekDays)) {
        this.weekDays = data().deepCopy(fields()[1].schema(), other.weekDays);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dayHours)) {
        this.dayHours = data().deepCopy(fields()[2].schema(), other.dayHours);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.timesOfDay)) {
        this.timesOfDay = data().deepCopy(fields()[3].schema(), other.timesOfDay);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.monthDays)) {
        this.monthDays = data().deepCopy(fields()[4].schema(), other.monthDays);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.billingRule)) {
        this.billingRule = data().deepCopy(fields()[5].schema(), other.billingRule);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.billEligibilityRule)) {
        this.billEligibilityRule = data().deepCopy(fields()[6].schema(), other.billEligibilityRule);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.billQuantityRule)) {
        this.billQuantityRule = data().deepCopy(fields()[7].schema(), other.billQuantityRule);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.graceDays)) {
        this.graceDays = data().deepCopy(fields()[8].schema(), other.graceDays);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.billSplitRule)) {
        this.billSplitRule = data().deepCopy(fields()[9].schema(), other.billSplitRule);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.billClubRule)) {
        this.billClubRule = data().deepCopy(fields()[10].schema(), other.billClubRule);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder setType(java.lang.String value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'weekDays' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getWeekDays() {
      return weekDays;
    }

    /**
      * Sets the value of the 'weekDays' field.
      * @param value The value of 'weekDays'.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder setWeekDays(java.util.List<java.lang.Integer> value) {
      validate(fields()[1], value);
      this.weekDays = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'weekDays' field has been set.
      * @return True if the 'weekDays' field has been set, false otherwise.
      */
    public boolean hasWeekDays() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'weekDays' field.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder clearWeekDays() {
      weekDays = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'dayHours' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getDayHours() {
      return dayHours;
    }

    /**
      * Sets the value of the 'dayHours' field.
      * @param value The value of 'dayHours'.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder setDayHours(java.util.List<java.lang.Integer> value) {
      validate(fields()[2], value);
      this.dayHours = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'dayHours' field has been set.
      * @return True if the 'dayHours' field has been set, false otherwise.
      */
    public boolean hasDayHours() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'dayHours' field.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder clearDayHours() {
      dayHours = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'timesOfDay' field.
      * @return The value.
      */
    public java.util.List<java.lang.Long> getTimesOfDay() {
      return timesOfDay;
    }

    /**
      * Sets the value of the 'timesOfDay' field.
      * @param value The value of 'timesOfDay'.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder setTimesOfDay(java.util.List<java.lang.Long> value) {
      validate(fields()[3], value);
      this.timesOfDay = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'timesOfDay' field has been set.
      * @return True if the 'timesOfDay' field has been set, false otherwise.
      */
    public boolean hasTimesOfDay() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'timesOfDay' field.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder clearTimesOfDay() {
      timesOfDay = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'monthDays' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getMonthDays() {
      return monthDays;
    }

    /**
      * Sets the value of the 'monthDays' field.
      * @param value The value of 'monthDays'.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder setMonthDays(java.util.List<java.lang.Integer> value) {
      validate(fields()[4], value);
      this.monthDays = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'monthDays' field has been set.
      * @return True if the 'monthDays' field has been set, false otherwise.
      */
    public boolean hasMonthDays() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'monthDays' field.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder clearMonthDays() {
      monthDays = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'billingRule' field.
      * @return The value.
      */
    public java.lang.String getBillingRule() {
      return billingRule;
    }

    /**
      * Sets the value of the 'billingRule' field.
      * @param value The value of 'billingRule'.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder setBillingRule(java.lang.String value) {
      validate(fields()[5], value);
      this.billingRule = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'billingRule' field has been set.
      * @return True if the 'billingRule' field has been set, false otherwise.
      */
    public boolean hasBillingRule() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'billingRule' field.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder clearBillingRule() {
      billingRule = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'billEligibilityRule' field.
      * @return The value.
      */
    public java.lang.String getBillEligibilityRule() {
      return billEligibilityRule;
    }

    /**
      * Sets the value of the 'billEligibilityRule' field.
      * @param value The value of 'billEligibilityRule'.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder setBillEligibilityRule(java.lang.String value) {
      validate(fields()[6], value);
      this.billEligibilityRule = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'billEligibilityRule' field has been set.
      * @return True if the 'billEligibilityRule' field has been set, false otherwise.
      */
    public boolean hasBillEligibilityRule() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'billEligibilityRule' field.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder clearBillEligibilityRule() {
      billEligibilityRule = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'billQuantityRule' field.
      * @return The value.
      */
    public java.lang.String getBillQuantityRule() {
      return billQuantityRule;
    }

    /**
      * Sets the value of the 'billQuantityRule' field.
      * @param value The value of 'billQuantityRule'.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder setBillQuantityRule(java.lang.String value) {
      validate(fields()[7], value);
      this.billQuantityRule = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'billQuantityRule' field has been set.
      * @return True if the 'billQuantityRule' field has been set, false otherwise.
      */
    public boolean hasBillQuantityRule() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'billQuantityRule' field.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder clearBillQuantityRule() {
      billQuantityRule = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'graceDays' field.
      * @return The value.
      */
    public java.lang.Integer getGraceDays() {
      return graceDays;
    }

    /**
      * Sets the value of the 'graceDays' field.
      * @param value The value of 'graceDays'.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder setGraceDays(java.lang.Integer value) {
      validate(fields()[8], value);
      this.graceDays = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'graceDays' field has been set.
      * @return True if the 'graceDays' field has been set, false otherwise.
      */
    public boolean hasGraceDays() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'graceDays' field.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder clearGraceDays() {
      graceDays = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'billSplitRule' field.
      * @return The value.
      */
    public java.lang.String getBillSplitRule() {
      return billSplitRule;
    }

    /**
      * Sets the value of the 'billSplitRule' field.
      * @param value The value of 'billSplitRule'.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder setBillSplitRule(java.lang.String value) {
      validate(fields()[9], value);
      this.billSplitRule = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'billSplitRule' field has been set.
      * @return True if the 'billSplitRule' field has been set, false otherwise.
      */
    public boolean hasBillSplitRule() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'billSplitRule' field.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder clearBillSplitRule() {
      billSplitRule = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'billClubRule' field.
      * @return The value.
      */
    public java.lang.String getBillClubRule() {
      return billClubRule;
    }

    /**
      * Sets the value of the 'billClubRule' field.
      * @param value The value of 'billClubRule'.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder setBillClubRule(java.lang.String value) {
      validate(fields()[10], value);
      this.billClubRule = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'billClubRule' field has been set.
      * @return True if the 'billClubRule' field has been set, false otherwise.
      */
    public boolean hasBillClubRule() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'billClubRule' field.
      * @return This builder.
      */
    public com.fretron.Model.BillingCycle.Builder clearBillClubRule() {
      billClubRule = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    public BillingCycle build() {
      try {
        BillingCycle record = new BillingCycle();
        record.type = fieldSetFlags()[0] ? this.type : (java.lang.String) defaultValue(fields()[0]);
        record.weekDays = fieldSetFlags()[1] ? this.weekDays : (java.util.List<java.lang.Integer>) defaultValue(fields()[1]);
        record.dayHours = fieldSetFlags()[2] ? this.dayHours : (java.util.List<java.lang.Integer>) defaultValue(fields()[2]);
        record.timesOfDay = fieldSetFlags()[3] ? this.timesOfDay : (java.util.List<java.lang.Long>) defaultValue(fields()[3]);
        record.monthDays = fieldSetFlags()[4] ? this.monthDays : (java.util.List<java.lang.Integer>) defaultValue(fields()[4]);
        record.billingRule = fieldSetFlags()[5] ? this.billingRule : (java.lang.String) defaultValue(fields()[5]);
        record.billEligibilityRule = fieldSetFlags()[6] ? this.billEligibilityRule : (java.lang.String) defaultValue(fields()[6]);
        record.billQuantityRule = fieldSetFlags()[7] ? this.billQuantityRule : (java.lang.String) defaultValue(fields()[7]);
        record.graceDays = fieldSetFlags()[8] ? this.graceDays : (java.lang.Integer) defaultValue(fields()[8]);
        record.billSplitRule = fieldSetFlags()[9] ? this.billSplitRule : (java.lang.String) defaultValue(fields()[9]);
        record.billClubRule = fieldSetFlags()[10] ? this.billClubRule : (java.lang.String) defaultValue(fields()[10]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

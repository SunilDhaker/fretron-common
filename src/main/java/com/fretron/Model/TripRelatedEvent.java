/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TripRelatedEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2509694403608332860L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TripRelatedEvent\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehiclePayload\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vehicle\",\"fields\":[{\"name\":\"customerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleModel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleMake\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vtsDeviceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleRegistrationNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"associatedWith\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isDeleted\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"updateTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"groups\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sharedWith\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"driverId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"tripPayload\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Trip\",\"fields\":[{\"name\":\"distance\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"quantityOfMaterial\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"unitOfQuantity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"driverName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"driverMobNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"remarks\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"origin\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TripLocation\",\"fields\":[{\"name\":\"freightLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"FreightLocation\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"geofence\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geofence\",\"fields\":[{\"name\":\"center\",\"type\":{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}},{\"name\":\"boundry\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Location\"}],\"default\":null},{\"name\":\"circle\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Circle\",\"fields\":[{\"name\":\"center\",\"type\":\"Location\"},{\"name\":\"radius\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"GeofenceType\",\"symbols\":[\"Proximity\",\"Polygon\"]}],\"default\":null}]}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"favouriteOf\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"FreightLocType\",\"symbols\":[\"Private\",\"Public\"]}],\"default\":null}]}],\"default\":null},{\"name\":\"fromTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"tillTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"firstGpsLogId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastGpsLogId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ignoredVehicleGpsLogs\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updatedAt\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"}]}}],\"default\":null},{\"name\":\"destination\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TripLocation\"}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tripId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"actualStartTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"actualEndTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"plannedStartTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"plannedEndTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"lane\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Lane\",\"fields\":[{\"name\":\"sources\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"FreightLocation\"}],\"default\":null},{\"name\":\"destination\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"FreightLocation\"}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"baseSource\",\"type\":[\"null\",\"FreightLocation\"],\"default\":null},{\"name\":\"baseDestination\",\"type\":[\"null\",\"FreightLocation\"],\"default\":null},{\"name\":\"baseMaterial\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"baseRate\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"sourceOffSet\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"destinationOffSet\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"materialOffSet\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"baseTransitDays\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null},{\"name\":\"tripState\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"TripState\",\"symbols\":[\"Created\",\"Started\",\"Completed\"]}],\"default\":null},{\"name\":\"deviceImei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"shipmentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"trackingType\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"TrackingType\",\"symbols\":[\"Tracker\",\"Trip\",\"Manual\"]}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"expectedDestinations\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"FreightLocation\"}],\"default\":null},{\"name\":\"reprocessTill\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"sharedWith\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"liveliness\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isOffTrack\",\"type\":\"boolean\",\"default\":false},{\"name\":\"offTrackSince\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"expectedSystemResolution\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"vehicleGpsStatePayload\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"VehicleGpsState\",\"fields\":[{\"name\":\"isManuallyAdded\",\"type\":\"boolean\",\"default\":false},{\"name\":\"isIgnore\",\"type\":\"boolean\",\"default\":false},{\"name\":\"startTime\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"endTime\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"startLocation\",\"type\":{\"type\":\"record\",\"name\":\"LitePosition\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"},{\"","name\":\"speed\",\"type\":\"double\"},{\"name\":\"course\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"decoder\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"imei\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lngLat\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null}]}},{\"name\":\"endLocation\",\"type\":\"LitePosition\"},{\"name\":\"sigmasq\",\"type\":\"double\"},{\"name\":\"mean\",\"type\":\"LitePosition\"},{\"name\":\"totalDistance\",\"type\":\"double\"},{\"name\":\"totalTime\",\"type\":\"long\"},{\"name\":\"averageOfSpeed\",\"type\":\"double\"},{\"name\":\"averageSpeeds\",\"type\":\"double\"},{\"name\":\"numberOfRecord\",\"type\":\"int\"},{\"name\":\"lateArrivedRecordsCount\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"imei\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"GPSState\",\"symbols\":[\"Stopped\",\"Moving\",\"Overspeeding\",\"Disconnected\",\"Unknown\"]}]},{\"name\":\"encodedPolyline\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"timeAwarePolyline\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TimeAwarePolyline\",\"fields\":[{\"name\":\"polyline\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"compressedPolyline\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastPoint\",\"type\":{\"type\":\"record\",\"name\":\"PointAtTime\",\"fields\":[{\"name\":\"timestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"latitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"],\"default\":null}]}},{\"name\":\"isAssumed\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"polylineSegments\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TimeAwarePolyline\"}],\"default\":null},{\"name\":\"eventType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"userGeneratedCommandPayload\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"UserTripCommands\",\"fields\":[{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tripId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"endTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"deviceImei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"locationInfo\",\"type\":[\"null\",\"LitePosition\"],\"default\":null},{\"name\":\"vehicleStateInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"VehicleTripState\",\"fields\":[{\"name\":\"deviceImei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"VehicleState\",\"symbols\":[\"WaitingForLoad\",\"EnrouteForPickUp\",\"AtPickUpPoint\",\"EnrouteForDestination\",\"AtDestination\"]}],\"default\":null},{\"name\":\"tripId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"endTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"latitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"vgs\",\"type\":[\"null\",\"VehicleGpsState\"],\"default\":null}]}],\"default\":null},{\"name\":\"trackerTripPayload\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TrackerTrip\",\"fields\":[{\"name\":\"distance\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"quantityOfMaterial\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"unitOfQuantity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"driverName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"driverMobNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"remarks\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"origin\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TripLocation\"}],\"default\":null},{\"name\":\"destination\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TripLocation\"}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tripId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"actualStartTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"actualEndTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"plannedStartTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"plannedEndTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"lane\",\"type\":[\"null\",\"Lane\"],\"default\":null},{\"name\":\"tripState\",\"type\":[\"null\",\"TripState\"],\"default\":null},{\"name\":\"deviceImei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"shipmentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"trackingType\",\"type\":[\"null\",\"TrackingType\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String type;
  @Deprecated public com.fretron.Model.Vehicle vehiclePayload;
  @Deprecated public com.fretron.Model.Trip tripPayload;
  @Deprecated public com.fretron.Model.VehicleGpsState vehicleGpsStatePayload;
  @Deprecated public com.fretron.Model.UserTripCommands userGeneratedCommandPayload;
  @Deprecated public com.fretron.Model.TrackerTrip trackerTripPayload;
  @Deprecated public com.fretron.Model.TrackingType trackingType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TripRelatedEvent() {}

  /**
   * All-args constructor.
   * @param type The new value for type
   * @param vehiclePayload The new value for vehiclePayload
   * @param tripPayload The new value for tripPayload
   * @param vehicleGpsStatePayload The new value for vehicleGpsStatePayload
   * @param userGeneratedCommandPayload The new value for userGeneratedCommandPayload
   * @param trackerTripPayload The new value for trackerTripPayload
   * @param trackingType The new value for trackingType
   */
  public TripRelatedEvent(java.lang.String type, com.fretron.Model.Vehicle vehiclePayload, com.fretron.Model.Trip tripPayload, com.fretron.Model.VehicleGpsState vehicleGpsStatePayload, com.fretron.Model.UserTripCommands userGeneratedCommandPayload, com.fretron.Model.TrackerTrip trackerTripPayload, com.fretron.Model.TrackingType trackingType) {
    this.type = type;
    this.vehiclePayload = vehiclePayload;
    this.tripPayload = tripPayload;
    this.vehicleGpsStatePayload = vehicleGpsStatePayload;
    this.userGeneratedCommandPayload = userGeneratedCommandPayload;
    this.trackerTripPayload = trackerTripPayload;
    this.trackingType = trackingType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return vehiclePayload;
    case 2: return tripPayload;
    case 3: return vehicleGpsStatePayload;
    case 4: return userGeneratedCommandPayload;
    case 5: return trackerTripPayload;
    case 6: return trackingType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (java.lang.String)value$; break;
    case 1: vehiclePayload = (com.fretron.Model.Vehicle)value$; break;
    case 2: tripPayload = (com.fretron.Model.Trip)value$; break;
    case 3: vehicleGpsStatePayload = (com.fretron.Model.VehicleGpsState)value$; break;
    case 4: userGeneratedCommandPayload = (com.fretron.Model.UserTripCommands)value$; break;
    case 5: trackerTripPayload = (com.fretron.Model.TrackerTrip)value$; break;
    case 6: trackingType = (com.fretron.Model.TrackingType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'vehiclePayload' field.
   * @return The value of the 'vehiclePayload' field.
   */
  public com.fretron.Model.Vehicle getVehiclePayload() {
    return vehiclePayload;
  }

  /**
   * Sets the value of the 'vehiclePayload' field.
   * @param value the value to set.
   */
  public void setVehiclePayload(com.fretron.Model.Vehicle value) {
    this.vehiclePayload = value;
  }

  /**
   * Gets the value of the 'tripPayload' field.
   * @return The value of the 'tripPayload' field.
   */
  public com.fretron.Model.Trip getTripPayload() {
    return tripPayload;
  }

  /**
   * Sets the value of the 'tripPayload' field.
   * @param value the value to set.
   */
  public void setTripPayload(com.fretron.Model.Trip value) {
    this.tripPayload = value;
  }

  /**
   * Gets the value of the 'vehicleGpsStatePayload' field.
   * @return The value of the 'vehicleGpsStatePayload' field.
   */
  public com.fretron.Model.VehicleGpsState getVehicleGpsStatePayload() {
    return vehicleGpsStatePayload;
  }

  /**
   * Sets the value of the 'vehicleGpsStatePayload' field.
   * @param value the value to set.
   */
  public void setVehicleGpsStatePayload(com.fretron.Model.VehicleGpsState value) {
    this.vehicleGpsStatePayload = value;
  }

  /**
   * Gets the value of the 'userGeneratedCommandPayload' field.
   * @return The value of the 'userGeneratedCommandPayload' field.
   */
  public com.fretron.Model.UserTripCommands getUserGeneratedCommandPayload() {
    return userGeneratedCommandPayload;
  }

  /**
   * Sets the value of the 'userGeneratedCommandPayload' field.
   * @param value the value to set.
   */
  public void setUserGeneratedCommandPayload(com.fretron.Model.UserTripCommands value) {
    this.userGeneratedCommandPayload = value;
  }

  /**
   * Gets the value of the 'trackerTripPayload' field.
   * @return The value of the 'trackerTripPayload' field.
   */
  public com.fretron.Model.TrackerTrip getTrackerTripPayload() {
    return trackerTripPayload;
  }

  /**
   * Sets the value of the 'trackerTripPayload' field.
   * @param value the value to set.
   */
  public void setTrackerTripPayload(com.fretron.Model.TrackerTrip value) {
    this.trackerTripPayload = value;
  }

  /**
   * Gets the value of the 'trackingType' field.
   * @return The value of the 'trackingType' field.
   */
  public com.fretron.Model.TrackingType getTrackingType() {
    return trackingType;
  }

  /**
   * Sets the value of the 'trackingType' field.
   * @param value the value to set.
   */
  public void setTrackingType(com.fretron.Model.TrackingType value) {
    this.trackingType = value;
  }

  /**
   * Creates a new TripRelatedEvent RecordBuilder.
   * @return A new TripRelatedEvent RecordBuilder
   */
  public static com.fretron.Model.TripRelatedEvent.Builder newBuilder() {
    return new com.fretron.Model.TripRelatedEvent.Builder();
  }

  /**
   * Creates a new TripRelatedEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TripRelatedEvent RecordBuilder
   */
  public static com.fretron.Model.TripRelatedEvent.Builder newBuilder(com.fretron.Model.TripRelatedEvent.Builder other) {
    return new com.fretron.Model.TripRelatedEvent.Builder(other);
  }

  /**
   * Creates a new TripRelatedEvent RecordBuilder by copying an existing TripRelatedEvent instance.
   * @param other The existing instance to copy.
   * @return A new TripRelatedEvent RecordBuilder
   */
  public static com.fretron.Model.TripRelatedEvent.Builder newBuilder(com.fretron.Model.TripRelatedEvent other) {
    return new com.fretron.Model.TripRelatedEvent.Builder(other);
  }

  /**
   * RecordBuilder for TripRelatedEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TripRelatedEvent>
    implements org.apache.avro.data.RecordBuilder<TripRelatedEvent> {

    private java.lang.String type;
    private com.fretron.Model.Vehicle vehiclePayload;
    private com.fretron.Model.Vehicle.Builder vehiclePayloadBuilder;
    private com.fretron.Model.Trip tripPayload;
    private com.fretron.Model.Trip.Builder tripPayloadBuilder;
    private com.fretron.Model.VehicleGpsState vehicleGpsStatePayload;
    private com.fretron.Model.VehicleGpsState.Builder vehicleGpsStatePayloadBuilder;
    private com.fretron.Model.UserTripCommands userGeneratedCommandPayload;
    private com.fretron.Model.UserTripCommands.Builder userGeneratedCommandPayloadBuilder;
    private com.fretron.Model.TrackerTrip trackerTripPayload;
    private com.fretron.Model.TrackerTrip.Builder trackerTripPayloadBuilder;
    private com.fretron.Model.TrackingType trackingType;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.TripRelatedEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vehiclePayload)) {
        this.vehiclePayload = data().deepCopy(fields()[1].schema(), other.vehiclePayload);
        fieldSetFlags()[1] = true;
      }
      if (other.hasVehiclePayloadBuilder()) {
        this.vehiclePayloadBuilder = com.fretron.Model.Vehicle.newBuilder(other.getVehiclePayloadBuilder());
      }
      if (isValidValue(fields()[2], other.tripPayload)) {
        this.tripPayload = data().deepCopy(fields()[2].schema(), other.tripPayload);
        fieldSetFlags()[2] = true;
      }
      if (other.hasTripPayloadBuilder()) {
        this.tripPayloadBuilder = com.fretron.Model.Trip.newBuilder(other.getTripPayloadBuilder());
      }
      if (isValidValue(fields()[3], other.vehicleGpsStatePayload)) {
        this.vehicleGpsStatePayload = data().deepCopy(fields()[3].schema(), other.vehicleGpsStatePayload);
        fieldSetFlags()[3] = true;
      }
      if (other.hasVehicleGpsStatePayloadBuilder()) {
        this.vehicleGpsStatePayloadBuilder = com.fretron.Model.VehicleGpsState.newBuilder(other.getVehicleGpsStatePayloadBuilder());
      }
      if (isValidValue(fields()[4], other.userGeneratedCommandPayload)) {
        this.userGeneratedCommandPayload = data().deepCopy(fields()[4].schema(), other.userGeneratedCommandPayload);
        fieldSetFlags()[4] = true;
      }
      if (other.hasUserGeneratedCommandPayloadBuilder()) {
        this.userGeneratedCommandPayloadBuilder = com.fretron.Model.UserTripCommands.newBuilder(other.getUserGeneratedCommandPayloadBuilder());
      }
      if (isValidValue(fields()[5], other.trackerTripPayload)) {
        this.trackerTripPayload = data().deepCopy(fields()[5].schema(), other.trackerTripPayload);
        fieldSetFlags()[5] = true;
      }
      if (other.hasTrackerTripPayloadBuilder()) {
        this.trackerTripPayloadBuilder = com.fretron.Model.TrackerTrip.newBuilder(other.getTrackerTripPayloadBuilder());
      }
      if (isValidValue(fields()[6], other.trackingType)) {
        this.trackingType = data().deepCopy(fields()[6].schema(), other.trackingType);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TripRelatedEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.TripRelatedEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vehiclePayload)) {
        this.vehiclePayload = data().deepCopy(fields()[1].schema(), other.vehiclePayload);
        fieldSetFlags()[1] = true;
      }
      this.vehiclePayloadBuilder = null;
      if (isValidValue(fields()[2], other.tripPayload)) {
        this.tripPayload = data().deepCopy(fields()[2].schema(), other.tripPayload);
        fieldSetFlags()[2] = true;
      }
      this.tripPayloadBuilder = null;
      if (isValidValue(fields()[3], other.vehicleGpsStatePayload)) {
        this.vehicleGpsStatePayload = data().deepCopy(fields()[3].schema(), other.vehicleGpsStatePayload);
        fieldSetFlags()[3] = true;
      }
      this.vehicleGpsStatePayloadBuilder = null;
      if (isValidValue(fields()[4], other.userGeneratedCommandPayload)) {
        this.userGeneratedCommandPayload = data().deepCopy(fields()[4].schema(), other.userGeneratedCommandPayload);
        fieldSetFlags()[4] = true;
      }
      this.userGeneratedCommandPayloadBuilder = null;
      if (isValidValue(fields()[5], other.trackerTripPayload)) {
        this.trackerTripPayload = data().deepCopy(fields()[5].schema(), other.trackerTripPayload);
        fieldSetFlags()[5] = true;
      }
      this.trackerTripPayloadBuilder = null;
      if (isValidValue(fields()[6], other.trackingType)) {
        this.trackingType = data().deepCopy(fields()[6].schema(), other.trackingType);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder setType(java.lang.String value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehiclePayload' field.
      * @return The value.
      */
    public com.fretron.Model.Vehicle getVehiclePayload() {
      return vehiclePayload;
    }

    /**
      * Sets the value of the 'vehiclePayload' field.
      * @param value The value of 'vehiclePayload'.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder setVehiclePayload(com.fretron.Model.Vehicle value) {
      validate(fields()[1], value);
      this.vehiclePayloadBuilder = null;
      this.vehiclePayload = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'vehiclePayload' field has been set.
      * @return True if the 'vehiclePayload' field has been set, false otherwise.
      */
    public boolean hasVehiclePayload() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'vehiclePayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Vehicle.Builder getVehiclePayloadBuilder() {
      if (vehiclePayloadBuilder == null) {
        if (hasVehiclePayload()) {
          setVehiclePayloadBuilder(com.fretron.Model.Vehicle.newBuilder(vehiclePayload));
        } else {
          setVehiclePayloadBuilder(com.fretron.Model.Vehicle.newBuilder());
        }
      }
      return vehiclePayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'vehiclePayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.TripRelatedEvent.Builder setVehiclePayloadBuilder(com.fretron.Model.Vehicle.Builder value) {
      clearVehiclePayload();
      vehiclePayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'vehiclePayload' field has an active Builder instance
     * @return True if the 'vehiclePayload' field has an active Builder instance
     */
    public boolean hasVehiclePayloadBuilder() {
      return vehiclePayloadBuilder != null;
    }

    /**
      * Clears the value of the 'vehiclePayload' field.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder clearVehiclePayload() {
      vehiclePayload = null;
      vehiclePayloadBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'tripPayload' field.
      * @return The value.
      */
    public com.fretron.Model.Trip getTripPayload() {
      return tripPayload;
    }

    /**
      * Sets the value of the 'tripPayload' field.
      * @param value The value of 'tripPayload'.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder setTripPayload(com.fretron.Model.Trip value) {
      validate(fields()[2], value);
      this.tripPayloadBuilder = null;
      this.tripPayload = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'tripPayload' field has been set.
      * @return True if the 'tripPayload' field has been set, false otherwise.
      */
    public boolean hasTripPayload() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'tripPayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Trip.Builder getTripPayloadBuilder() {
      if (tripPayloadBuilder == null) {
        if (hasTripPayload()) {
          setTripPayloadBuilder(com.fretron.Model.Trip.newBuilder(tripPayload));
        } else {
          setTripPayloadBuilder(com.fretron.Model.Trip.newBuilder());
        }
      }
      return tripPayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'tripPayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.TripRelatedEvent.Builder setTripPayloadBuilder(com.fretron.Model.Trip.Builder value) {
      clearTripPayload();
      tripPayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'tripPayload' field has an active Builder instance
     * @return True if the 'tripPayload' field has an active Builder instance
     */
    public boolean hasTripPayloadBuilder() {
      return tripPayloadBuilder != null;
    }

    /**
      * Clears the value of the 'tripPayload' field.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder clearTripPayload() {
      tripPayload = null;
      tripPayloadBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleGpsStatePayload' field.
      * @return The value.
      */
    public com.fretron.Model.VehicleGpsState getVehicleGpsStatePayload() {
      return vehicleGpsStatePayload;
    }

    /**
      * Sets the value of the 'vehicleGpsStatePayload' field.
      * @param value The value of 'vehicleGpsStatePayload'.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder setVehicleGpsStatePayload(com.fretron.Model.VehicleGpsState value) {
      validate(fields()[3], value);
      this.vehicleGpsStatePayloadBuilder = null;
      this.vehicleGpsStatePayload = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleGpsStatePayload' field has been set.
      * @return True if the 'vehicleGpsStatePayload' field has been set, false otherwise.
      */
    public boolean hasVehicleGpsStatePayload() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'vehicleGpsStatePayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.VehicleGpsState.Builder getVehicleGpsStatePayloadBuilder() {
      if (vehicleGpsStatePayloadBuilder == null) {
        if (hasVehicleGpsStatePayload()) {
          setVehicleGpsStatePayloadBuilder(com.fretron.Model.VehicleGpsState.newBuilder(vehicleGpsStatePayload));
        } else {
          setVehicleGpsStatePayloadBuilder(com.fretron.Model.VehicleGpsState.newBuilder());
        }
      }
      return vehicleGpsStatePayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'vehicleGpsStatePayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.TripRelatedEvent.Builder setVehicleGpsStatePayloadBuilder(com.fretron.Model.VehicleGpsState.Builder value) {
      clearVehicleGpsStatePayload();
      vehicleGpsStatePayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'vehicleGpsStatePayload' field has an active Builder instance
     * @return True if the 'vehicleGpsStatePayload' field has an active Builder instance
     */
    public boolean hasVehicleGpsStatePayloadBuilder() {
      return vehicleGpsStatePayloadBuilder != null;
    }

    /**
      * Clears the value of the 'vehicleGpsStatePayload' field.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder clearVehicleGpsStatePayload() {
      vehicleGpsStatePayload = null;
      vehicleGpsStatePayloadBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'userGeneratedCommandPayload' field.
      * @return The value.
      */
    public com.fretron.Model.UserTripCommands getUserGeneratedCommandPayload() {
      return userGeneratedCommandPayload;
    }

    /**
      * Sets the value of the 'userGeneratedCommandPayload' field.
      * @param value The value of 'userGeneratedCommandPayload'.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder setUserGeneratedCommandPayload(com.fretron.Model.UserTripCommands value) {
      validate(fields()[4], value);
      this.userGeneratedCommandPayloadBuilder = null;
      this.userGeneratedCommandPayload = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'userGeneratedCommandPayload' field has been set.
      * @return True if the 'userGeneratedCommandPayload' field has been set, false otherwise.
      */
    public boolean hasUserGeneratedCommandPayload() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'userGeneratedCommandPayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.UserTripCommands.Builder getUserGeneratedCommandPayloadBuilder() {
      if (userGeneratedCommandPayloadBuilder == null) {
        if (hasUserGeneratedCommandPayload()) {
          setUserGeneratedCommandPayloadBuilder(com.fretron.Model.UserTripCommands.newBuilder(userGeneratedCommandPayload));
        } else {
          setUserGeneratedCommandPayloadBuilder(com.fretron.Model.UserTripCommands.newBuilder());
        }
      }
      return userGeneratedCommandPayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'userGeneratedCommandPayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.TripRelatedEvent.Builder setUserGeneratedCommandPayloadBuilder(com.fretron.Model.UserTripCommands.Builder value) {
      clearUserGeneratedCommandPayload();
      userGeneratedCommandPayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'userGeneratedCommandPayload' field has an active Builder instance
     * @return True if the 'userGeneratedCommandPayload' field has an active Builder instance
     */
    public boolean hasUserGeneratedCommandPayloadBuilder() {
      return userGeneratedCommandPayloadBuilder != null;
    }

    /**
      * Clears the value of the 'userGeneratedCommandPayload' field.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder clearUserGeneratedCommandPayload() {
      userGeneratedCommandPayload = null;
      userGeneratedCommandPayloadBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'trackerTripPayload' field.
      * @return The value.
      */
    public com.fretron.Model.TrackerTrip getTrackerTripPayload() {
      return trackerTripPayload;
    }

    /**
      * Sets the value of the 'trackerTripPayload' field.
      * @param value The value of 'trackerTripPayload'.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder setTrackerTripPayload(com.fretron.Model.TrackerTrip value) {
      validate(fields()[5], value);
      this.trackerTripPayloadBuilder = null;
      this.trackerTripPayload = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'trackerTripPayload' field has been set.
      * @return True if the 'trackerTripPayload' field has been set, false otherwise.
      */
    public boolean hasTrackerTripPayload() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'trackerTripPayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.TrackerTrip.Builder getTrackerTripPayloadBuilder() {
      if (trackerTripPayloadBuilder == null) {
        if (hasTrackerTripPayload()) {
          setTrackerTripPayloadBuilder(com.fretron.Model.TrackerTrip.newBuilder(trackerTripPayload));
        } else {
          setTrackerTripPayloadBuilder(com.fretron.Model.TrackerTrip.newBuilder());
        }
      }
      return trackerTripPayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'trackerTripPayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.TripRelatedEvent.Builder setTrackerTripPayloadBuilder(com.fretron.Model.TrackerTrip.Builder value) {
      clearTrackerTripPayload();
      trackerTripPayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'trackerTripPayload' field has an active Builder instance
     * @return True if the 'trackerTripPayload' field has an active Builder instance
     */
    public boolean hasTrackerTripPayloadBuilder() {
      return trackerTripPayloadBuilder != null;
    }

    /**
      * Clears the value of the 'trackerTripPayload' field.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder clearTrackerTripPayload() {
      trackerTripPayload = null;
      trackerTripPayloadBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'trackingType' field.
      * @return The value.
      */
    public com.fretron.Model.TrackingType getTrackingType() {
      return trackingType;
    }

    /**
      * Sets the value of the 'trackingType' field.
      * @param value The value of 'trackingType'.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder setTrackingType(com.fretron.Model.TrackingType value) {
      validate(fields()[6], value);
      this.trackingType = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'trackingType' field has been set.
      * @return True if the 'trackingType' field has been set, false otherwise.
      */
    public boolean hasTrackingType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'trackingType' field.
      * @return This builder.
      */
    public com.fretron.Model.TripRelatedEvent.Builder clearTrackingType() {
      trackingType = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public TripRelatedEvent build() {
      try {
        TripRelatedEvent record = new TripRelatedEvent();
        record.type = fieldSetFlags()[0] ? this.type : (java.lang.String) defaultValue(fields()[0]);
        if (vehiclePayloadBuilder != null) {
          record.vehiclePayload = this.vehiclePayloadBuilder.build();
        } else {
          record.vehiclePayload = fieldSetFlags()[1] ? this.vehiclePayload : (com.fretron.Model.Vehicle) defaultValue(fields()[1]);
        }
        if (tripPayloadBuilder != null) {
          record.tripPayload = this.tripPayloadBuilder.build();
        } else {
          record.tripPayload = fieldSetFlags()[2] ? this.tripPayload : (com.fretron.Model.Trip) defaultValue(fields()[2]);
        }
        if (vehicleGpsStatePayloadBuilder != null) {
          record.vehicleGpsStatePayload = this.vehicleGpsStatePayloadBuilder.build();
        } else {
          record.vehicleGpsStatePayload = fieldSetFlags()[3] ? this.vehicleGpsStatePayload : (com.fretron.Model.VehicleGpsState) defaultValue(fields()[3]);
        }
        if (userGeneratedCommandPayloadBuilder != null) {
          record.userGeneratedCommandPayload = this.userGeneratedCommandPayloadBuilder.build();
        } else {
          record.userGeneratedCommandPayload = fieldSetFlags()[4] ? this.userGeneratedCommandPayload : (com.fretron.Model.UserTripCommands) defaultValue(fields()[4]);
        }
        if (trackerTripPayloadBuilder != null) {
          record.trackerTripPayload = this.trackerTripPayloadBuilder.build();
        } else {
          record.trackerTripPayload = fieldSetFlags()[5] ? this.trackerTripPayload : (com.fretron.Model.TrackerTrip) defaultValue(fields()[5]);
        }
        record.trackingType = fieldSetFlags()[6] ? this.trackingType : (com.fretron.Model.TrackingType) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Queue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7277998007340872288L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Queue\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isGPSMandatory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"freightLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"FreightLocation\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"geofence\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geofence\",\"fields\":[{\"name\":\"center\",\"type\":{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}},{\"name\":\"boundry\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Location\"}],\"default\":null},{\"name\":\"circle\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Circle\",\"fields\":[{\"name\":\"center\",\"type\":\"Location\"},{\"name\":\"radius\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"GeofenceType\",\"symbols\":[\"Proximity\",\"Polygon\"]}],\"default\":null}]}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"favouriteOf\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"FreightLocType\",\"symbols\":[\"Private\",\"Public\"]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String isGPSMandatory;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.String description;
  @Deprecated public java.lang.String status;
  @Deprecated public com.fretron.Model.FreightLocation freightLocation;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Queue() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param name The new value for name
   * @param isGPSMandatory The new value for isGPSMandatory
   * @param orgId The new value for orgId
   * @param description The new value for description
   * @param status The new value for status
   * @param freightLocation The new value for freightLocation
   */
  public Queue(java.lang.String uuid, java.lang.String name, java.lang.String isGPSMandatory, java.lang.String orgId, java.lang.String description, java.lang.String status, com.fretron.Model.FreightLocation freightLocation) {
    this.uuid = uuid;
    this.name = name;
    this.isGPSMandatory = isGPSMandatory;
    this.orgId = orgId;
    this.description = description;
    this.status = status;
    this.freightLocation = freightLocation;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return name;
    case 2: return isGPSMandatory;
    case 3: return orgId;
    case 4: return description;
    case 5: return status;
    case 6: return freightLocation;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: name = (java.lang.String)value$; break;
    case 2: isGPSMandatory = (java.lang.String)value$; break;
    case 3: orgId = (java.lang.String)value$; break;
    case 4: description = (java.lang.String)value$; break;
    case 5: status = (java.lang.String)value$; break;
    case 6: freightLocation = (com.fretron.Model.FreightLocation)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'isGPSMandatory' field.
   * @return The value of the 'isGPSMandatory' field.
   */
  public java.lang.String getIsGPSMandatory() {
    return isGPSMandatory;
  }

  /**
   * Sets the value of the 'isGPSMandatory' field.
   * @param value the value to set.
   */
  public void setIsGPSMandatory(java.lang.String value) {
    this.isGPSMandatory = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'freightLocation' field.
   * @return The value of the 'freightLocation' field.
   */
  public com.fretron.Model.FreightLocation getFreightLocation() {
    return freightLocation;
  }

  /**
   * Sets the value of the 'freightLocation' field.
   * @param value the value to set.
   */
  public void setFreightLocation(com.fretron.Model.FreightLocation value) {
    this.freightLocation = value;
  }

  /**
   * Creates a new Queue RecordBuilder.
   * @return A new Queue RecordBuilder
   */
  public static com.fretron.Model.Queue.Builder newBuilder() {
    return new com.fretron.Model.Queue.Builder();
  }

  /**
   * Creates a new Queue RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Queue RecordBuilder
   */
  public static com.fretron.Model.Queue.Builder newBuilder(com.fretron.Model.Queue.Builder other) {
    return new com.fretron.Model.Queue.Builder(other);
  }

  /**
   * Creates a new Queue RecordBuilder by copying an existing Queue instance.
   * @param other The existing instance to copy.
   * @return A new Queue RecordBuilder
   */
  public static com.fretron.Model.Queue.Builder newBuilder(com.fretron.Model.Queue other) {
    return new com.fretron.Model.Queue.Builder(other);
  }

  /**
   * RecordBuilder for Queue instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Queue>
    implements org.apache.avro.data.RecordBuilder<Queue> {

    private java.lang.String uuid;
    private java.lang.String name;
    private java.lang.String isGPSMandatory;
    private java.lang.String orgId;
    private java.lang.String description;
    private java.lang.String status;
    private com.fretron.Model.FreightLocation freightLocation;
    private com.fretron.Model.FreightLocation.Builder freightLocationBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.Queue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.isGPSMandatory)) {
        this.isGPSMandatory = data().deepCopy(fields()[2].schema(), other.isGPSMandatory);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.orgId)) {
        this.orgId = data().deepCopy(fields()[3].schema(), other.orgId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.description)) {
        this.description = data().deepCopy(fields()[4].schema(), other.description);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.status)) {
        this.status = data().deepCopy(fields()[5].schema(), other.status);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.freightLocation)) {
        this.freightLocation = data().deepCopy(fields()[6].schema(), other.freightLocation);
        fieldSetFlags()[6] = true;
      }
      if (other.hasFreightLocationBuilder()) {
        this.freightLocationBuilder = com.fretron.Model.FreightLocation.newBuilder(other.getFreightLocationBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Queue instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.Queue other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.isGPSMandatory)) {
        this.isGPSMandatory = data().deepCopy(fields()[2].schema(), other.isGPSMandatory);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.orgId)) {
        this.orgId = data().deepCopy(fields()[3].schema(), other.orgId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.description)) {
        this.description = data().deepCopy(fields()[4].schema(), other.description);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.status)) {
        this.status = data().deepCopy(fields()[5].schema(), other.status);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.freightLocation)) {
        this.freightLocation = data().deepCopy(fields()[6].schema(), other.freightLocation);
        fieldSetFlags()[6] = true;
      }
      this.freightLocationBuilder = null;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'isGPSMandatory' field.
      * @return The value.
      */
    public java.lang.String getIsGPSMandatory() {
      return isGPSMandatory;
    }

    /**
      * Sets the value of the 'isGPSMandatory' field.
      * @param value The value of 'isGPSMandatory'.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder setIsGPSMandatory(java.lang.String value) {
      validate(fields()[2], value);
      this.isGPSMandatory = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'isGPSMandatory' field has been set.
      * @return True if the 'isGPSMandatory' field has been set, false otherwise.
      */
    public boolean hasIsGPSMandatory() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'isGPSMandatory' field.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder clearIsGPSMandatory() {
      isGPSMandatory = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder setOrgId(java.lang.String value) {
      validate(fields()[3], value);
      this.orgId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder setDescription(java.lang.String value) {
      validate(fields()[4], value);
      this.description = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder clearDescription() {
      description = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder setStatus(java.lang.String value) {
      validate(fields()[5], value);
      this.status = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder clearStatus() {
      status = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'freightLocation' field.
      * @return The value.
      */
    public com.fretron.Model.FreightLocation getFreightLocation() {
      return freightLocation;
    }

    /**
      * Sets the value of the 'freightLocation' field.
      * @param value The value of 'freightLocation'.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder setFreightLocation(com.fretron.Model.FreightLocation value) {
      validate(fields()[6], value);
      this.freightLocationBuilder = null;
      this.freightLocation = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'freightLocation' field has been set.
      * @return True if the 'freightLocation' field has been set, false otherwise.
      */
    public boolean hasFreightLocation() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'freightLocation' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.FreightLocation.Builder getFreightLocationBuilder() {
      if (freightLocationBuilder == null) {
        if (hasFreightLocation()) {
          setFreightLocationBuilder(com.fretron.Model.FreightLocation.newBuilder(freightLocation));
        } else {
          setFreightLocationBuilder(com.fretron.Model.FreightLocation.newBuilder());
        }
      }
      return freightLocationBuilder;
    }

    /**
     * Sets the Builder instance for the 'freightLocation' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Queue.Builder setFreightLocationBuilder(com.fretron.Model.FreightLocation.Builder value) {
      clearFreightLocation();
      freightLocationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'freightLocation' field has an active Builder instance
     * @return True if the 'freightLocation' field has an active Builder instance
     */
    public boolean hasFreightLocationBuilder() {
      return freightLocationBuilder != null;
    }

    /**
      * Clears the value of the 'freightLocation' field.
      * @return This builder.
      */
    public com.fretron.Model.Queue.Builder clearFreightLocation() {
      freightLocation = null;
      freightLocationBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public Queue build() {
      try {
        Queue record = new Queue();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.isGPSMandatory = fieldSetFlags()[2] ? this.isGPSMandatory : (java.lang.String) defaultValue(fields()[2]);
        record.orgId = fieldSetFlags()[3] ? this.orgId : (java.lang.String) defaultValue(fields()[3]);
        record.description = fieldSetFlags()[4] ? this.description : (java.lang.String) defaultValue(fields()[4]);
        record.status = fieldSetFlags()[5] ? this.status : (java.lang.String) defaultValue(fields()[5]);
        if (freightLocationBuilder != null) {
          record.freightLocation = this.freightLocationBuilder.build();
        } else {
          record.freightLocation = fieldSetFlags()[6] ? this.freightLocation : (com.fretron.Model.FreightLocation) defaultValue(fields()[6]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

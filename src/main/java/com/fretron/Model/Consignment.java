/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Consignment extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 474537663736533929L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Consignment\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"consigner\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BuisnessPartner\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"geoFence\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoJsonFence\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Properties\",\"fields\":[{\"name\":\"catagory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"level\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customeFields\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"geometry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geometry\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"coordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null}]}],\"default\":null},{\"name\":\"metadata\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MetaData\",\"fields\":[{\"name\":\"clazz\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"contacts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Contact\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"emails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"secondaryNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"consignee\",\"type\":[\"null\",\"BuisnessPartner\"],\"default\":null},{\"name\":\"salesOffice\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"OrgOffice\",\"fields\":[{\"name\":\"_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"geoLocation\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"contacts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Contact\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"billingType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billToParty\",\"type\":[\"null\",\"BuisnessPartner\"],\"default\":null},{\"name\":\"loadInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LoadInfo\",\"fields\":[{\"name\":\"measurmentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"unitOfMeasurment\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"plannedQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"loadedQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"deliveredQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"shortage\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"frieghtDeductableQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"claimQuantity\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"invoiceNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"consignmentNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"poNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"workOrderNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.fretron.Model.BuisnessPartner consigner;
  @Deprecated public com.fretron.Model.BuisnessPartner consignee;
  @Deprecated public com.fretron.Model.OrgOffice salesOffice;
  @Deprecated public java.lang.String billingType;
  @Deprecated public com.fretron.Model.BuisnessPartner billToParty;
  @Deprecated public com.fretron.Model.LoadInfo loadInfo;
  @Deprecated public java.lang.String invoiceNo;
  @Deprecated public java.lang.String consignmentNo;
  @Deprecated public java.lang.String poNumber;
  @Deprecated public java.lang.String workOrderNumber;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Consignment() {}

  /**
   * All-args constructor.
   * @param consigner The new value for consigner
   * @param consignee The new value for consignee
   * @param salesOffice The new value for salesOffice
   * @param billingType The new value for billingType
   * @param billToParty The new value for billToParty
   * @param loadInfo The new value for loadInfo
   * @param invoiceNo The new value for invoiceNo
   * @param consignmentNo The new value for consignmentNo
   * @param poNumber The new value for poNumber
   * @param workOrderNumber The new value for workOrderNumber
   */
  public Consignment(com.fretron.Model.BuisnessPartner consigner, com.fretron.Model.BuisnessPartner consignee, com.fretron.Model.OrgOffice salesOffice, java.lang.String billingType, com.fretron.Model.BuisnessPartner billToParty, com.fretron.Model.LoadInfo loadInfo, java.lang.String invoiceNo, java.lang.String consignmentNo, java.lang.String poNumber, java.lang.String workOrderNumber) {
    this.consigner = consigner;
    this.consignee = consignee;
    this.salesOffice = salesOffice;
    this.billingType = billingType;
    this.billToParty = billToParty;
    this.loadInfo = loadInfo;
    this.invoiceNo = invoiceNo;
    this.consignmentNo = consignmentNo;
    this.poNumber = poNumber;
    this.workOrderNumber = workOrderNumber;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return consigner;
    case 1: return consignee;
    case 2: return salesOffice;
    case 3: return billingType;
    case 4: return billToParty;
    case 5: return loadInfo;
    case 6: return invoiceNo;
    case 7: return consignmentNo;
    case 8: return poNumber;
    case 9: return workOrderNumber;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: consigner = (com.fretron.Model.BuisnessPartner)value$; break;
    case 1: consignee = (com.fretron.Model.BuisnessPartner)value$; break;
    case 2: salesOffice = (com.fretron.Model.OrgOffice)value$; break;
    case 3: billingType = (java.lang.String)value$; break;
    case 4: billToParty = (com.fretron.Model.BuisnessPartner)value$; break;
    case 5: loadInfo = (com.fretron.Model.LoadInfo)value$; break;
    case 6: invoiceNo = (java.lang.String)value$; break;
    case 7: consignmentNo = (java.lang.String)value$; break;
    case 8: poNumber = (java.lang.String)value$; break;
    case 9: workOrderNumber = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'consigner' field.
   * @return The value of the 'consigner' field.
   */
  public com.fretron.Model.BuisnessPartner getConsigner() {
    return consigner;
  }

  /**
   * Sets the value of the 'consigner' field.
   * @param value the value to set.
   */
  public void setConsigner(com.fretron.Model.BuisnessPartner value) {
    this.consigner = value;
  }

  /**
   * Gets the value of the 'consignee' field.
   * @return The value of the 'consignee' field.
   */
  public com.fretron.Model.BuisnessPartner getConsignee() {
    return consignee;
  }

  /**
   * Sets the value of the 'consignee' field.
   * @param value the value to set.
   */
  public void setConsignee(com.fretron.Model.BuisnessPartner value) {
    this.consignee = value;
  }

  /**
   * Gets the value of the 'salesOffice' field.
   * @return The value of the 'salesOffice' field.
   */
  public com.fretron.Model.OrgOffice getSalesOffice() {
    return salesOffice;
  }

  /**
   * Sets the value of the 'salesOffice' field.
   * @param value the value to set.
   */
  public void setSalesOffice(com.fretron.Model.OrgOffice value) {
    this.salesOffice = value;
  }

  /**
   * Gets the value of the 'billingType' field.
   * @return The value of the 'billingType' field.
   */
  public java.lang.String getBillingType() {
    return billingType;
  }

  /**
   * Sets the value of the 'billingType' field.
   * @param value the value to set.
   */
  public void setBillingType(java.lang.String value) {
    this.billingType = value;
  }

  /**
   * Gets the value of the 'billToParty' field.
   * @return The value of the 'billToParty' field.
   */
  public com.fretron.Model.BuisnessPartner getBillToParty() {
    return billToParty;
  }

  /**
   * Sets the value of the 'billToParty' field.
   * @param value the value to set.
   */
  public void setBillToParty(com.fretron.Model.BuisnessPartner value) {
    this.billToParty = value;
  }

  /**
   * Gets the value of the 'loadInfo' field.
   * @return The value of the 'loadInfo' field.
   */
  public com.fretron.Model.LoadInfo getLoadInfo() {
    return loadInfo;
  }

  /**
   * Sets the value of the 'loadInfo' field.
   * @param value the value to set.
   */
  public void setLoadInfo(com.fretron.Model.LoadInfo value) {
    this.loadInfo = value;
  }

  /**
   * Gets the value of the 'invoiceNo' field.
   * @return The value of the 'invoiceNo' field.
   */
  public java.lang.String getInvoiceNo() {
    return invoiceNo;
  }

  /**
   * Sets the value of the 'invoiceNo' field.
   * @param value the value to set.
   */
  public void setInvoiceNo(java.lang.String value) {
    this.invoiceNo = value;
  }

  /**
   * Gets the value of the 'consignmentNo' field.
   * @return The value of the 'consignmentNo' field.
   */
  public java.lang.String getConsignmentNo() {
    return consignmentNo;
  }

  /**
   * Sets the value of the 'consignmentNo' field.
   * @param value the value to set.
   */
  public void setConsignmentNo(java.lang.String value) {
    this.consignmentNo = value;
  }

  /**
   * Gets the value of the 'poNumber' field.
   * @return The value of the 'poNumber' field.
   */
  public java.lang.String getPoNumber() {
    return poNumber;
  }

  /**
   * Sets the value of the 'poNumber' field.
   * @param value the value to set.
   */
  public void setPoNumber(java.lang.String value) {
    this.poNumber = value;
  }

  /**
   * Gets the value of the 'workOrderNumber' field.
   * @return The value of the 'workOrderNumber' field.
   */
  public java.lang.String getWorkOrderNumber() {
    return workOrderNumber;
  }

  /**
   * Sets the value of the 'workOrderNumber' field.
   * @param value the value to set.
   */
  public void setWorkOrderNumber(java.lang.String value) {
    this.workOrderNumber = value;
  }

  /**
   * Creates a new Consignment RecordBuilder.
   * @return A new Consignment RecordBuilder
   */
  public static com.fretron.Model.Consignment.Builder newBuilder() {
    return new com.fretron.Model.Consignment.Builder();
  }

  /**
   * Creates a new Consignment RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Consignment RecordBuilder
   */
  public static com.fretron.Model.Consignment.Builder newBuilder(com.fretron.Model.Consignment.Builder other) {
    return new com.fretron.Model.Consignment.Builder(other);
  }

  /**
   * Creates a new Consignment RecordBuilder by copying an existing Consignment instance.
   * @param other The existing instance to copy.
   * @return A new Consignment RecordBuilder
   */
  public static com.fretron.Model.Consignment.Builder newBuilder(com.fretron.Model.Consignment other) {
    return new com.fretron.Model.Consignment.Builder(other);
  }

  /**
   * RecordBuilder for Consignment instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Consignment>
    implements org.apache.avro.data.RecordBuilder<Consignment> {

    private com.fretron.Model.BuisnessPartner consigner;
    private com.fretron.Model.BuisnessPartner.Builder consignerBuilder;
    private com.fretron.Model.BuisnessPartner consignee;
    private com.fretron.Model.BuisnessPartner.Builder consigneeBuilder;
    private com.fretron.Model.OrgOffice salesOffice;
    private com.fretron.Model.OrgOffice.Builder salesOfficeBuilder;
    private java.lang.String billingType;
    private com.fretron.Model.BuisnessPartner billToParty;
    private com.fretron.Model.BuisnessPartner.Builder billToPartyBuilder;
    private com.fretron.Model.LoadInfo loadInfo;
    private com.fretron.Model.LoadInfo.Builder loadInfoBuilder;
    private java.lang.String invoiceNo;
    private java.lang.String consignmentNo;
    private java.lang.String poNumber;
    private java.lang.String workOrderNumber;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.Consignment.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.consigner)) {
        this.consigner = data().deepCopy(fields()[0].schema(), other.consigner);
        fieldSetFlags()[0] = true;
      }
      if (other.hasConsignerBuilder()) {
        this.consignerBuilder = com.fretron.Model.BuisnessPartner.newBuilder(other.getConsignerBuilder());
      }
      if (isValidValue(fields()[1], other.consignee)) {
        this.consignee = data().deepCopy(fields()[1].schema(), other.consignee);
        fieldSetFlags()[1] = true;
      }
      if (other.hasConsigneeBuilder()) {
        this.consigneeBuilder = com.fretron.Model.BuisnessPartner.newBuilder(other.getConsigneeBuilder());
      }
      if (isValidValue(fields()[2], other.salesOffice)) {
        this.salesOffice = data().deepCopy(fields()[2].schema(), other.salesOffice);
        fieldSetFlags()[2] = true;
      }
      if (other.hasSalesOfficeBuilder()) {
        this.salesOfficeBuilder = com.fretron.Model.OrgOffice.newBuilder(other.getSalesOfficeBuilder());
      }
      if (isValidValue(fields()[3], other.billingType)) {
        this.billingType = data().deepCopy(fields()[3].schema(), other.billingType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.billToParty)) {
        this.billToParty = data().deepCopy(fields()[4].schema(), other.billToParty);
        fieldSetFlags()[4] = true;
      }
      if (other.hasBillToPartyBuilder()) {
        this.billToPartyBuilder = com.fretron.Model.BuisnessPartner.newBuilder(other.getBillToPartyBuilder());
      }
      if (isValidValue(fields()[5], other.loadInfo)) {
        this.loadInfo = data().deepCopy(fields()[5].schema(), other.loadInfo);
        fieldSetFlags()[5] = true;
      }
      if (other.hasLoadInfoBuilder()) {
        this.loadInfoBuilder = com.fretron.Model.LoadInfo.newBuilder(other.getLoadInfoBuilder());
      }
      if (isValidValue(fields()[6], other.invoiceNo)) {
        this.invoiceNo = data().deepCopy(fields()[6].schema(), other.invoiceNo);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.consignmentNo)) {
        this.consignmentNo = data().deepCopy(fields()[7].schema(), other.consignmentNo);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.poNumber)) {
        this.poNumber = data().deepCopy(fields()[8].schema(), other.poNumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.workOrderNumber)) {
        this.workOrderNumber = data().deepCopy(fields()[9].schema(), other.workOrderNumber);
        fieldSetFlags()[9] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Consignment instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.Consignment other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.consigner)) {
        this.consigner = data().deepCopy(fields()[0].schema(), other.consigner);
        fieldSetFlags()[0] = true;
      }
      this.consignerBuilder = null;
      if (isValidValue(fields()[1], other.consignee)) {
        this.consignee = data().deepCopy(fields()[1].schema(), other.consignee);
        fieldSetFlags()[1] = true;
      }
      this.consigneeBuilder = null;
      if (isValidValue(fields()[2], other.salesOffice)) {
        this.salesOffice = data().deepCopy(fields()[2].schema(), other.salesOffice);
        fieldSetFlags()[2] = true;
      }
      this.salesOfficeBuilder = null;
      if (isValidValue(fields()[3], other.billingType)) {
        this.billingType = data().deepCopy(fields()[3].schema(), other.billingType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.billToParty)) {
        this.billToParty = data().deepCopy(fields()[4].schema(), other.billToParty);
        fieldSetFlags()[4] = true;
      }
      this.billToPartyBuilder = null;
      if (isValidValue(fields()[5], other.loadInfo)) {
        this.loadInfo = data().deepCopy(fields()[5].schema(), other.loadInfo);
        fieldSetFlags()[5] = true;
      }
      this.loadInfoBuilder = null;
      if (isValidValue(fields()[6], other.invoiceNo)) {
        this.invoiceNo = data().deepCopy(fields()[6].schema(), other.invoiceNo);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.consignmentNo)) {
        this.consignmentNo = data().deepCopy(fields()[7].schema(), other.consignmentNo);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.poNumber)) {
        this.poNumber = data().deepCopy(fields()[8].schema(), other.poNumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.workOrderNumber)) {
        this.workOrderNumber = data().deepCopy(fields()[9].schema(), other.workOrderNumber);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'consigner' field.
      * @return The value.
      */
    public com.fretron.Model.BuisnessPartner getConsigner() {
      return consigner;
    }

    /**
      * Sets the value of the 'consigner' field.
      * @param value The value of 'consigner'.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder setConsigner(com.fretron.Model.BuisnessPartner value) {
      validate(fields()[0], value);
      this.consignerBuilder = null;
      this.consigner = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'consigner' field has been set.
      * @return True if the 'consigner' field has been set, false otherwise.
      */
    public boolean hasConsigner() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'consigner' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.BuisnessPartner.Builder getConsignerBuilder() {
      if (consignerBuilder == null) {
        if (hasConsigner()) {
          setConsignerBuilder(com.fretron.Model.BuisnessPartner.newBuilder(consigner));
        } else {
          setConsignerBuilder(com.fretron.Model.BuisnessPartner.newBuilder());
        }
      }
      return consignerBuilder;
    }

    /**
     * Sets the Builder instance for the 'consigner' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Consignment.Builder setConsignerBuilder(com.fretron.Model.BuisnessPartner.Builder value) {
      clearConsigner();
      consignerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'consigner' field has an active Builder instance
     * @return True if the 'consigner' field has an active Builder instance
     */
    public boolean hasConsignerBuilder() {
      return consignerBuilder != null;
    }

    /**
      * Clears the value of the 'consigner' field.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder clearConsigner() {
      consigner = null;
      consignerBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'consignee' field.
      * @return The value.
      */
    public com.fretron.Model.BuisnessPartner getConsignee() {
      return consignee;
    }

    /**
      * Sets the value of the 'consignee' field.
      * @param value The value of 'consignee'.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder setConsignee(com.fretron.Model.BuisnessPartner value) {
      validate(fields()[1], value);
      this.consigneeBuilder = null;
      this.consignee = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'consignee' field has been set.
      * @return True if the 'consignee' field has been set, false otherwise.
      */
    public boolean hasConsignee() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'consignee' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.BuisnessPartner.Builder getConsigneeBuilder() {
      if (consigneeBuilder == null) {
        if (hasConsignee()) {
          setConsigneeBuilder(com.fretron.Model.BuisnessPartner.newBuilder(consignee));
        } else {
          setConsigneeBuilder(com.fretron.Model.BuisnessPartner.newBuilder());
        }
      }
      return consigneeBuilder;
    }

    /**
     * Sets the Builder instance for the 'consignee' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Consignment.Builder setConsigneeBuilder(com.fretron.Model.BuisnessPartner.Builder value) {
      clearConsignee();
      consigneeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'consignee' field has an active Builder instance
     * @return True if the 'consignee' field has an active Builder instance
     */
    public boolean hasConsigneeBuilder() {
      return consigneeBuilder != null;
    }

    /**
      * Clears the value of the 'consignee' field.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder clearConsignee() {
      consignee = null;
      consigneeBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'salesOffice' field.
      * @return The value.
      */
    public com.fretron.Model.OrgOffice getSalesOffice() {
      return salesOffice;
    }

    /**
      * Sets the value of the 'salesOffice' field.
      * @param value The value of 'salesOffice'.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder setSalesOffice(com.fretron.Model.OrgOffice value) {
      validate(fields()[2], value);
      this.salesOfficeBuilder = null;
      this.salesOffice = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'salesOffice' field has been set.
      * @return True if the 'salesOffice' field has been set, false otherwise.
      */
    public boolean hasSalesOffice() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'salesOffice' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.OrgOffice.Builder getSalesOfficeBuilder() {
      if (salesOfficeBuilder == null) {
        if (hasSalesOffice()) {
          setSalesOfficeBuilder(com.fretron.Model.OrgOffice.newBuilder(salesOffice));
        } else {
          setSalesOfficeBuilder(com.fretron.Model.OrgOffice.newBuilder());
        }
      }
      return salesOfficeBuilder;
    }

    /**
     * Sets the Builder instance for the 'salesOffice' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Consignment.Builder setSalesOfficeBuilder(com.fretron.Model.OrgOffice.Builder value) {
      clearSalesOffice();
      salesOfficeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'salesOffice' field has an active Builder instance
     * @return True if the 'salesOffice' field has an active Builder instance
     */
    public boolean hasSalesOfficeBuilder() {
      return salesOfficeBuilder != null;
    }

    /**
      * Clears the value of the 'salesOffice' field.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder clearSalesOffice() {
      salesOffice = null;
      salesOfficeBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'billingType' field.
      * @return The value.
      */
    public java.lang.String getBillingType() {
      return billingType;
    }

    /**
      * Sets the value of the 'billingType' field.
      * @param value The value of 'billingType'.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder setBillingType(java.lang.String value) {
      validate(fields()[3], value);
      this.billingType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'billingType' field has been set.
      * @return True if the 'billingType' field has been set, false otherwise.
      */
    public boolean hasBillingType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'billingType' field.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder clearBillingType() {
      billingType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'billToParty' field.
      * @return The value.
      */
    public com.fretron.Model.BuisnessPartner getBillToParty() {
      return billToParty;
    }

    /**
      * Sets the value of the 'billToParty' field.
      * @param value The value of 'billToParty'.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder setBillToParty(com.fretron.Model.BuisnessPartner value) {
      validate(fields()[4], value);
      this.billToPartyBuilder = null;
      this.billToParty = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'billToParty' field has been set.
      * @return True if the 'billToParty' field has been set, false otherwise.
      */
    public boolean hasBillToParty() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'billToParty' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.BuisnessPartner.Builder getBillToPartyBuilder() {
      if (billToPartyBuilder == null) {
        if (hasBillToParty()) {
          setBillToPartyBuilder(com.fretron.Model.BuisnessPartner.newBuilder(billToParty));
        } else {
          setBillToPartyBuilder(com.fretron.Model.BuisnessPartner.newBuilder());
        }
      }
      return billToPartyBuilder;
    }

    /**
     * Sets the Builder instance for the 'billToParty' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Consignment.Builder setBillToPartyBuilder(com.fretron.Model.BuisnessPartner.Builder value) {
      clearBillToParty();
      billToPartyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'billToParty' field has an active Builder instance
     * @return True if the 'billToParty' field has an active Builder instance
     */
    public boolean hasBillToPartyBuilder() {
      return billToPartyBuilder != null;
    }

    /**
      * Clears the value of the 'billToParty' field.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder clearBillToParty() {
      billToParty = null;
      billToPartyBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'loadInfo' field.
      * @return The value.
      */
    public com.fretron.Model.LoadInfo getLoadInfo() {
      return loadInfo;
    }

    /**
      * Sets the value of the 'loadInfo' field.
      * @param value The value of 'loadInfo'.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder setLoadInfo(com.fretron.Model.LoadInfo value) {
      validate(fields()[5], value);
      this.loadInfoBuilder = null;
      this.loadInfo = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'loadInfo' field has been set.
      * @return True if the 'loadInfo' field has been set, false otherwise.
      */
    public boolean hasLoadInfo() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'loadInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.LoadInfo.Builder getLoadInfoBuilder() {
      if (loadInfoBuilder == null) {
        if (hasLoadInfo()) {
          setLoadInfoBuilder(com.fretron.Model.LoadInfo.newBuilder(loadInfo));
        } else {
          setLoadInfoBuilder(com.fretron.Model.LoadInfo.newBuilder());
        }
      }
      return loadInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'loadInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Consignment.Builder setLoadInfoBuilder(com.fretron.Model.LoadInfo.Builder value) {
      clearLoadInfo();
      loadInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'loadInfo' field has an active Builder instance
     * @return True if the 'loadInfo' field has an active Builder instance
     */
    public boolean hasLoadInfoBuilder() {
      return loadInfoBuilder != null;
    }

    /**
      * Clears the value of the 'loadInfo' field.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder clearLoadInfo() {
      loadInfo = null;
      loadInfoBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'invoiceNo' field.
      * @return The value.
      */
    public java.lang.String getInvoiceNo() {
      return invoiceNo;
    }

    /**
      * Sets the value of the 'invoiceNo' field.
      * @param value The value of 'invoiceNo'.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder setInvoiceNo(java.lang.String value) {
      validate(fields()[6], value);
      this.invoiceNo = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'invoiceNo' field has been set.
      * @return True if the 'invoiceNo' field has been set, false otherwise.
      */
    public boolean hasInvoiceNo() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'invoiceNo' field.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder clearInvoiceNo() {
      invoiceNo = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'consignmentNo' field.
      * @return The value.
      */
    public java.lang.String getConsignmentNo() {
      return consignmentNo;
    }

    /**
      * Sets the value of the 'consignmentNo' field.
      * @param value The value of 'consignmentNo'.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder setConsignmentNo(java.lang.String value) {
      validate(fields()[7], value);
      this.consignmentNo = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'consignmentNo' field has been set.
      * @return True if the 'consignmentNo' field has been set, false otherwise.
      */
    public boolean hasConsignmentNo() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'consignmentNo' field.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder clearConsignmentNo() {
      consignmentNo = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'poNumber' field.
      * @return The value.
      */
    public java.lang.String getPoNumber() {
      return poNumber;
    }

    /**
      * Sets the value of the 'poNumber' field.
      * @param value The value of 'poNumber'.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder setPoNumber(java.lang.String value) {
      validate(fields()[8], value);
      this.poNumber = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'poNumber' field has been set.
      * @return True if the 'poNumber' field has been set, false otherwise.
      */
    public boolean hasPoNumber() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'poNumber' field.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder clearPoNumber() {
      poNumber = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'workOrderNumber' field.
      * @return The value.
      */
    public java.lang.String getWorkOrderNumber() {
      return workOrderNumber;
    }

    /**
      * Sets the value of the 'workOrderNumber' field.
      * @param value The value of 'workOrderNumber'.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder setWorkOrderNumber(java.lang.String value) {
      validate(fields()[9], value);
      this.workOrderNumber = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'workOrderNumber' field has been set.
      * @return True if the 'workOrderNumber' field has been set, false otherwise.
      */
    public boolean hasWorkOrderNumber() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'workOrderNumber' field.
      * @return This builder.
      */
    public com.fretron.Model.Consignment.Builder clearWorkOrderNumber() {
      workOrderNumber = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public Consignment build() {
      try {
        Consignment record = new Consignment();
        if (consignerBuilder != null) {
          record.consigner = this.consignerBuilder.build();
        } else {
          record.consigner = fieldSetFlags()[0] ? this.consigner : (com.fretron.Model.BuisnessPartner) defaultValue(fields()[0]);
        }
        if (consigneeBuilder != null) {
          record.consignee = this.consigneeBuilder.build();
        } else {
          record.consignee = fieldSetFlags()[1] ? this.consignee : (com.fretron.Model.BuisnessPartner) defaultValue(fields()[1]);
        }
        if (salesOfficeBuilder != null) {
          record.salesOffice = this.salesOfficeBuilder.build();
        } else {
          record.salesOffice = fieldSetFlags()[2] ? this.salesOffice : (com.fretron.Model.OrgOffice) defaultValue(fields()[2]);
        }
        record.billingType = fieldSetFlags()[3] ? this.billingType : (java.lang.String) defaultValue(fields()[3]);
        if (billToPartyBuilder != null) {
          record.billToParty = this.billToPartyBuilder.build();
        } else {
          record.billToParty = fieldSetFlags()[4] ? this.billToParty : (com.fretron.Model.BuisnessPartner) defaultValue(fields()[4]);
        }
        if (loadInfoBuilder != null) {
          record.loadInfo = this.loadInfoBuilder.build();
        } else {
          record.loadInfo = fieldSetFlags()[5] ? this.loadInfo : (com.fretron.Model.LoadInfo) defaultValue(fields()[5]);
        }
        record.invoiceNo = fieldSetFlags()[6] ? this.invoiceNo : (java.lang.String) defaultValue(fields()[6]);
        record.consignmentNo = fieldSetFlags()[7] ? this.consignmentNo : (java.lang.String) defaultValue(fields()[7]);
        record.poNumber = fieldSetFlags()[8] ? this.poNumber : (java.lang.String) defaultValue(fields()[8]);
        record.workOrderNumber = fieldSetFlags()[9] ? this.workOrderNumber : (java.lang.String) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

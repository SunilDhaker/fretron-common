/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CancelledMapping extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 9074919097977285643L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CancelledMapping\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"reason\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"mapping\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"SalesOrderMapping\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lineItemId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"legType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"consignmentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"quantity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"StandardMeasurement\",\"fields\":[{\"name\":\"weight\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Measurement\",\"fields\":[{\"name\":\"measurmentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"unitOfMeasurment\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"plannedLoadQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"actualLoadedQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"netQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"grossQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"standardQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"actualDeliveredQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"shortage\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"frieghtDeductableQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"claimQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"temperature\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"density\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"moisture\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"volume\",\"type\":[\"null\",\"Measurement\"],\"default\":null},{\"name\":\"packageMeasurement\",\"type\":[\"null\",\"Measurement\"],\"default\":null},{\"name\":\"trucks\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"fuMappings\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LegWiseFuMapping\",\"fields\":[{\"name\":\"legId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"legType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fuLineItemId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"executionPlanId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"legStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"shipmentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"consignmentLineItemId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"originLegId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isFullyUtilized\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String reason;
  @Deprecated public com.fretron.Model.SalesOrderMapping mapping;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CancelledMapping() {}

  /**
   * All-args constructor.
   * @param reason The new value for reason
   * @param mapping The new value for mapping
   */
  public CancelledMapping(java.lang.String reason, com.fretron.Model.SalesOrderMapping mapping) {
    this.reason = reason;
    this.mapping = mapping;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return reason;
    case 1: return mapping;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: reason = (java.lang.String)value$; break;
    case 1: mapping = (com.fretron.Model.SalesOrderMapping)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'reason' field.
   * @return The value of the 'reason' field.
   */
  public java.lang.String getReason() {
    return reason;
  }

  /**
   * Sets the value of the 'reason' field.
   * @param value the value to set.
   */
  public void setReason(java.lang.String value) {
    this.reason = value;
  }

  /**
   * Gets the value of the 'mapping' field.
   * @return The value of the 'mapping' field.
   */
  public com.fretron.Model.SalesOrderMapping getMapping() {
    return mapping;
  }

  /**
   * Sets the value of the 'mapping' field.
   * @param value the value to set.
   */
  public void setMapping(com.fretron.Model.SalesOrderMapping value) {
    this.mapping = value;
  }

  /**
   * Creates a new CancelledMapping RecordBuilder.
   * @return A new CancelledMapping RecordBuilder
   */
  public static com.fretron.Model.CancelledMapping.Builder newBuilder() {
    return new com.fretron.Model.CancelledMapping.Builder();
  }

  /**
   * Creates a new CancelledMapping RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CancelledMapping RecordBuilder
   */
  public static com.fretron.Model.CancelledMapping.Builder newBuilder(com.fretron.Model.CancelledMapping.Builder other) {
    return new com.fretron.Model.CancelledMapping.Builder(other);
  }

  /**
   * Creates a new CancelledMapping RecordBuilder by copying an existing CancelledMapping instance.
   * @param other The existing instance to copy.
   * @return A new CancelledMapping RecordBuilder
   */
  public static com.fretron.Model.CancelledMapping.Builder newBuilder(com.fretron.Model.CancelledMapping other) {
    return new com.fretron.Model.CancelledMapping.Builder(other);
  }

  /**
   * RecordBuilder for CancelledMapping instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CancelledMapping>
    implements org.apache.avro.data.RecordBuilder<CancelledMapping> {

    private java.lang.String reason;
    private com.fretron.Model.SalesOrderMapping mapping;
    private com.fretron.Model.SalesOrderMapping.Builder mappingBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.CancelledMapping.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.reason)) {
        this.reason = data().deepCopy(fields()[0].schema(), other.reason);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.mapping)) {
        this.mapping = data().deepCopy(fields()[1].schema(), other.mapping);
        fieldSetFlags()[1] = true;
      }
      if (other.hasMappingBuilder()) {
        this.mappingBuilder = com.fretron.Model.SalesOrderMapping.newBuilder(other.getMappingBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing CancelledMapping instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.CancelledMapping other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.reason)) {
        this.reason = data().deepCopy(fields()[0].schema(), other.reason);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.mapping)) {
        this.mapping = data().deepCopy(fields()[1].schema(), other.mapping);
        fieldSetFlags()[1] = true;
      }
      this.mappingBuilder = null;
    }

    /**
      * Gets the value of the 'reason' field.
      * @return The value.
      */
    public java.lang.String getReason() {
      return reason;
    }

    /**
      * Sets the value of the 'reason' field.
      * @param value The value of 'reason'.
      * @return This builder.
      */
    public com.fretron.Model.CancelledMapping.Builder setReason(java.lang.String value) {
      validate(fields()[0], value);
      this.reason = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'reason' field has been set.
      * @return True if the 'reason' field has been set, false otherwise.
      */
    public boolean hasReason() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'reason' field.
      * @return This builder.
      */
    public com.fretron.Model.CancelledMapping.Builder clearReason() {
      reason = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'mapping' field.
      * @return The value.
      */
    public com.fretron.Model.SalesOrderMapping getMapping() {
      return mapping;
    }

    /**
      * Sets the value of the 'mapping' field.
      * @param value The value of 'mapping'.
      * @return This builder.
      */
    public com.fretron.Model.CancelledMapping.Builder setMapping(com.fretron.Model.SalesOrderMapping value) {
      validate(fields()[1], value);
      this.mappingBuilder = null;
      this.mapping = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'mapping' field has been set.
      * @return True if the 'mapping' field has been set, false otherwise.
      */
    public boolean hasMapping() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'mapping' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.SalesOrderMapping.Builder getMappingBuilder() {
      if (mappingBuilder == null) {
        if (hasMapping()) {
          setMappingBuilder(com.fretron.Model.SalesOrderMapping.newBuilder(mapping));
        } else {
          setMappingBuilder(com.fretron.Model.SalesOrderMapping.newBuilder());
        }
      }
      return mappingBuilder;
    }

    /**
     * Sets the Builder instance for the 'mapping' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.CancelledMapping.Builder setMappingBuilder(com.fretron.Model.SalesOrderMapping.Builder value) {
      clearMapping();
      mappingBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'mapping' field has an active Builder instance
     * @return True if the 'mapping' field has an active Builder instance
     */
    public boolean hasMappingBuilder() {
      return mappingBuilder != null;
    }

    /**
      * Clears the value of the 'mapping' field.
      * @return This builder.
      */
    public com.fretron.Model.CancelledMapping.Builder clearMapping() {
      mapping = null;
      mappingBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public CancelledMapping build() {
      try {
        CancelledMapping record = new CancelledMapping();
        record.reason = fieldSetFlags()[0] ? this.reason : (java.lang.String) defaultValue(fields()[0]);
        if (mappingBuilder != null) {
          record.mapping = this.mappingBuilder.build();
        } else {
          record.mapping = fieldSetFlags()[1] ? this.mapping : (com.fretron.Model.SalesOrderMapping) defaultValue(fields()[1]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Alert extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5225309387919989280L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Alert\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"alertEventTopic\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"conditions\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AlertCondition\",\"fields\":[{\"name\":\"field\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"windowSize\",\"type\":\"long\",\"default\":0},{\"name\":\"fieldType\",\"type\":{\"type\":\"enum\",\"name\":\"AlertFieldType\",\"symbols\":[\"PRIMITIVE\",\"CALCULATED\",\"AGGREGATE\"]}},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"valueType\",\"type\":{\"type\":\"enum\",\"name\":\"AlertParamValueType\",\"symbols\":[\"INT\",\"LONG\",\"DOUBLE\",\"STRING\",\"INT_RANGE\",\"LONG_RANGE\",\"DOUBLE_RANGE\",\"LOCATION_PROXIMITY\",\"LOCATION_GEOFENCE\"]}},{\"name\":\"operator\",\"type\":{\"type\":\"enum\",\"name\":\"AlertOperator\",\"symbols\":[\"IS\",\"IN\",\"NIN\",\"GT\",\"GTE\",\"LT\",\"LTE\",\"EQ\",\"REGEX\"]}}]}}},{\"name\":\"actions\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AlertAction\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"AlertActionType\",\"symbols\":[\"SMS\",\"EMAIL\"]}},{\"name\":\"valueTemplate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"recipient\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}}},{\"name\":\"vehicles\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"snoozeTime\",\"type\":[\"null\",\"long\"],\"default\":0},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String alertEventTopic;
  @Deprecated public java.util.List<com.fretron.Model.AlertCondition> conditions;
  @Deprecated public java.util.List<com.fretron.Model.AlertAction> actions;
  @Deprecated public java.util.List<java.lang.String> vehicles;
  @Deprecated public java.lang.Long snoozeTime;
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String userId;
  @Deprecated public java.lang.String orgId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Alert() {}

  /**
   * All-args constructor.
   * @param alertEventTopic The new value for alertEventTopic
   * @param conditions The new value for conditions
   * @param actions The new value for actions
   * @param vehicles The new value for vehicles
   * @param snoozeTime The new value for snoozeTime
   * @param uuid The new value for uuid
   * @param userId The new value for userId
   * @param orgId The new value for orgId
   */
  public Alert(java.lang.String alertEventTopic, java.util.List<com.fretron.Model.AlertCondition> conditions, java.util.List<com.fretron.Model.AlertAction> actions, java.util.List<java.lang.String> vehicles, java.lang.Long snoozeTime, java.lang.String uuid, java.lang.String userId, java.lang.String orgId) {
    this.alertEventTopic = alertEventTopic;
    this.conditions = conditions;
    this.actions = actions;
    this.vehicles = vehicles;
    this.snoozeTime = snoozeTime;
    this.uuid = uuid;
    this.userId = userId;
    this.orgId = orgId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return alertEventTopic;
    case 1: return conditions;
    case 2: return actions;
    case 3: return vehicles;
    case 4: return snoozeTime;
    case 5: return uuid;
    case 6: return userId;
    case 7: return orgId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: alertEventTopic = (java.lang.String)value$; break;
    case 1: conditions = (java.util.List<com.fretron.Model.AlertCondition>)value$; break;
    case 2: actions = (java.util.List<com.fretron.Model.AlertAction>)value$; break;
    case 3: vehicles = (java.util.List<java.lang.String>)value$; break;
    case 4: snoozeTime = (java.lang.Long)value$; break;
    case 5: uuid = (java.lang.String)value$; break;
    case 6: userId = (java.lang.String)value$; break;
    case 7: orgId = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'alertEventTopic' field.
   * @return The value of the 'alertEventTopic' field.
   */
  public java.lang.String getAlertEventTopic() {
    return alertEventTopic;
  }

  /**
   * Sets the value of the 'alertEventTopic' field.
   * @param value the value to set.
   */
  public void setAlertEventTopic(java.lang.String value) {
    this.alertEventTopic = value;
  }

  /**
   * Gets the value of the 'conditions' field.
   * @return The value of the 'conditions' field.
   */
  public java.util.List<com.fretron.Model.AlertCondition> getConditions() {
    return conditions;
  }

  /**
   * Sets the value of the 'conditions' field.
   * @param value the value to set.
   */
  public void setConditions(java.util.List<com.fretron.Model.AlertCondition> value) {
    this.conditions = value;
  }

  /**
   * Gets the value of the 'actions' field.
   * @return The value of the 'actions' field.
   */
  public java.util.List<com.fretron.Model.AlertAction> getActions() {
    return actions;
  }

  /**
   * Sets the value of the 'actions' field.
   * @param value the value to set.
   */
  public void setActions(java.util.List<com.fretron.Model.AlertAction> value) {
    this.actions = value;
  }

  /**
   * Gets the value of the 'vehicles' field.
   * @return The value of the 'vehicles' field.
   */
  public java.util.List<java.lang.String> getVehicles() {
    return vehicles;
  }

  /**
   * Sets the value of the 'vehicles' field.
   * @param value the value to set.
   */
  public void setVehicles(java.util.List<java.lang.String> value) {
    this.vehicles = value;
  }

  /**
   * Gets the value of the 'snoozeTime' field.
   * @return The value of the 'snoozeTime' field.
   */
  public java.lang.Long getSnoozeTime() {
    return snoozeTime;
  }

  /**
   * Sets the value of the 'snoozeTime' field.
   * @param value the value to set.
   */
  public void setSnoozeTime(java.lang.Long value) {
    this.snoozeTime = value;
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.String getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.String value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Creates a new Alert RecordBuilder.
   * @return A new Alert RecordBuilder
   */
  public static com.fretron.Model.Alert.Builder newBuilder() {
    return new com.fretron.Model.Alert.Builder();
  }

  /**
   * Creates a new Alert RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Alert RecordBuilder
   */
  public static com.fretron.Model.Alert.Builder newBuilder(com.fretron.Model.Alert.Builder other) {
    return new com.fretron.Model.Alert.Builder(other);
  }

  /**
   * Creates a new Alert RecordBuilder by copying an existing Alert instance.
   * @param other The existing instance to copy.
   * @return A new Alert RecordBuilder
   */
  public static com.fretron.Model.Alert.Builder newBuilder(com.fretron.Model.Alert other) {
    return new com.fretron.Model.Alert.Builder(other);
  }

  /**
   * RecordBuilder for Alert instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Alert>
    implements org.apache.avro.data.RecordBuilder<Alert> {

    private java.lang.String alertEventTopic;
    private java.util.List<com.fretron.Model.AlertCondition> conditions;
    private java.util.List<com.fretron.Model.AlertAction> actions;
    private java.util.List<java.lang.String> vehicles;
    private java.lang.Long snoozeTime;
    private java.lang.String uuid;
    private java.lang.String userId;
    private java.lang.String orgId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.Alert.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.alertEventTopic)) {
        this.alertEventTopic = data().deepCopy(fields()[0].schema(), other.alertEventTopic);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.conditions)) {
        this.conditions = data().deepCopy(fields()[1].schema(), other.conditions);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.actions)) {
        this.actions = data().deepCopy(fields()[2].schema(), other.actions);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vehicles)) {
        this.vehicles = data().deepCopy(fields()[3].schema(), other.vehicles);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.snoozeTime)) {
        this.snoozeTime = data().deepCopy(fields()[4].schema(), other.snoozeTime);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.uuid)) {
        this.uuid = data().deepCopy(fields()[5].schema(), other.uuid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.userId)) {
        this.userId = data().deepCopy(fields()[6].schema(), other.userId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.orgId)) {
        this.orgId = data().deepCopy(fields()[7].schema(), other.orgId);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Alert instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.Alert other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.alertEventTopic)) {
        this.alertEventTopic = data().deepCopy(fields()[0].schema(), other.alertEventTopic);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.conditions)) {
        this.conditions = data().deepCopy(fields()[1].schema(), other.conditions);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.actions)) {
        this.actions = data().deepCopy(fields()[2].schema(), other.actions);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vehicles)) {
        this.vehicles = data().deepCopy(fields()[3].schema(), other.vehicles);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.snoozeTime)) {
        this.snoozeTime = data().deepCopy(fields()[4].schema(), other.snoozeTime);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.uuid)) {
        this.uuid = data().deepCopy(fields()[5].schema(), other.uuid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.userId)) {
        this.userId = data().deepCopy(fields()[6].schema(), other.userId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.orgId)) {
        this.orgId = data().deepCopy(fields()[7].schema(), other.orgId);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'alertEventTopic' field.
      * @return The value.
      */
    public java.lang.String getAlertEventTopic() {
      return alertEventTopic;
    }

    /**
      * Sets the value of the 'alertEventTopic' field.
      * @param value The value of 'alertEventTopic'.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder setAlertEventTopic(java.lang.String value) {
      validate(fields()[0], value);
      this.alertEventTopic = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'alertEventTopic' field has been set.
      * @return True if the 'alertEventTopic' field has been set, false otherwise.
      */
    public boolean hasAlertEventTopic() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'alertEventTopic' field.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder clearAlertEventTopic() {
      alertEventTopic = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'conditions' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.AlertCondition> getConditions() {
      return conditions;
    }

    /**
      * Sets the value of the 'conditions' field.
      * @param value The value of 'conditions'.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder setConditions(java.util.List<com.fretron.Model.AlertCondition> value) {
      validate(fields()[1], value);
      this.conditions = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'conditions' field has been set.
      * @return True if the 'conditions' field has been set, false otherwise.
      */
    public boolean hasConditions() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'conditions' field.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder clearConditions() {
      conditions = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'actions' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.AlertAction> getActions() {
      return actions;
    }

    /**
      * Sets the value of the 'actions' field.
      * @param value The value of 'actions'.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder setActions(java.util.List<com.fretron.Model.AlertAction> value) {
      validate(fields()[2], value);
      this.actions = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'actions' field has been set.
      * @return True if the 'actions' field has been set, false otherwise.
      */
    public boolean hasActions() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'actions' field.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder clearActions() {
      actions = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicles' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getVehicles() {
      return vehicles;
    }

    /**
      * Sets the value of the 'vehicles' field.
      * @param value The value of 'vehicles'.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder setVehicles(java.util.List<java.lang.String> value) {
      validate(fields()[3], value);
      this.vehicles = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicles' field has been set.
      * @return True if the 'vehicles' field has been set, false otherwise.
      */
    public boolean hasVehicles() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'vehicles' field.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder clearVehicles() {
      vehicles = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'snoozeTime' field.
      * @return The value.
      */
    public java.lang.Long getSnoozeTime() {
      return snoozeTime;
    }

    /**
      * Sets the value of the 'snoozeTime' field.
      * @param value The value of 'snoozeTime'.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder setSnoozeTime(java.lang.Long value) {
      validate(fields()[4], value);
      this.snoozeTime = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'snoozeTime' field has been set.
      * @return True if the 'snoozeTime' field has been set, false otherwise.
      */
    public boolean hasSnoozeTime() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'snoozeTime' field.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder clearSnoozeTime() {
      snoozeTime = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder setUuid(java.lang.String value) {
      validate(fields()[5], value);
      this.uuid = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.String getUserId() {
      return userId;
    }

    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder setUserId(java.lang.String value) {
      validate(fields()[6], value);
      this.userId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder setOrgId(java.lang.String value) {
      validate(fields()[7], value);
      this.orgId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.Alert.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public Alert build() {
      try {
        Alert record = new Alert();
        record.alertEventTopic = fieldSetFlags()[0] ? this.alertEventTopic : (java.lang.String) defaultValue(fields()[0]);
        record.conditions = fieldSetFlags()[1] ? this.conditions : (java.util.List<com.fretron.Model.AlertCondition>) defaultValue(fields()[1]);
        record.actions = fieldSetFlags()[2] ? this.actions : (java.util.List<com.fretron.Model.AlertAction>) defaultValue(fields()[2]);
        record.vehicles = fieldSetFlags()[3] ? this.vehicles : (java.util.List<java.lang.String>) defaultValue(fields()[3]);
        record.snoozeTime = fieldSetFlags()[4] ? this.snoozeTime : (java.lang.Long) defaultValue(fields()[4]);
        record.uuid = fieldSetFlags()[5] ? this.uuid : (java.lang.String) defaultValue(fields()[5]);
        record.userId = fieldSetFlags()[6] ? this.userId : (java.lang.String) defaultValue(fields()[6]);
        record.orgId = fieldSetFlags()[7] ? this.orgId : (java.lang.String) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FreightPurchaseOrder extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4089652237133816788L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FreightPurchaseOrder\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderDate\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"vendor\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BuisnessPartner\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fretronId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"geoFence\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoJsonFence\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Properties\",\"fields\":[{\"name\":\"catagory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"level\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customeFields\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hubId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"district\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subDistrict\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isOwned\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"geometry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geometry\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"coordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null}]}],\"default\":null},{\"name\":\"metadata\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MetaData\",\"fields\":[{\"name\":\"clazz\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isFavorite\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"places\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Place\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"center\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"centerCoordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"suggestedRadius\",\"type\":\"double\",\"default\":null},{\"name\":\"viewport\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ViewPort\",\"fields\":[{\"name\":\"northeast\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"southwest\",\"type\":[\"null\",\"Location\"],\"default\":null}]}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hubId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"district\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subDistrict\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"boundary\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null},{\"name\":\"places\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Place\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isOwned\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"geoJsonBoundry\",\"type\":[\"null\",\"Geometry\"],\"default\":null}]}}],\"default\":null},{\"name\":\"contacts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Contact\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"emails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"mobileNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isPortalEnabled\",\"type\":\"boolean\",\"default\":false},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Updates\",\"fields\":[{\"name\":\"forwardReasons\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfInformation\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updateType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"forwardedFrom\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"panNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},","{\"name\":\"group\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PartnerGroup\",\"fields\":[{\"name\":\"partnerType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"route\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}],\"default\":null},{\"name\":\"orderType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placementDate\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"origin\",\"type\":[\"null\",\"Place\"],\"default\":null},{\"name\":\"destination\",\"type\":[\"null\",\"Place\"],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"numberOfVehicles\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"salesOrders\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",\"Updates\"],\"default\":null},{\"name\":\"tnCs\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ContractTerms\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"lineItems\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrderLineItem\",\"fields\":[{\"name\":\"consignee\",\"type\":[\"null\",\"BuisnessPartner\"],\"default\":null},{\"name\":\"consigner\",\"type\":[\"null\",\"BuisnessPartner\"],\"default\":null},{\"name\":\"expectedDeliveryDate\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"invoiceDate\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"invoiceValue\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"invoiceNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"loadInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LoadInfo\",\"fields\":[{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"measurements\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Measurement\",\"fields\":[{\"name\":\"measurmentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"unitOfMeasurment\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"plannedLoadQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"actualLoadedQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"netQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"grossQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"standardQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"actualDeliveredQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"shortage\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"frieghtDeductableQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"claimQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"temperature\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"density\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"moisture\",\"type\":[\"null\",\"double\"],\"default\":null}]}}],\"default\":null},{\"name\":\"valueOfGoods\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"standardMeasurement\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"StandardMeasurement\",\"fields\":[{\"name\":\"weight\",\"type\":[\"null\",\"Measurement\"],\"default\":null},{\"name\":\"volume\",\"type\":[\"null\",\"Measurement\"],\"default\":null},{\"name\":\"packageMeasurement\",\"type\":[\"null\",\"Measurement\"],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"orderMapping\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrderRelation\",\"fields\":[{\"name\":\"orderId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lineItemId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"branch\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"OrgOffice\",\"fields\":[{\"name\":\"_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"geoLocation\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"contacts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Contact\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"branchName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"regionName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"zoneName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",\"Updates\"],\"default\":null}]}],\"default\":null},{\"name\":\"route\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String externalId;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.String orderNumber;
  @Deprecated public java.lang.Long orderDate;
  @Deprecated public com.fretron.Model.BuisnessPartner vendor;
  @Deprecated public java.lang.String orderType;
  @Deprecated public java.lang.String status;
  @Deprecated public java.lang.Long placementDate;
  @Deprecated public com.fretron.Model.Place origin;
  @Deprecated public com.fretron.Model.Place destination;
  @Deprecated public java.lang.String material;
  @Deprecated public java.lang.String vehicleType;
  @Deprecated public java.lang.Integer numberOfVehicles;
  @Deprecated public java.util.List<java.lang.String> salesOrders;
  @Deprecated public com.fretron.Model.Updates updates;
  @Deprecated public java.util.List<com.fretron.Model.ContractTerms> tnCs;
  @Deprecated public java.util.List<com.fretron.Model.OrderLineItem> lineItems;
  @Deprecated public com.fretron.Model.OrgOffice branch;
  @Deprecated public java.lang.String route;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FreightPurchaseOrder() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param externalId The new value for externalId
   * @param orgId The new value for orgId
   * @param orderNumber The new value for orderNumber
   * @param orderDate The new value for orderDate
   * @param vendor The new value for vendor
   * @param orderType The new value for orderType
   * @param status The new value for status
   * @param placementDate The new value for placementDate
   * @param origin The new value for origin
   * @param destination The new value for destination
   * @param material The new value for material
   * @param vehicleType The new value for vehicleType
   * @param numberOfVehicles The new value for numberOfVehicles
   * @param salesOrders The new value for salesOrders
   * @param updates The new value for updates
   * @param tnCs The new value for tnCs
   * @param lineItems The new value for lineItems
   * @param branch The new value for branch
   * @param route The new value for route
   */
  public FreightPurchaseOrder(java.lang.String uuid, java.lang.String externalId, java.lang.String orgId, java.lang.String orderNumber, java.lang.Long orderDate, com.fretron.Model.BuisnessPartner vendor, java.lang.String orderType, java.lang.String status, java.lang.Long placementDate, com.fretron.Model.Place origin, com.fretron.Model.Place destination, java.lang.String material, java.lang.String vehicleType, java.lang.Integer numberOfVehicles, java.util.List<java.lang.String> salesOrders, com.fretron.Model.Updates updates, java.util.List<com.fretron.Model.ContractTerms> tnCs, java.util.List<com.fretron.Model.OrderLineItem> lineItems, com.fretron.Model.OrgOffice branch, java.lang.String route) {
    this.uuid = uuid;
    this.externalId = externalId;
    this.orgId = orgId;
    this.orderNumber = orderNumber;
    this.orderDate = orderDate;
    this.vendor = vendor;
    this.orderType = orderType;
    this.status = status;
    this.placementDate = placementDate;
    this.origin = origin;
    this.destination = destination;
    this.material = material;
    this.vehicleType = vehicleType;
    this.numberOfVehicles = numberOfVehicles;
    this.salesOrders = salesOrders;
    this.updates = updates;
    this.tnCs = tnCs;
    this.lineItems = lineItems;
    this.branch = branch;
    this.route = route;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return externalId;
    case 2: return orgId;
    case 3: return orderNumber;
    case 4: return orderDate;
    case 5: return vendor;
    case 6: return orderType;
    case 7: return status;
    case 8: return placementDate;
    case 9: return origin;
    case 10: return destination;
    case 11: return material;
    case 12: return vehicleType;
    case 13: return numberOfVehicles;
    case 14: return salesOrders;
    case 15: return updates;
    case 16: return tnCs;
    case 17: return lineItems;
    case 18: return branch;
    case 19: return route;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: externalId = (java.lang.String)value$; break;
    case 2: orgId = (java.lang.String)value$; break;
    case 3: orderNumber = (java.lang.String)value$; break;
    case 4: orderDate = (java.lang.Long)value$; break;
    case 5: vendor = (com.fretron.Model.BuisnessPartner)value$; break;
    case 6: orderType = (java.lang.String)value$; break;
    case 7: status = (java.lang.String)value$; break;
    case 8: placementDate = (java.lang.Long)value$; break;
    case 9: origin = (com.fretron.Model.Place)value$; break;
    case 10: destination = (com.fretron.Model.Place)value$; break;
    case 11: material = (java.lang.String)value$; break;
    case 12: vehicleType = (java.lang.String)value$; break;
    case 13: numberOfVehicles = (java.lang.Integer)value$; break;
    case 14: salesOrders = (java.util.List<java.lang.String>)value$; break;
    case 15: updates = (com.fretron.Model.Updates)value$; break;
    case 16: tnCs = (java.util.List<com.fretron.Model.ContractTerms>)value$; break;
    case 17: lineItems = (java.util.List<com.fretron.Model.OrderLineItem>)value$; break;
    case 18: branch = (com.fretron.Model.OrgOffice)value$; break;
    case 19: route = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'externalId' field.
   * @return The value of the 'externalId' field.
   */
  public java.lang.String getExternalId() {
    return externalId;
  }

  /**
   * Sets the value of the 'externalId' field.
   * @param value the value to set.
   */
  public void setExternalId(java.lang.String value) {
    this.externalId = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'orderNumber' field.
   * @return The value of the 'orderNumber' field.
   */
  public java.lang.String getOrderNumber() {
    return orderNumber;
  }

  /**
   * Sets the value of the 'orderNumber' field.
   * @param value the value to set.
   */
  public void setOrderNumber(java.lang.String value) {
    this.orderNumber = value;
  }

  /**
   * Gets the value of the 'orderDate' field.
   * @return The value of the 'orderDate' field.
   */
  public java.lang.Long getOrderDate() {
    return orderDate;
  }

  /**
   * Sets the value of the 'orderDate' field.
   * @param value the value to set.
   */
  public void setOrderDate(java.lang.Long value) {
    this.orderDate = value;
  }

  /**
   * Gets the value of the 'vendor' field.
   * @return The value of the 'vendor' field.
   */
  public com.fretron.Model.BuisnessPartner getVendor() {
    return vendor;
  }

  /**
   * Sets the value of the 'vendor' field.
   * @param value the value to set.
   */
  public void setVendor(com.fretron.Model.BuisnessPartner value) {
    this.vendor = value;
  }

  /**
   * Gets the value of the 'orderType' field.
   * @return The value of the 'orderType' field.
   */
  public java.lang.String getOrderType() {
    return orderType;
  }

  /**
   * Sets the value of the 'orderType' field.
   * @param value the value to set.
   */
  public void setOrderType(java.lang.String value) {
    this.orderType = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'placementDate' field.
   * @return The value of the 'placementDate' field.
   */
  public java.lang.Long getPlacementDate() {
    return placementDate;
  }

  /**
   * Sets the value of the 'placementDate' field.
   * @param value the value to set.
   */
  public void setPlacementDate(java.lang.Long value) {
    this.placementDate = value;
  }

  /**
   * Gets the value of the 'origin' field.
   * @return The value of the 'origin' field.
   */
  public com.fretron.Model.Place getOrigin() {
    return origin;
  }

  /**
   * Sets the value of the 'origin' field.
   * @param value the value to set.
   */
  public void setOrigin(com.fretron.Model.Place value) {
    this.origin = value;
  }

  /**
   * Gets the value of the 'destination' field.
   * @return The value of the 'destination' field.
   */
  public com.fretron.Model.Place getDestination() {
    return destination;
  }

  /**
   * Sets the value of the 'destination' field.
   * @param value the value to set.
   */
  public void setDestination(com.fretron.Model.Place value) {
    this.destination = value;
  }

  /**
   * Gets the value of the 'material' field.
   * @return The value of the 'material' field.
   */
  public java.lang.String getMaterial() {
    return material;
  }

  /**
   * Sets the value of the 'material' field.
   * @param value the value to set.
   */
  public void setMaterial(java.lang.String value) {
    this.material = value;
  }

  /**
   * Gets the value of the 'vehicleType' field.
   * @return The value of the 'vehicleType' field.
   */
  public java.lang.String getVehicleType() {
    return vehicleType;
  }

  /**
   * Sets the value of the 'vehicleType' field.
   * @param value the value to set.
   */
  public void setVehicleType(java.lang.String value) {
    this.vehicleType = value;
  }

  /**
   * Gets the value of the 'numberOfVehicles' field.
   * @return The value of the 'numberOfVehicles' field.
   */
  public java.lang.Integer getNumberOfVehicles() {
    return numberOfVehicles;
  }

  /**
   * Sets the value of the 'numberOfVehicles' field.
   * @param value the value to set.
   */
  public void setNumberOfVehicles(java.lang.Integer value) {
    this.numberOfVehicles = value;
  }

  /**
   * Gets the value of the 'salesOrders' field.
   * @return The value of the 'salesOrders' field.
   */
  public java.util.List<java.lang.String> getSalesOrders() {
    return salesOrders;
  }

  /**
   * Sets the value of the 'salesOrders' field.
   * @param value the value to set.
   */
  public void setSalesOrders(java.util.List<java.lang.String> value) {
    this.salesOrders = value;
  }

  /**
   * Gets the value of the 'updates' field.
   * @return The value of the 'updates' field.
   */
  public com.fretron.Model.Updates getUpdates() {
    return updates;
  }

  /**
   * Sets the value of the 'updates' field.
   * @param value the value to set.
   */
  public void setUpdates(com.fretron.Model.Updates value) {
    this.updates = value;
  }

  /**
   * Gets the value of the 'tnCs' field.
   * @return The value of the 'tnCs' field.
   */
  public java.util.List<com.fretron.Model.ContractTerms> getTnCs() {
    return tnCs;
  }

  /**
   * Sets the value of the 'tnCs' field.
   * @param value the value to set.
   */
  public void setTnCs(java.util.List<com.fretron.Model.ContractTerms> value) {
    this.tnCs = value;
  }

  /**
   * Gets the value of the 'lineItems' field.
   * @return The value of the 'lineItems' field.
   */
  public java.util.List<com.fretron.Model.OrderLineItem> getLineItems() {
    return lineItems;
  }

  /**
   * Sets the value of the 'lineItems' field.
   * @param value the value to set.
   */
  public void setLineItems(java.util.List<com.fretron.Model.OrderLineItem> value) {
    this.lineItems = value;
  }

  /**
   * Gets the value of the 'branch' field.
   * @return The value of the 'branch' field.
   */
  public com.fretron.Model.OrgOffice getBranch() {
    return branch;
  }

  /**
   * Sets the value of the 'branch' field.
   * @param value the value to set.
   */
  public void setBranch(com.fretron.Model.OrgOffice value) {
    this.branch = value;
  }

  /**
   * Gets the value of the 'route' field.
   * @return The value of the 'route' field.
   */
  public java.lang.String getRoute() {
    return route;
  }

  /**
   * Sets the value of the 'route' field.
   * @param value the value to set.
   */
  public void setRoute(java.lang.String value) {
    this.route = value;
  }

  /**
   * Creates a new FreightPurchaseOrder RecordBuilder.
   * @return A new FreightPurchaseOrder RecordBuilder
   */
  public static com.fretron.Model.FreightPurchaseOrder.Builder newBuilder() {
    return new com.fretron.Model.FreightPurchaseOrder.Builder();
  }

  /**
   * Creates a new FreightPurchaseOrder RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FreightPurchaseOrder RecordBuilder
   */
  public static com.fretron.Model.FreightPurchaseOrder.Builder newBuilder(com.fretron.Model.FreightPurchaseOrder.Builder other) {
    return new com.fretron.Model.FreightPurchaseOrder.Builder(other);
  }

  /**
   * Creates a new FreightPurchaseOrder RecordBuilder by copying an existing FreightPurchaseOrder instance.
   * @param other The existing instance to copy.
   * @return A new FreightPurchaseOrder RecordBuilder
   */
  public static com.fretron.Model.FreightPurchaseOrder.Builder newBuilder(com.fretron.Model.FreightPurchaseOrder other) {
    return new com.fretron.Model.FreightPurchaseOrder.Builder(other);
  }

  /**
   * RecordBuilder for FreightPurchaseOrder instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FreightPurchaseOrder>
    implements org.apache.avro.data.RecordBuilder<FreightPurchaseOrder> {

    private java.lang.String uuid;
    private java.lang.String externalId;
    private java.lang.String orgId;
    private java.lang.String orderNumber;
    private java.lang.Long orderDate;
    private com.fretron.Model.BuisnessPartner vendor;
    private com.fretron.Model.BuisnessPartner.Builder vendorBuilder;
    private java.lang.String orderType;
    private java.lang.String status;
    private java.lang.Long placementDate;
    private com.fretron.Model.Place origin;
    private com.fretron.Model.Place.Builder originBuilder;
    private com.fretron.Model.Place destination;
    private com.fretron.Model.Place.Builder destinationBuilder;
    private java.lang.String material;
    private java.lang.String vehicleType;
    private java.lang.Integer numberOfVehicles;
    private java.util.List<java.lang.String> salesOrders;
    private com.fretron.Model.Updates updates;
    private com.fretron.Model.Updates.Builder updatesBuilder;
    private java.util.List<com.fretron.Model.ContractTerms> tnCs;
    private java.util.List<com.fretron.Model.OrderLineItem> lineItems;
    private com.fretron.Model.OrgOffice branch;
    private com.fretron.Model.OrgOffice.Builder branchBuilder;
    private java.lang.String route;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.FreightPurchaseOrder.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalId)) {
        this.externalId = data().deepCopy(fields()[1].schema(), other.externalId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.orderNumber)) {
        this.orderNumber = data().deepCopy(fields()[3].schema(), other.orderNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.orderDate)) {
        this.orderDate = data().deepCopy(fields()[4].schema(), other.orderDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.vendor)) {
        this.vendor = data().deepCopy(fields()[5].schema(), other.vendor);
        fieldSetFlags()[5] = true;
      }
      if (other.hasVendorBuilder()) {
        this.vendorBuilder = com.fretron.Model.BuisnessPartner.newBuilder(other.getVendorBuilder());
      }
      if (isValidValue(fields()[6], other.orderType)) {
        this.orderType = data().deepCopy(fields()[6].schema(), other.orderType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.status)) {
        this.status = data().deepCopy(fields()[7].schema(), other.status);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.placementDate)) {
        this.placementDate = data().deepCopy(fields()[8].schema(), other.placementDate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.origin)) {
        this.origin = data().deepCopy(fields()[9].schema(), other.origin);
        fieldSetFlags()[9] = true;
      }
      if (other.hasOriginBuilder()) {
        this.originBuilder = com.fretron.Model.Place.newBuilder(other.getOriginBuilder());
      }
      if (isValidValue(fields()[10], other.destination)) {
        this.destination = data().deepCopy(fields()[10].schema(), other.destination);
        fieldSetFlags()[10] = true;
      }
      if (other.hasDestinationBuilder()) {
        this.destinationBuilder = com.fretron.Model.Place.newBuilder(other.getDestinationBuilder());
      }
      if (isValidValue(fields()[11], other.material)) {
        this.material = data().deepCopy(fields()[11].schema(), other.material);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.vehicleType)) {
        this.vehicleType = data().deepCopy(fields()[12].schema(), other.vehicleType);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.numberOfVehicles)) {
        this.numberOfVehicles = data().deepCopy(fields()[13].schema(), other.numberOfVehicles);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.salesOrders)) {
        this.salesOrders = data().deepCopy(fields()[14].schema(), other.salesOrders);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.updates)) {
        this.updates = data().deepCopy(fields()[15].schema(), other.updates);
        fieldSetFlags()[15] = true;
      }
      if (other.hasUpdatesBuilder()) {
        this.updatesBuilder = com.fretron.Model.Updates.newBuilder(other.getUpdatesBuilder());
      }
      if (isValidValue(fields()[16], other.tnCs)) {
        this.tnCs = data().deepCopy(fields()[16].schema(), other.tnCs);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.lineItems)) {
        this.lineItems = data().deepCopy(fields()[17].schema(), other.lineItems);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.branch)) {
        this.branch = data().deepCopy(fields()[18].schema(), other.branch);
        fieldSetFlags()[18] = true;
      }
      if (other.hasBranchBuilder()) {
        this.branchBuilder = com.fretron.Model.OrgOffice.newBuilder(other.getBranchBuilder());
      }
      if (isValidValue(fields()[19], other.route)) {
        this.route = data().deepCopy(fields()[19].schema(), other.route);
        fieldSetFlags()[19] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing FreightPurchaseOrder instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.FreightPurchaseOrder other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalId)) {
        this.externalId = data().deepCopy(fields()[1].schema(), other.externalId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.orderNumber)) {
        this.orderNumber = data().deepCopy(fields()[3].schema(), other.orderNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.orderDate)) {
        this.orderDate = data().deepCopy(fields()[4].schema(), other.orderDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.vendor)) {
        this.vendor = data().deepCopy(fields()[5].schema(), other.vendor);
        fieldSetFlags()[5] = true;
      }
      this.vendorBuilder = null;
      if (isValidValue(fields()[6], other.orderType)) {
        this.orderType = data().deepCopy(fields()[6].schema(), other.orderType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.status)) {
        this.status = data().deepCopy(fields()[7].schema(), other.status);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.placementDate)) {
        this.placementDate = data().deepCopy(fields()[8].schema(), other.placementDate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.origin)) {
        this.origin = data().deepCopy(fields()[9].schema(), other.origin);
        fieldSetFlags()[9] = true;
      }
      this.originBuilder = null;
      if (isValidValue(fields()[10], other.destination)) {
        this.destination = data().deepCopy(fields()[10].schema(), other.destination);
        fieldSetFlags()[10] = true;
      }
      this.destinationBuilder = null;
      if (isValidValue(fields()[11], other.material)) {
        this.material = data().deepCopy(fields()[11].schema(), other.material);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.vehicleType)) {
        this.vehicleType = data().deepCopy(fields()[12].schema(), other.vehicleType);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.numberOfVehicles)) {
        this.numberOfVehicles = data().deepCopy(fields()[13].schema(), other.numberOfVehicles);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.salesOrders)) {
        this.salesOrders = data().deepCopy(fields()[14].schema(), other.salesOrders);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.updates)) {
        this.updates = data().deepCopy(fields()[15].schema(), other.updates);
        fieldSetFlags()[15] = true;
      }
      this.updatesBuilder = null;
      if (isValidValue(fields()[16], other.tnCs)) {
        this.tnCs = data().deepCopy(fields()[16].schema(), other.tnCs);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.lineItems)) {
        this.lineItems = data().deepCopy(fields()[17].schema(), other.lineItems);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.branch)) {
        this.branch = data().deepCopy(fields()[18].schema(), other.branch);
        fieldSetFlags()[18] = true;
      }
      this.branchBuilder = null;
      if (isValidValue(fields()[19], other.route)) {
        this.route = data().deepCopy(fields()[19].schema(), other.route);
        fieldSetFlags()[19] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalId' field.
      * @return The value.
      */
    public java.lang.String getExternalId() {
      return externalId;
    }

    /**
      * Sets the value of the 'externalId' field.
      * @param value The value of 'externalId'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setExternalId(java.lang.String value) {
      validate(fields()[1], value);
      this.externalId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'externalId' field has been set.
      * @return True if the 'externalId' field has been set, false otherwise.
      */
    public boolean hasExternalId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'externalId' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearExternalId() {
      externalId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setOrgId(java.lang.String value) {
      validate(fields()[2], value);
      this.orgId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderNumber' field.
      * @return The value.
      */
    public java.lang.String getOrderNumber() {
      return orderNumber;
    }

    /**
      * Sets the value of the 'orderNumber' field.
      * @param value The value of 'orderNumber'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setOrderNumber(java.lang.String value) {
      validate(fields()[3], value);
      this.orderNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'orderNumber' field has been set.
      * @return True if the 'orderNumber' field has been set, false otherwise.
      */
    public boolean hasOrderNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'orderNumber' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearOrderNumber() {
      orderNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderDate' field.
      * @return The value.
      */
    public java.lang.Long getOrderDate() {
      return orderDate;
    }

    /**
      * Sets the value of the 'orderDate' field.
      * @param value The value of 'orderDate'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setOrderDate(java.lang.Long value) {
      validate(fields()[4], value);
      this.orderDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'orderDate' field has been set.
      * @return True if the 'orderDate' field has been set, false otherwise.
      */
    public boolean hasOrderDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'orderDate' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearOrderDate() {
      orderDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'vendor' field.
      * @return The value.
      */
    public com.fretron.Model.BuisnessPartner getVendor() {
      return vendor;
    }

    /**
      * Sets the value of the 'vendor' field.
      * @param value The value of 'vendor'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setVendor(com.fretron.Model.BuisnessPartner value) {
      validate(fields()[5], value);
      this.vendorBuilder = null;
      this.vendor = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'vendor' field has been set.
      * @return True if the 'vendor' field has been set, false otherwise.
      */
    public boolean hasVendor() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'vendor' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.BuisnessPartner.Builder getVendorBuilder() {
      if (vendorBuilder == null) {
        if (hasVendor()) {
          setVendorBuilder(com.fretron.Model.BuisnessPartner.newBuilder(vendor));
        } else {
          setVendorBuilder(com.fretron.Model.BuisnessPartner.newBuilder());
        }
      }
      return vendorBuilder;
    }

    /**
     * Sets the Builder instance for the 'vendor' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FreightPurchaseOrder.Builder setVendorBuilder(com.fretron.Model.BuisnessPartner.Builder value) {
      clearVendor();
      vendorBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'vendor' field has an active Builder instance
     * @return True if the 'vendor' field has an active Builder instance
     */
    public boolean hasVendorBuilder() {
      return vendorBuilder != null;
    }

    /**
      * Clears the value of the 'vendor' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearVendor() {
      vendor = null;
      vendorBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderType' field.
      * @return The value.
      */
    public java.lang.String getOrderType() {
      return orderType;
    }

    /**
      * Sets the value of the 'orderType' field.
      * @param value The value of 'orderType'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setOrderType(java.lang.String value) {
      validate(fields()[6], value);
      this.orderType = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'orderType' field has been set.
      * @return True if the 'orderType' field has been set, false otherwise.
      */
    public boolean hasOrderType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'orderType' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearOrderType() {
      orderType = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setStatus(java.lang.String value) {
      validate(fields()[7], value);
      this.status = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearStatus() {
      status = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'placementDate' field.
      * @return The value.
      */
    public java.lang.Long getPlacementDate() {
      return placementDate;
    }

    /**
      * Sets the value of the 'placementDate' field.
      * @param value The value of 'placementDate'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setPlacementDate(java.lang.Long value) {
      validate(fields()[8], value);
      this.placementDate = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'placementDate' field has been set.
      * @return True if the 'placementDate' field has been set, false otherwise.
      */
    public boolean hasPlacementDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'placementDate' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearPlacementDate() {
      placementDate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'origin' field.
      * @return The value.
      */
    public com.fretron.Model.Place getOrigin() {
      return origin;
    }

    /**
      * Sets the value of the 'origin' field.
      * @param value The value of 'origin'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setOrigin(com.fretron.Model.Place value) {
      validate(fields()[9], value);
      this.originBuilder = null;
      this.origin = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'origin' field has been set.
      * @return True if the 'origin' field has been set, false otherwise.
      */
    public boolean hasOrigin() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'origin' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Place.Builder getOriginBuilder() {
      if (originBuilder == null) {
        if (hasOrigin()) {
          setOriginBuilder(com.fretron.Model.Place.newBuilder(origin));
        } else {
          setOriginBuilder(com.fretron.Model.Place.newBuilder());
        }
      }
      return originBuilder;
    }

    /**
     * Sets the Builder instance for the 'origin' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FreightPurchaseOrder.Builder setOriginBuilder(com.fretron.Model.Place.Builder value) {
      clearOrigin();
      originBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'origin' field has an active Builder instance
     * @return True if the 'origin' field has an active Builder instance
     */
    public boolean hasOriginBuilder() {
      return originBuilder != null;
    }

    /**
      * Clears the value of the 'origin' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearOrigin() {
      origin = null;
      originBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'destination' field.
      * @return The value.
      */
    public com.fretron.Model.Place getDestination() {
      return destination;
    }

    /**
      * Sets the value of the 'destination' field.
      * @param value The value of 'destination'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setDestination(com.fretron.Model.Place value) {
      validate(fields()[10], value);
      this.destinationBuilder = null;
      this.destination = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'destination' field has been set.
      * @return True if the 'destination' field has been set, false otherwise.
      */
    public boolean hasDestination() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'destination' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Place.Builder getDestinationBuilder() {
      if (destinationBuilder == null) {
        if (hasDestination()) {
          setDestinationBuilder(com.fretron.Model.Place.newBuilder(destination));
        } else {
          setDestinationBuilder(com.fretron.Model.Place.newBuilder());
        }
      }
      return destinationBuilder;
    }

    /**
     * Sets the Builder instance for the 'destination' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FreightPurchaseOrder.Builder setDestinationBuilder(com.fretron.Model.Place.Builder value) {
      clearDestination();
      destinationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'destination' field has an active Builder instance
     * @return True if the 'destination' field has an active Builder instance
     */
    public boolean hasDestinationBuilder() {
      return destinationBuilder != null;
    }

    /**
      * Clears the value of the 'destination' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearDestination() {
      destination = null;
      destinationBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'material' field.
      * @return The value.
      */
    public java.lang.String getMaterial() {
      return material;
    }

    /**
      * Sets the value of the 'material' field.
      * @param value The value of 'material'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setMaterial(java.lang.String value) {
      validate(fields()[11], value);
      this.material = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'material' field has been set.
      * @return True if the 'material' field has been set, false otherwise.
      */
    public boolean hasMaterial() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'material' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearMaterial() {
      material = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleType' field.
      * @return The value.
      */
    public java.lang.String getVehicleType() {
      return vehicleType;
    }

    /**
      * Sets the value of the 'vehicleType' field.
      * @param value The value of 'vehicleType'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setVehicleType(java.lang.String value) {
      validate(fields()[12], value);
      this.vehicleType = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleType' field has been set.
      * @return True if the 'vehicleType' field has been set, false otherwise.
      */
    public boolean hasVehicleType() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'vehicleType' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearVehicleType() {
      vehicleType = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'numberOfVehicles' field.
      * @return The value.
      */
    public java.lang.Integer getNumberOfVehicles() {
      return numberOfVehicles;
    }

    /**
      * Sets the value of the 'numberOfVehicles' field.
      * @param value The value of 'numberOfVehicles'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setNumberOfVehicles(java.lang.Integer value) {
      validate(fields()[13], value);
      this.numberOfVehicles = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'numberOfVehicles' field has been set.
      * @return True if the 'numberOfVehicles' field has been set, false otherwise.
      */
    public boolean hasNumberOfVehicles() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'numberOfVehicles' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearNumberOfVehicles() {
      numberOfVehicles = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'salesOrders' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getSalesOrders() {
      return salesOrders;
    }

    /**
      * Sets the value of the 'salesOrders' field.
      * @param value The value of 'salesOrders'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setSalesOrders(java.util.List<java.lang.String> value) {
      validate(fields()[14], value);
      this.salesOrders = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'salesOrders' field has been set.
      * @return True if the 'salesOrders' field has been set, false otherwise.
      */
    public boolean hasSalesOrders() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'salesOrders' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearSalesOrders() {
      salesOrders = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'updates' field.
      * @return The value.
      */
    public com.fretron.Model.Updates getUpdates() {
      return updates;
    }

    /**
      * Sets the value of the 'updates' field.
      * @param value The value of 'updates'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setUpdates(com.fretron.Model.Updates value) {
      validate(fields()[15], value);
      this.updatesBuilder = null;
      this.updates = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'updates' field has been set.
      * @return True if the 'updates' field has been set, false otherwise.
      */
    public boolean hasUpdates() {
      return fieldSetFlags()[15];
    }

    /**
     * Gets the Builder instance for the 'updates' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Updates.Builder getUpdatesBuilder() {
      if (updatesBuilder == null) {
        if (hasUpdates()) {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder(updates));
        } else {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder());
        }
      }
      return updatesBuilder;
    }

    /**
     * Sets the Builder instance for the 'updates' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FreightPurchaseOrder.Builder setUpdatesBuilder(com.fretron.Model.Updates.Builder value) {
      clearUpdates();
      updatesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'updates' field has an active Builder instance
     * @return True if the 'updates' field has an active Builder instance
     */
    public boolean hasUpdatesBuilder() {
      return updatesBuilder != null;
    }

    /**
      * Clears the value of the 'updates' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearUpdates() {
      updates = null;
      updatesBuilder = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'tnCs' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.ContractTerms> getTnCs() {
      return tnCs;
    }

    /**
      * Sets the value of the 'tnCs' field.
      * @param value The value of 'tnCs'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setTnCs(java.util.List<com.fretron.Model.ContractTerms> value) {
      validate(fields()[16], value);
      this.tnCs = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'tnCs' field has been set.
      * @return True if the 'tnCs' field has been set, false otherwise.
      */
    public boolean hasTnCs() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'tnCs' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearTnCs() {
      tnCs = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'lineItems' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.OrderLineItem> getLineItems() {
      return lineItems;
    }

    /**
      * Sets the value of the 'lineItems' field.
      * @param value The value of 'lineItems'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setLineItems(java.util.List<com.fretron.Model.OrderLineItem> value) {
      validate(fields()[17], value);
      this.lineItems = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'lineItems' field has been set.
      * @return True if the 'lineItems' field has been set, false otherwise.
      */
    public boolean hasLineItems() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'lineItems' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearLineItems() {
      lineItems = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'branch' field.
      * @return The value.
      */
    public com.fretron.Model.OrgOffice getBranch() {
      return branch;
    }

    /**
      * Sets the value of the 'branch' field.
      * @param value The value of 'branch'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setBranch(com.fretron.Model.OrgOffice value) {
      validate(fields()[18], value);
      this.branchBuilder = null;
      this.branch = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'branch' field has been set.
      * @return True if the 'branch' field has been set, false otherwise.
      */
    public boolean hasBranch() {
      return fieldSetFlags()[18];
    }

    /**
     * Gets the Builder instance for the 'branch' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.OrgOffice.Builder getBranchBuilder() {
      if (branchBuilder == null) {
        if (hasBranch()) {
          setBranchBuilder(com.fretron.Model.OrgOffice.newBuilder(branch));
        } else {
          setBranchBuilder(com.fretron.Model.OrgOffice.newBuilder());
        }
      }
      return branchBuilder;
    }

    /**
     * Sets the Builder instance for the 'branch' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FreightPurchaseOrder.Builder setBranchBuilder(com.fretron.Model.OrgOffice.Builder value) {
      clearBranch();
      branchBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'branch' field has an active Builder instance
     * @return True if the 'branch' field has an active Builder instance
     */
    public boolean hasBranchBuilder() {
      return branchBuilder != null;
    }

    /**
      * Clears the value of the 'branch' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearBranch() {
      branch = null;
      branchBuilder = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'route' field.
      * @return The value.
      */
    public java.lang.String getRoute() {
      return route;
    }

    /**
      * Sets the value of the 'route' field.
      * @param value The value of 'route'.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder setRoute(java.lang.String value) {
      validate(fields()[19], value);
      this.route = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'route' field has been set.
      * @return True if the 'route' field has been set, false otherwise.
      */
    public boolean hasRoute() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'route' field.
      * @return This builder.
      */
    public com.fretron.Model.FreightPurchaseOrder.Builder clearRoute() {
      route = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    public FreightPurchaseOrder build() {
      try {
        FreightPurchaseOrder record = new FreightPurchaseOrder();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.externalId = fieldSetFlags()[1] ? this.externalId : (java.lang.String) defaultValue(fields()[1]);
        record.orgId = fieldSetFlags()[2] ? this.orgId : (java.lang.String) defaultValue(fields()[2]);
        record.orderNumber = fieldSetFlags()[3] ? this.orderNumber : (java.lang.String) defaultValue(fields()[3]);
        record.orderDate = fieldSetFlags()[4] ? this.orderDate : (java.lang.Long) defaultValue(fields()[4]);
        if (vendorBuilder != null) {
          record.vendor = this.vendorBuilder.build();
        } else {
          record.vendor = fieldSetFlags()[5] ? this.vendor : (com.fretron.Model.BuisnessPartner) defaultValue(fields()[5]);
        }
        record.orderType = fieldSetFlags()[6] ? this.orderType : (java.lang.String) defaultValue(fields()[6]);
        record.status = fieldSetFlags()[7] ? this.status : (java.lang.String) defaultValue(fields()[7]);
        record.placementDate = fieldSetFlags()[8] ? this.placementDate : (java.lang.Long) defaultValue(fields()[8]);
        if (originBuilder != null) {
          record.origin = this.originBuilder.build();
        } else {
          record.origin = fieldSetFlags()[9] ? this.origin : (com.fretron.Model.Place) defaultValue(fields()[9]);
        }
        if (destinationBuilder != null) {
          record.destination = this.destinationBuilder.build();
        } else {
          record.destination = fieldSetFlags()[10] ? this.destination : (com.fretron.Model.Place) defaultValue(fields()[10]);
        }
        record.material = fieldSetFlags()[11] ? this.material : (java.lang.String) defaultValue(fields()[11]);
        record.vehicleType = fieldSetFlags()[12] ? this.vehicleType : (java.lang.String) defaultValue(fields()[12]);
        record.numberOfVehicles = fieldSetFlags()[13] ? this.numberOfVehicles : (java.lang.Integer) defaultValue(fields()[13]);
        record.salesOrders = fieldSetFlags()[14] ? this.salesOrders : (java.util.List<java.lang.String>) defaultValue(fields()[14]);
        if (updatesBuilder != null) {
          record.updates = this.updatesBuilder.build();
        } else {
          record.updates = fieldSetFlags()[15] ? this.updates : (com.fretron.Model.Updates) defaultValue(fields()[15]);
        }
        record.tnCs = fieldSetFlags()[16] ? this.tnCs : (java.util.List<com.fretron.Model.ContractTerms>) defaultValue(fields()[16]);
        record.lineItems = fieldSetFlags()[17] ? this.lineItems : (java.util.List<com.fretron.Model.OrderLineItem>) defaultValue(fields()[17]);
        if (branchBuilder != null) {
          record.branch = this.branchBuilder.build();
        } else {
          record.branch = fieldSetFlags()[18] ? this.branch : (com.fretron.Model.OrgOffice) defaultValue(fields()[18]);
        }
        record.route = fieldSetFlags()[19] ? this.route : (java.lang.String) defaultValue(fields()[19]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

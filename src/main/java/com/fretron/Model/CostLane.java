/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CostLane extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5442444191321955190L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CostLane\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"contractId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerLaneId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"consignor\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BuisnessPartner\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fretronId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"geoFence\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoJsonFence\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Properties\",\"fields\":[{\"name\":\"catagory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"level\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customeFields\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hubId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"district\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subDistrict\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isOwned\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"geometry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geometry\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"coordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null}]}],\"default\":null},{\"name\":\"metadata\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MetaData\",\"fields\":[{\"name\":\"clazz\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isFavorite\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"places\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Place\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"center\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"centerCoordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"suggestedRadius\",\"type\":\"double\",\"default\":null},{\"name\":\"viewport\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ViewPort\",\"fields\":[{\"name\":\"northeast\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"southwest\",\"type\":[\"null\",\"Location\"],\"default\":null}]}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hubId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"district\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subDistrict\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"boundary\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null},{\"name\":\"places\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Place\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isOwned\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"geoJsonBoundry\",\"type\":[\"null\",\"Geometry\"],\"default\":null},{\"name\":\"controllingBranchId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"contacts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Contact\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"emails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"mobileNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isPortalEnabled\",\"type\":\"boolean\",\"default\":false},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Updates\",\"fields\":[{\"name\":\"forwardReasons\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfInformation\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updateType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"forwardedFrom\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"revision\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"traceID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"changes\",\"type\":[\"null\",{\"type\":\"array\",","\"items\":{\"type\":\"record\",\"name\":\"ChangeUpdate\",\"fields\":[{\"name\":\"currentValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null}]}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"panNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"group\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PartnerGroup\",\"fields\":[{\"name\":\"partnerType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"route\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"customFields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CustomFields\",\"fields\":[{\"name\":\"fieldType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldKey\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"multiple\",\"type\":\"boolean\",\"default\":false},{\"name\":\"isRemark\",\"type\":\"boolean\",\"default\":false},{\"name\":\"remark\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"required\",\"type\":\"boolean\",\"default\":false},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"options\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"indexedValue\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"valueType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"input\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"unit\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accessType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"parentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"gstn\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"aadharNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"voterId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"documents\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Document\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"isExpirable\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"expireDate\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"docPath\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"downloadUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"previewString\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customFields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LiteCustomFields\",\"fields\":[{\"name\":\"fieldType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldKey\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"indexedValue\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"valueType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"definitionId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"createdAt\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"createdBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",\"Updates\"],\"default\":null}]}}],\"default\":null},{\"name\":\"verificationStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"firmType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"verificationTicketId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"consignee\",\"type\":[\"null\",\"BuisnessPartner\"],\"default\":null},{\"name\":\"origin\",\"type\":[\"null\",\"Place\"],\"default\":null},{\"name\":\"destination\",\"type\":[\"null\",\"Place\"],\"default\":null},{\"name\":\"loadType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LoadType\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"partnerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"partnerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"partnerExternalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleCategory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"numberOfWheels\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"passingCapacityMT\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"passingCapacityCFT\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"bodyType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"chassisType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dimensionString\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"minLength\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"includeMinLength\",\"type\":\"boolean\",\"default\":false},{\"name\":\"maxLength\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"includeMaxLength\",\"type\":\"boolean\",\"default\":false},{\"name\":\"minHeight\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"includeMinHeight\",\"type\":\"boolean\",\"default\":false},{\"name\":\"maxHeight\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"includeMaxHeight\",\"type\":\"boolean\",\"default\":false},{\"name\":\"bodyTypes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"chassisTypes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",\"Updates\"],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleCategories\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}],\"default\":null},{\"name\":\"freightUOM\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"freightRate\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"sharePercentage\",\"type\":[\"","null\",\"double\"],\"default\":null},{\"name\":\"quantityPeriod\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"totalQuantity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"StandardMeasurement\",\"fields\":[{\"name\":\"weight\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Measurement\",\"fields\":[{\"name\":\"measurmentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"unitOfMeasurment\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"plannedLoadQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"actualLoadedQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"netQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"grossQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"standardQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"actualDeliveredQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"shortage\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"frieghtDeductableQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"claimQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"temperature\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"density\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"moisture\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"volume\",\"type\":[\"null\",\"Measurement\"],\"default\":null},{\"name\":\"packageMeasurement\",\"type\":[\"null\",\"Measurement\"],\"default\":null},{\"name\":\"trucks\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"containers\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"periodicQuantity\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PeriodicQuantity\",\"fields\":[{\"name\":\"from\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"till\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"quantity\",\"type\":[\"null\",\"StandardMeasurement\"],\"default\":null}]}}],\"default\":null},{\"name\":\"sourceOfVehicle\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"movementCategory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String contractId;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.String customerLaneId;
  @Deprecated public com.fretron.Model.BuisnessPartner consignor;
  @Deprecated public com.fretron.Model.BuisnessPartner consignee;
  @Deprecated public com.fretron.Model.Place origin;
  @Deprecated public com.fretron.Model.Place destination;
  @Deprecated public com.fretron.Model.LoadType loadType;
  @Deprecated public java.lang.String freightUOM;
  @Deprecated public java.lang.Double freightRate;
  @Deprecated public java.lang.Double sharePercentage;
  @Deprecated public java.lang.String quantityPeriod;
  @Deprecated public com.fretron.Model.StandardMeasurement totalQuantity;
  @Deprecated public java.util.List<com.fretron.Model.PeriodicQuantity> periodicQuantity;
  @Deprecated public java.lang.String sourceOfVehicle;
  @Deprecated public java.lang.String movementCategory;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CostLane() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param contractId The new value for contractId
   * @param orgId The new value for orgId
   * @param customerLaneId The new value for customerLaneId
   * @param consignor The new value for consignor
   * @param consignee The new value for consignee
   * @param origin The new value for origin
   * @param destination The new value for destination
   * @param loadType The new value for loadType
   * @param freightUOM The new value for freightUOM
   * @param freightRate The new value for freightRate
   * @param sharePercentage The new value for sharePercentage
   * @param quantityPeriod The new value for quantityPeriod
   * @param totalQuantity The new value for totalQuantity
   * @param periodicQuantity The new value for periodicQuantity
   * @param sourceOfVehicle The new value for sourceOfVehicle
   * @param movementCategory The new value for movementCategory
   */
  public CostLane(java.lang.String uuid, java.lang.String contractId, java.lang.String orgId, java.lang.String customerLaneId, com.fretron.Model.BuisnessPartner consignor, com.fretron.Model.BuisnessPartner consignee, com.fretron.Model.Place origin, com.fretron.Model.Place destination, com.fretron.Model.LoadType loadType, java.lang.String freightUOM, java.lang.Double freightRate, java.lang.Double sharePercentage, java.lang.String quantityPeriod, com.fretron.Model.StandardMeasurement totalQuantity, java.util.List<com.fretron.Model.PeriodicQuantity> periodicQuantity, java.lang.String sourceOfVehicle, java.lang.String movementCategory) {
    this.uuid = uuid;
    this.contractId = contractId;
    this.orgId = orgId;
    this.customerLaneId = customerLaneId;
    this.consignor = consignor;
    this.consignee = consignee;
    this.origin = origin;
    this.destination = destination;
    this.loadType = loadType;
    this.freightUOM = freightUOM;
    this.freightRate = freightRate;
    this.sharePercentage = sharePercentage;
    this.quantityPeriod = quantityPeriod;
    this.totalQuantity = totalQuantity;
    this.periodicQuantity = periodicQuantity;
    this.sourceOfVehicle = sourceOfVehicle;
    this.movementCategory = movementCategory;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return contractId;
    case 2: return orgId;
    case 3: return customerLaneId;
    case 4: return consignor;
    case 5: return consignee;
    case 6: return origin;
    case 7: return destination;
    case 8: return loadType;
    case 9: return freightUOM;
    case 10: return freightRate;
    case 11: return sharePercentage;
    case 12: return quantityPeriod;
    case 13: return totalQuantity;
    case 14: return periodicQuantity;
    case 15: return sourceOfVehicle;
    case 16: return movementCategory;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: contractId = (java.lang.String)value$; break;
    case 2: orgId = (java.lang.String)value$; break;
    case 3: customerLaneId = (java.lang.String)value$; break;
    case 4: consignor = (com.fretron.Model.BuisnessPartner)value$; break;
    case 5: consignee = (com.fretron.Model.BuisnessPartner)value$; break;
    case 6: origin = (com.fretron.Model.Place)value$; break;
    case 7: destination = (com.fretron.Model.Place)value$; break;
    case 8: loadType = (com.fretron.Model.LoadType)value$; break;
    case 9: freightUOM = (java.lang.String)value$; break;
    case 10: freightRate = (java.lang.Double)value$; break;
    case 11: sharePercentage = (java.lang.Double)value$; break;
    case 12: quantityPeriod = (java.lang.String)value$; break;
    case 13: totalQuantity = (com.fretron.Model.StandardMeasurement)value$; break;
    case 14: periodicQuantity = (java.util.List<com.fretron.Model.PeriodicQuantity>)value$; break;
    case 15: sourceOfVehicle = (java.lang.String)value$; break;
    case 16: movementCategory = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'contractId' field.
   * @return The value of the 'contractId' field.
   */
  public java.lang.String getContractId() {
    return contractId;
  }

  /**
   * Sets the value of the 'contractId' field.
   * @param value the value to set.
   */
  public void setContractId(java.lang.String value) {
    this.contractId = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'customerLaneId' field.
   * @return The value of the 'customerLaneId' field.
   */
  public java.lang.String getCustomerLaneId() {
    return customerLaneId;
  }

  /**
   * Sets the value of the 'customerLaneId' field.
   * @param value the value to set.
   */
  public void setCustomerLaneId(java.lang.String value) {
    this.customerLaneId = value;
  }

  /**
   * Gets the value of the 'consignor' field.
   * @return The value of the 'consignor' field.
   */
  public com.fretron.Model.BuisnessPartner getConsignor() {
    return consignor;
  }

  /**
   * Sets the value of the 'consignor' field.
   * @param value the value to set.
   */
  public void setConsignor(com.fretron.Model.BuisnessPartner value) {
    this.consignor = value;
  }

  /**
   * Gets the value of the 'consignee' field.
   * @return The value of the 'consignee' field.
   */
  public com.fretron.Model.BuisnessPartner getConsignee() {
    return consignee;
  }

  /**
   * Sets the value of the 'consignee' field.
   * @param value the value to set.
   */
  public void setConsignee(com.fretron.Model.BuisnessPartner value) {
    this.consignee = value;
  }

  /**
   * Gets the value of the 'origin' field.
   * @return The value of the 'origin' field.
   */
  public com.fretron.Model.Place getOrigin() {
    return origin;
  }

  /**
   * Sets the value of the 'origin' field.
   * @param value the value to set.
   */
  public void setOrigin(com.fretron.Model.Place value) {
    this.origin = value;
  }

  /**
   * Gets the value of the 'destination' field.
   * @return The value of the 'destination' field.
   */
  public com.fretron.Model.Place getDestination() {
    return destination;
  }

  /**
   * Sets the value of the 'destination' field.
   * @param value the value to set.
   */
  public void setDestination(com.fretron.Model.Place value) {
    this.destination = value;
  }

  /**
   * Gets the value of the 'loadType' field.
   * @return The value of the 'loadType' field.
   */
  public com.fretron.Model.LoadType getLoadType() {
    return loadType;
  }

  /**
   * Sets the value of the 'loadType' field.
   * @param value the value to set.
   */
  public void setLoadType(com.fretron.Model.LoadType value) {
    this.loadType = value;
  }

  /**
   * Gets the value of the 'freightUOM' field.
   * @return The value of the 'freightUOM' field.
   */
  public java.lang.String getFreightUOM() {
    return freightUOM;
  }

  /**
   * Sets the value of the 'freightUOM' field.
   * @param value the value to set.
   */
  public void setFreightUOM(java.lang.String value) {
    this.freightUOM = value;
  }

  /**
   * Gets the value of the 'freightRate' field.
   * @return The value of the 'freightRate' field.
   */
  public java.lang.Double getFreightRate() {
    return freightRate;
  }

  /**
   * Sets the value of the 'freightRate' field.
   * @param value the value to set.
   */
  public void setFreightRate(java.lang.Double value) {
    this.freightRate = value;
  }

  /**
   * Gets the value of the 'sharePercentage' field.
   * @return The value of the 'sharePercentage' field.
   */
  public java.lang.Double getSharePercentage() {
    return sharePercentage;
  }

  /**
   * Sets the value of the 'sharePercentage' field.
   * @param value the value to set.
   */
  public void setSharePercentage(java.lang.Double value) {
    this.sharePercentage = value;
  }

  /**
   * Gets the value of the 'quantityPeriod' field.
   * @return The value of the 'quantityPeriod' field.
   */
  public java.lang.String getQuantityPeriod() {
    return quantityPeriod;
  }

  /**
   * Sets the value of the 'quantityPeriod' field.
   * @param value the value to set.
   */
  public void setQuantityPeriod(java.lang.String value) {
    this.quantityPeriod = value;
  }

  /**
   * Gets the value of the 'totalQuantity' field.
   * @return The value of the 'totalQuantity' field.
   */
  public com.fretron.Model.StandardMeasurement getTotalQuantity() {
    return totalQuantity;
  }

  /**
   * Sets the value of the 'totalQuantity' field.
   * @param value the value to set.
   */
  public void setTotalQuantity(com.fretron.Model.StandardMeasurement value) {
    this.totalQuantity = value;
  }

  /**
   * Gets the value of the 'periodicQuantity' field.
   * @return The value of the 'periodicQuantity' field.
   */
  public java.util.List<com.fretron.Model.PeriodicQuantity> getPeriodicQuantity() {
    return periodicQuantity;
  }

  /**
   * Sets the value of the 'periodicQuantity' field.
   * @param value the value to set.
   */
  public void setPeriodicQuantity(java.util.List<com.fretron.Model.PeriodicQuantity> value) {
    this.periodicQuantity = value;
  }

  /**
   * Gets the value of the 'sourceOfVehicle' field.
   * @return The value of the 'sourceOfVehicle' field.
   */
  public java.lang.String getSourceOfVehicle() {
    return sourceOfVehicle;
  }

  /**
   * Sets the value of the 'sourceOfVehicle' field.
   * @param value the value to set.
   */
  public void setSourceOfVehicle(java.lang.String value) {
    this.sourceOfVehicle = value;
  }

  /**
   * Gets the value of the 'movementCategory' field.
   * @return The value of the 'movementCategory' field.
   */
  public java.lang.String getMovementCategory() {
    return movementCategory;
  }

  /**
   * Sets the value of the 'movementCategory' field.
   * @param value the value to set.
   */
  public void setMovementCategory(java.lang.String value) {
    this.movementCategory = value;
  }

  /**
   * Creates a new CostLane RecordBuilder.
   * @return A new CostLane RecordBuilder
   */
  public static com.fretron.Model.CostLane.Builder newBuilder() {
    return new com.fretron.Model.CostLane.Builder();
  }

  /**
   * Creates a new CostLane RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CostLane RecordBuilder
   */
  public static com.fretron.Model.CostLane.Builder newBuilder(com.fretron.Model.CostLane.Builder other) {
    return new com.fretron.Model.CostLane.Builder(other);
  }

  /**
   * Creates a new CostLane RecordBuilder by copying an existing CostLane instance.
   * @param other The existing instance to copy.
   * @return A new CostLane RecordBuilder
   */
  public static com.fretron.Model.CostLane.Builder newBuilder(com.fretron.Model.CostLane other) {
    return new com.fretron.Model.CostLane.Builder(other);
  }

  /**
   * RecordBuilder for CostLane instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CostLane>
    implements org.apache.avro.data.RecordBuilder<CostLane> {

    private java.lang.String uuid;
    private java.lang.String contractId;
    private java.lang.String orgId;
    private java.lang.String customerLaneId;
    private com.fretron.Model.BuisnessPartner consignor;
    private com.fretron.Model.BuisnessPartner.Builder consignorBuilder;
    private com.fretron.Model.BuisnessPartner consignee;
    private com.fretron.Model.BuisnessPartner.Builder consigneeBuilder;
    private com.fretron.Model.Place origin;
    private com.fretron.Model.Place.Builder originBuilder;
    private com.fretron.Model.Place destination;
    private com.fretron.Model.Place.Builder destinationBuilder;
    private com.fretron.Model.LoadType loadType;
    private com.fretron.Model.LoadType.Builder loadTypeBuilder;
    private java.lang.String freightUOM;
    private java.lang.Double freightRate;
    private java.lang.Double sharePercentage;
    private java.lang.String quantityPeriod;
    private com.fretron.Model.StandardMeasurement totalQuantity;
    private com.fretron.Model.StandardMeasurement.Builder totalQuantityBuilder;
    private java.util.List<com.fretron.Model.PeriodicQuantity> periodicQuantity;
    private java.lang.String sourceOfVehicle;
    private java.lang.String movementCategory;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.CostLane.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.contractId)) {
        this.contractId = data().deepCopy(fields()[1].schema(), other.contractId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.customerLaneId)) {
        this.customerLaneId = data().deepCopy(fields()[3].schema(), other.customerLaneId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.consignor)) {
        this.consignor = data().deepCopy(fields()[4].schema(), other.consignor);
        fieldSetFlags()[4] = true;
      }
      if (other.hasConsignorBuilder()) {
        this.consignorBuilder = com.fretron.Model.BuisnessPartner.newBuilder(other.getConsignorBuilder());
      }
      if (isValidValue(fields()[5], other.consignee)) {
        this.consignee = data().deepCopy(fields()[5].schema(), other.consignee);
        fieldSetFlags()[5] = true;
      }
      if (other.hasConsigneeBuilder()) {
        this.consigneeBuilder = com.fretron.Model.BuisnessPartner.newBuilder(other.getConsigneeBuilder());
      }
      if (isValidValue(fields()[6], other.origin)) {
        this.origin = data().deepCopy(fields()[6].schema(), other.origin);
        fieldSetFlags()[6] = true;
      }
      if (other.hasOriginBuilder()) {
        this.originBuilder = com.fretron.Model.Place.newBuilder(other.getOriginBuilder());
      }
      if (isValidValue(fields()[7], other.destination)) {
        this.destination = data().deepCopy(fields()[7].schema(), other.destination);
        fieldSetFlags()[7] = true;
      }
      if (other.hasDestinationBuilder()) {
        this.destinationBuilder = com.fretron.Model.Place.newBuilder(other.getDestinationBuilder());
      }
      if (isValidValue(fields()[8], other.loadType)) {
        this.loadType = data().deepCopy(fields()[8].schema(), other.loadType);
        fieldSetFlags()[8] = true;
      }
      if (other.hasLoadTypeBuilder()) {
        this.loadTypeBuilder = com.fretron.Model.LoadType.newBuilder(other.getLoadTypeBuilder());
      }
      if (isValidValue(fields()[9], other.freightUOM)) {
        this.freightUOM = data().deepCopy(fields()[9].schema(), other.freightUOM);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.freightRate)) {
        this.freightRate = data().deepCopy(fields()[10].schema(), other.freightRate);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.sharePercentage)) {
        this.sharePercentage = data().deepCopy(fields()[11].schema(), other.sharePercentage);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.quantityPeriod)) {
        this.quantityPeriod = data().deepCopy(fields()[12].schema(), other.quantityPeriod);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.totalQuantity)) {
        this.totalQuantity = data().deepCopy(fields()[13].schema(), other.totalQuantity);
        fieldSetFlags()[13] = true;
      }
      if (other.hasTotalQuantityBuilder()) {
        this.totalQuantityBuilder = com.fretron.Model.StandardMeasurement.newBuilder(other.getTotalQuantityBuilder());
      }
      if (isValidValue(fields()[14], other.periodicQuantity)) {
        this.periodicQuantity = data().deepCopy(fields()[14].schema(), other.periodicQuantity);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.sourceOfVehicle)) {
        this.sourceOfVehicle = data().deepCopy(fields()[15].schema(), other.sourceOfVehicle);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.movementCategory)) {
        this.movementCategory = data().deepCopy(fields()[16].schema(), other.movementCategory);
        fieldSetFlags()[16] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CostLane instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.CostLane other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.contractId)) {
        this.contractId = data().deepCopy(fields()[1].schema(), other.contractId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.customerLaneId)) {
        this.customerLaneId = data().deepCopy(fields()[3].schema(), other.customerLaneId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.consignor)) {
        this.consignor = data().deepCopy(fields()[4].schema(), other.consignor);
        fieldSetFlags()[4] = true;
      }
      this.consignorBuilder = null;
      if (isValidValue(fields()[5], other.consignee)) {
        this.consignee = data().deepCopy(fields()[5].schema(), other.consignee);
        fieldSetFlags()[5] = true;
      }
      this.consigneeBuilder = null;
      if (isValidValue(fields()[6], other.origin)) {
        this.origin = data().deepCopy(fields()[6].schema(), other.origin);
        fieldSetFlags()[6] = true;
      }
      this.originBuilder = null;
      if (isValidValue(fields()[7], other.destination)) {
        this.destination = data().deepCopy(fields()[7].schema(), other.destination);
        fieldSetFlags()[7] = true;
      }
      this.destinationBuilder = null;
      if (isValidValue(fields()[8], other.loadType)) {
        this.loadType = data().deepCopy(fields()[8].schema(), other.loadType);
        fieldSetFlags()[8] = true;
      }
      this.loadTypeBuilder = null;
      if (isValidValue(fields()[9], other.freightUOM)) {
        this.freightUOM = data().deepCopy(fields()[9].schema(), other.freightUOM);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.freightRate)) {
        this.freightRate = data().deepCopy(fields()[10].schema(), other.freightRate);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.sharePercentage)) {
        this.sharePercentage = data().deepCopy(fields()[11].schema(), other.sharePercentage);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.quantityPeriod)) {
        this.quantityPeriod = data().deepCopy(fields()[12].schema(), other.quantityPeriod);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.totalQuantity)) {
        this.totalQuantity = data().deepCopy(fields()[13].schema(), other.totalQuantity);
        fieldSetFlags()[13] = true;
      }
      this.totalQuantityBuilder = null;
      if (isValidValue(fields()[14], other.periodicQuantity)) {
        this.periodicQuantity = data().deepCopy(fields()[14].schema(), other.periodicQuantity);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.sourceOfVehicle)) {
        this.sourceOfVehicle = data().deepCopy(fields()[15].schema(), other.sourceOfVehicle);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.movementCategory)) {
        this.movementCategory = data().deepCopy(fields()[16].schema(), other.movementCategory);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'contractId' field.
      * @return The value.
      */
    public java.lang.String getContractId() {
      return contractId;
    }

    /**
      * Sets the value of the 'contractId' field.
      * @param value The value of 'contractId'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setContractId(java.lang.String value) {
      validate(fields()[1], value);
      this.contractId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'contractId' field has been set.
      * @return True if the 'contractId' field has been set, false otherwise.
      */
    public boolean hasContractId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'contractId' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearContractId() {
      contractId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setOrgId(java.lang.String value) {
      validate(fields()[2], value);
      this.orgId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerLaneId' field.
      * @return The value.
      */
    public java.lang.String getCustomerLaneId() {
      return customerLaneId;
    }

    /**
      * Sets the value of the 'customerLaneId' field.
      * @param value The value of 'customerLaneId'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setCustomerLaneId(java.lang.String value) {
      validate(fields()[3], value);
      this.customerLaneId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'customerLaneId' field has been set.
      * @return True if the 'customerLaneId' field has been set, false otherwise.
      */
    public boolean hasCustomerLaneId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'customerLaneId' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearCustomerLaneId() {
      customerLaneId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'consignor' field.
      * @return The value.
      */
    public com.fretron.Model.BuisnessPartner getConsignor() {
      return consignor;
    }

    /**
      * Sets the value of the 'consignor' field.
      * @param value The value of 'consignor'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setConsignor(com.fretron.Model.BuisnessPartner value) {
      validate(fields()[4], value);
      this.consignorBuilder = null;
      this.consignor = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'consignor' field has been set.
      * @return True if the 'consignor' field has been set, false otherwise.
      */
    public boolean hasConsignor() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'consignor' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.BuisnessPartner.Builder getConsignorBuilder() {
      if (consignorBuilder == null) {
        if (hasConsignor()) {
          setConsignorBuilder(com.fretron.Model.BuisnessPartner.newBuilder(consignor));
        } else {
          setConsignorBuilder(com.fretron.Model.BuisnessPartner.newBuilder());
        }
      }
      return consignorBuilder;
    }

    /**
     * Sets the Builder instance for the 'consignor' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.CostLane.Builder setConsignorBuilder(com.fretron.Model.BuisnessPartner.Builder value) {
      clearConsignor();
      consignorBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'consignor' field has an active Builder instance
     * @return True if the 'consignor' field has an active Builder instance
     */
    public boolean hasConsignorBuilder() {
      return consignorBuilder != null;
    }

    /**
      * Clears the value of the 'consignor' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearConsignor() {
      consignor = null;
      consignorBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'consignee' field.
      * @return The value.
      */
    public com.fretron.Model.BuisnessPartner getConsignee() {
      return consignee;
    }

    /**
      * Sets the value of the 'consignee' field.
      * @param value The value of 'consignee'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setConsignee(com.fretron.Model.BuisnessPartner value) {
      validate(fields()[5], value);
      this.consigneeBuilder = null;
      this.consignee = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'consignee' field has been set.
      * @return True if the 'consignee' field has been set, false otherwise.
      */
    public boolean hasConsignee() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'consignee' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.BuisnessPartner.Builder getConsigneeBuilder() {
      if (consigneeBuilder == null) {
        if (hasConsignee()) {
          setConsigneeBuilder(com.fretron.Model.BuisnessPartner.newBuilder(consignee));
        } else {
          setConsigneeBuilder(com.fretron.Model.BuisnessPartner.newBuilder());
        }
      }
      return consigneeBuilder;
    }

    /**
     * Sets the Builder instance for the 'consignee' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.CostLane.Builder setConsigneeBuilder(com.fretron.Model.BuisnessPartner.Builder value) {
      clearConsignee();
      consigneeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'consignee' field has an active Builder instance
     * @return True if the 'consignee' field has an active Builder instance
     */
    public boolean hasConsigneeBuilder() {
      return consigneeBuilder != null;
    }

    /**
      * Clears the value of the 'consignee' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearConsignee() {
      consignee = null;
      consigneeBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'origin' field.
      * @return The value.
      */
    public com.fretron.Model.Place getOrigin() {
      return origin;
    }

    /**
      * Sets the value of the 'origin' field.
      * @param value The value of 'origin'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setOrigin(com.fretron.Model.Place value) {
      validate(fields()[6], value);
      this.originBuilder = null;
      this.origin = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'origin' field has been set.
      * @return True if the 'origin' field has been set, false otherwise.
      */
    public boolean hasOrigin() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'origin' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Place.Builder getOriginBuilder() {
      if (originBuilder == null) {
        if (hasOrigin()) {
          setOriginBuilder(com.fretron.Model.Place.newBuilder(origin));
        } else {
          setOriginBuilder(com.fretron.Model.Place.newBuilder());
        }
      }
      return originBuilder;
    }

    /**
     * Sets the Builder instance for the 'origin' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.CostLane.Builder setOriginBuilder(com.fretron.Model.Place.Builder value) {
      clearOrigin();
      originBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'origin' field has an active Builder instance
     * @return True if the 'origin' field has an active Builder instance
     */
    public boolean hasOriginBuilder() {
      return originBuilder != null;
    }

    /**
      * Clears the value of the 'origin' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearOrigin() {
      origin = null;
      originBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'destination' field.
      * @return The value.
      */
    public com.fretron.Model.Place getDestination() {
      return destination;
    }

    /**
      * Sets the value of the 'destination' field.
      * @param value The value of 'destination'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setDestination(com.fretron.Model.Place value) {
      validate(fields()[7], value);
      this.destinationBuilder = null;
      this.destination = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'destination' field has been set.
      * @return True if the 'destination' field has been set, false otherwise.
      */
    public boolean hasDestination() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'destination' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Place.Builder getDestinationBuilder() {
      if (destinationBuilder == null) {
        if (hasDestination()) {
          setDestinationBuilder(com.fretron.Model.Place.newBuilder(destination));
        } else {
          setDestinationBuilder(com.fretron.Model.Place.newBuilder());
        }
      }
      return destinationBuilder;
    }

    /**
     * Sets the Builder instance for the 'destination' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.CostLane.Builder setDestinationBuilder(com.fretron.Model.Place.Builder value) {
      clearDestination();
      destinationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'destination' field has an active Builder instance
     * @return True if the 'destination' field has an active Builder instance
     */
    public boolean hasDestinationBuilder() {
      return destinationBuilder != null;
    }

    /**
      * Clears the value of the 'destination' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearDestination() {
      destination = null;
      destinationBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'loadType' field.
      * @return The value.
      */
    public com.fretron.Model.LoadType getLoadType() {
      return loadType;
    }

    /**
      * Sets the value of the 'loadType' field.
      * @param value The value of 'loadType'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setLoadType(com.fretron.Model.LoadType value) {
      validate(fields()[8], value);
      this.loadTypeBuilder = null;
      this.loadType = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'loadType' field has been set.
      * @return True if the 'loadType' field has been set, false otherwise.
      */
    public boolean hasLoadType() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'loadType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.LoadType.Builder getLoadTypeBuilder() {
      if (loadTypeBuilder == null) {
        if (hasLoadType()) {
          setLoadTypeBuilder(com.fretron.Model.LoadType.newBuilder(loadType));
        } else {
          setLoadTypeBuilder(com.fretron.Model.LoadType.newBuilder());
        }
      }
      return loadTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'loadType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.CostLane.Builder setLoadTypeBuilder(com.fretron.Model.LoadType.Builder value) {
      clearLoadType();
      loadTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'loadType' field has an active Builder instance
     * @return True if the 'loadType' field has an active Builder instance
     */
    public boolean hasLoadTypeBuilder() {
      return loadTypeBuilder != null;
    }

    /**
      * Clears the value of the 'loadType' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearLoadType() {
      loadType = null;
      loadTypeBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'freightUOM' field.
      * @return The value.
      */
    public java.lang.String getFreightUOM() {
      return freightUOM;
    }

    /**
      * Sets the value of the 'freightUOM' field.
      * @param value The value of 'freightUOM'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setFreightUOM(java.lang.String value) {
      validate(fields()[9], value);
      this.freightUOM = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'freightUOM' field has been set.
      * @return True if the 'freightUOM' field has been set, false otherwise.
      */
    public boolean hasFreightUOM() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'freightUOM' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearFreightUOM() {
      freightUOM = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'freightRate' field.
      * @return The value.
      */
    public java.lang.Double getFreightRate() {
      return freightRate;
    }

    /**
      * Sets the value of the 'freightRate' field.
      * @param value The value of 'freightRate'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setFreightRate(java.lang.Double value) {
      validate(fields()[10], value);
      this.freightRate = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'freightRate' field has been set.
      * @return True if the 'freightRate' field has been set, false otherwise.
      */
    public boolean hasFreightRate() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'freightRate' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearFreightRate() {
      freightRate = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'sharePercentage' field.
      * @return The value.
      */
    public java.lang.Double getSharePercentage() {
      return sharePercentage;
    }

    /**
      * Sets the value of the 'sharePercentage' field.
      * @param value The value of 'sharePercentage'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setSharePercentage(java.lang.Double value) {
      validate(fields()[11], value);
      this.sharePercentage = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'sharePercentage' field has been set.
      * @return True if the 'sharePercentage' field has been set, false otherwise.
      */
    public boolean hasSharePercentage() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'sharePercentage' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearSharePercentage() {
      sharePercentage = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantityPeriod' field.
      * @return The value.
      */
    public java.lang.String getQuantityPeriod() {
      return quantityPeriod;
    }

    /**
      * Sets the value of the 'quantityPeriod' field.
      * @param value The value of 'quantityPeriod'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setQuantityPeriod(java.lang.String value) {
      validate(fields()[12], value);
      this.quantityPeriod = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'quantityPeriod' field has been set.
      * @return True if the 'quantityPeriod' field has been set, false otherwise.
      */
    public boolean hasQuantityPeriod() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'quantityPeriod' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearQuantityPeriod() {
      quantityPeriod = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalQuantity' field.
      * @return The value.
      */
    public com.fretron.Model.StandardMeasurement getTotalQuantity() {
      return totalQuantity;
    }

    /**
      * Sets the value of the 'totalQuantity' field.
      * @param value The value of 'totalQuantity'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setTotalQuantity(com.fretron.Model.StandardMeasurement value) {
      validate(fields()[13], value);
      this.totalQuantityBuilder = null;
      this.totalQuantity = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'totalQuantity' field has been set.
      * @return True if the 'totalQuantity' field has been set, false otherwise.
      */
    public boolean hasTotalQuantity() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'totalQuantity' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.StandardMeasurement.Builder getTotalQuantityBuilder() {
      if (totalQuantityBuilder == null) {
        if (hasTotalQuantity()) {
          setTotalQuantityBuilder(com.fretron.Model.StandardMeasurement.newBuilder(totalQuantity));
        } else {
          setTotalQuantityBuilder(com.fretron.Model.StandardMeasurement.newBuilder());
        }
      }
      return totalQuantityBuilder;
    }

    /**
     * Sets the Builder instance for the 'totalQuantity' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.CostLane.Builder setTotalQuantityBuilder(com.fretron.Model.StandardMeasurement.Builder value) {
      clearTotalQuantity();
      totalQuantityBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'totalQuantity' field has an active Builder instance
     * @return True if the 'totalQuantity' field has an active Builder instance
     */
    public boolean hasTotalQuantityBuilder() {
      return totalQuantityBuilder != null;
    }

    /**
      * Clears the value of the 'totalQuantity' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearTotalQuantity() {
      totalQuantity = null;
      totalQuantityBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'periodicQuantity' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.PeriodicQuantity> getPeriodicQuantity() {
      return periodicQuantity;
    }

    /**
      * Sets the value of the 'periodicQuantity' field.
      * @param value The value of 'periodicQuantity'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setPeriodicQuantity(java.util.List<com.fretron.Model.PeriodicQuantity> value) {
      validate(fields()[14], value);
      this.periodicQuantity = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'periodicQuantity' field has been set.
      * @return True if the 'periodicQuantity' field has been set, false otherwise.
      */
    public boolean hasPeriodicQuantity() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'periodicQuantity' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearPeriodicQuantity() {
      periodicQuantity = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceOfVehicle' field.
      * @return The value.
      */
    public java.lang.String getSourceOfVehicle() {
      return sourceOfVehicle;
    }

    /**
      * Sets the value of the 'sourceOfVehicle' field.
      * @param value The value of 'sourceOfVehicle'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setSourceOfVehicle(java.lang.String value) {
      validate(fields()[15], value);
      this.sourceOfVehicle = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceOfVehicle' field has been set.
      * @return True if the 'sourceOfVehicle' field has been set, false otherwise.
      */
    public boolean hasSourceOfVehicle() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'sourceOfVehicle' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearSourceOfVehicle() {
      sourceOfVehicle = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'movementCategory' field.
      * @return The value.
      */
    public java.lang.String getMovementCategory() {
      return movementCategory;
    }

    /**
      * Sets the value of the 'movementCategory' field.
      * @param value The value of 'movementCategory'.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder setMovementCategory(java.lang.String value) {
      validate(fields()[16], value);
      this.movementCategory = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'movementCategory' field has been set.
      * @return True if the 'movementCategory' field has been set, false otherwise.
      */
    public boolean hasMovementCategory() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'movementCategory' field.
      * @return This builder.
      */
    public com.fretron.Model.CostLane.Builder clearMovementCategory() {
      movementCategory = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    public CostLane build() {
      try {
        CostLane record = new CostLane();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.contractId = fieldSetFlags()[1] ? this.contractId : (java.lang.String) defaultValue(fields()[1]);
        record.orgId = fieldSetFlags()[2] ? this.orgId : (java.lang.String) defaultValue(fields()[2]);
        record.customerLaneId = fieldSetFlags()[3] ? this.customerLaneId : (java.lang.String) defaultValue(fields()[3]);
        if (consignorBuilder != null) {
          record.consignor = this.consignorBuilder.build();
        } else {
          record.consignor = fieldSetFlags()[4] ? this.consignor : (com.fretron.Model.BuisnessPartner) defaultValue(fields()[4]);
        }
        if (consigneeBuilder != null) {
          record.consignee = this.consigneeBuilder.build();
        } else {
          record.consignee = fieldSetFlags()[5] ? this.consignee : (com.fretron.Model.BuisnessPartner) defaultValue(fields()[5]);
        }
        if (originBuilder != null) {
          record.origin = this.originBuilder.build();
        } else {
          record.origin = fieldSetFlags()[6] ? this.origin : (com.fretron.Model.Place) defaultValue(fields()[6]);
        }
        if (destinationBuilder != null) {
          record.destination = this.destinationBuilder.build();
        } else {
          record.destination = fieldSetFlags()[7] ? this.destination : (com.fretron.Model.Place) defaultValue(fields()[7]);
        }
        if (loadTypeBuilder != null) {
          record.loadType = this.loadTypeBuilder.build();
        } else {
          record.loadType = fieldSetFlags()[8] ? this.loadType : (com.fretron.Model.LoadType) defaultValue(fields()[8]);
        }
        record.freightUOM = fieldSetFlags()[9] ? this.freightUOM : (java.lang.String) defaultValue(fields()[9]);
        record.freightRate = fieldSetFlags()[10] ? this.freightRate : (java.lang.Double) defaultValue(fields()[10]);
        record.sharePercentage = fieldSetFlags()[11] ? this.sharePercentage : (java.lang.Double) defaultValue(fields()[11]);
        record.quantityPeriod = fieldSetFlags()[12] ? this.quantityPeriod : (java.lang.String) defaultValue(fields()[12]);
        if (totalQuantityBuilder != null) {
          record.totalQuantity = this.totalQuantityBuilder.build();
        } else {
          record.totalQuantity = fieldSetFlags()[13] ? this.totalQuantity : (com.fretron.Model.StandardMeasurement) defaultValue(fields()[13]);
        }
        record.periodicQuantity = fieldSetFlags()[14] ? this.periodicQuantity : (java.util.List<com.fretron.Model.PeriodicQuantity>) defaultValue(fields()[14]);
        record.sourceOfVehicle = fieldSetFlags()[15] ? this.sourceOfVehicle : (java.lang.String) defaultValue(fields()[15]);
        record.movementCategory = fieldSetFlags()[16] ? this.movementCategory : (java.lang.String) defaultValue(fields()[16]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

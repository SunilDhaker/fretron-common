/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class VehicleActivity extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -147671717662806902L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"VehicleActivity\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activityDescriptor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activityType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"endTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"gpsStates\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"VehicleGpsState\",\"fields\":[{\"name\":\"isManuallyAdded\",\"type\":\"boolean\",\"default\":false},{\"name\":\"isIgnore\",\"type\":\"boolean\",\"default\":false},{\"name\":\"startTime\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"endTime\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"startLocation\",\"type\":{\"type\":\"record\",\"name\":\"LitePosition\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"},{\"name\":\"speed\",\"type\":\"double\"},{\"name\":\"course\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"decoder\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"imei\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lngLat\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"isFillingEnabled\",\"type\":\"boolean\",\"default\":false},{\"name\":\"odometer\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Odometer\",\"fields\":[{\"name\":\"softwareMeter\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"lastUpdateTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"isSoftwareMeterManuallyCalibrated\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"lastCalibrationTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"hardwareReading\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"hardwareDistance\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null}]}},{\"name\":\"endLocation\",\"type\":\"LitePosition\"},{\"name\":\"sigmasq\",\"type\":\"double\"},{\"name\":\"mean\",\"type\":\"LitePosition\"},{\"name\":\"totalDistance\",\"type\":\"double\"},{\"name\":\"totalTime\",\"type\":\"long\"},{\"name\":\"averageOfSpeed\",\"type\":\"double\"},{\"name\":\"averageSpeeds\",\"type\":\"double\"},{\"name\":\"numberOfRecord\",\"type\":\"int\"},{\"name\":\"lateArrivedRecordsCount\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"imei\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"GPSState\",\"symbols\":[\"Stopped\",\"Moving\",\"Overspeeding\",\"Disconnected\",\"Unknown\"]}]},{\"name\":\"encodedPolyline\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"timeAwarePolyline\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TimeAwarePolyline\",\"fields\":[{\"name\":\"polyline\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"compressedPolyline\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastPoint\",\"type\":{\"type\":\"record\",\"name\":\"PointAtTime\",\"fields\":[{\"name\":\"timestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"latitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"],\"default\":null}]}},{\"name\":\"isAssumed\",\"type\":\"boolean\",\"default\":false},{\"name\":\"totalPoints\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null},{\"name\":\"polylineSegments\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TimeAwarePolyline\"}],\"default\":null},{\"name\":\"recalculatedDistance\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"odoMeter\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"lastOdoMeterReading\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"isDisconnected\",\"type\":\"boolean\",\"default\":false},{\"name\":\"eventType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"batteryStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastStateOdometer\",\"type\":[\"null\",\"Odometer\"],\"default\":null},{\"name\":\"odometer\",\"type\":[\"null\",\"Odometer\"],\"default\":null},{\"name\":\"clusters\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Properties\",\"fields\":[{\"name\":\"catagory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"level\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customeFields\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"hasUTurn\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"tripPoints\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TripPoint\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"imei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"purpose\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sequenceId\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"place\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Place\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"center\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"suggestedRadius\",\"type\":\"double\",\"default\":null},{\"name\":\"viewport\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ViewPort\",\"fields\":[{\"name\":\"northeast\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"southwest\",\"type\":[\"null\",\"Location\"],\"default\":null}]}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"boundary\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null}]}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eta\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"remainingDistance\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"plannedArrival\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"plannedDeparture\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"actualArrival\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"actualDeparture\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"assosiatedShipmentsId\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"creationTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"outOfTrackSince\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"isOutOfTrack\",\"type\":\"boolean\",\"default\":false},{\"name\":\"isAutoCompleted\",\"type\":\"boolean\",\"default\":false},{\"","name\":\"coveredDistance\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"purposedDistance\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"forShipmentStages\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"currentLocation\",\"type\":[\"null\",\"LitePosition\"],\"default\":null},{\"name\":\"hub\",\"type\":[\"null\",\"Place\"],\"default\":null},{\"name\":\"expectedActivityStartTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"actualActivityStartTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"actualActivityEndTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"updates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Updates\",\"fields\":[{\"name\":\"forwardReasons\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}}],\"default\":null}]}},\"default\":null},{\"name\":\"tripStatus\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"VehicleTripState\",\"fields\":[{\"name\":\"deviceImei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"VehicleState\",\"symbols\":[\"WaitingForLoad\",\"EnrouteForPickUp\",\"AtPickUpPoint\",\"EnrouteForDestination\",\"AtDestination\"]}],\"default\":null},{\"name\":\"tripId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"endTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"latitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},\"default\":null},{\"name\":\"alerts\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Alert\",\"fields\":[{\"name\":\"alertEventTopic\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"conditions\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AlertCondition\",\"fields\":[{\"name\":\"field\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"windowSize\",\"type\":\"long\",\"default\":0},{\"name\":\"fieldType\",\"type\":{\"type\":\"enum\",\"name\":\"AlertFieldType\",\"symbols\":[\"PRIMITIVE\",\"CALCULATED\",\"AGGREGATE\"]}},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"valueType\",\"type\":{\"type\":\"enum\",\"name\":\"AlertParamValueType\",\"symbols\":[\"INT\",\"LONG\",\"DOUBLE\",\"STRING\",\"INT_RANGE\",\"LONG_RANGE\",\"DOUBLE_RANGE\",\"LOCATION_PROXIMITY\",\"LOCATION_GEOFENCE\"]}},{\"name\":\"operator\",\"type\":{\"type\":\"enum\",\"name\":\"AlertOperator\",\"symbols\":[\"IS\",\"IN\",\"NIN\",\"GT\",\"GTE\",\"LT\",\"LTE\",\"EQ\",\"REGEX\"]}}]}}},{\"name\":\"actions\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AlertAction\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"AlertActionType\",\"symbols\":[\"SMS\",\"EMAIL\"]}},{\"name\":\"valueTemplate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"recipient\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}}},{\"name\":\"vehicles\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"snoozeTime\",\"type\":[\"null\",\"long\"],\"default\":0},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},\"default\":null},{\"name\":\"isLatestActivity\",\"type\":\"boolean\",\"default\":false},{\"name\":\"isFirstActivity\",\"type\":\"boolean\",\"default\":false},{\"name\":\"lastUpdatedTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"event\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String vehicleId;
  @Deprecated public java.lang.String activityDescriptor;
  @Deprecated public java.lang.String activityType;
  @Deprecated public java.lang.Long startTime;
  @Deprecated public java.lang.Long endTime;
  @Deprecated public java.util.List<com.fretron.Model.VehicleGpsState> gpsStates;
  @Deprecated public java.util.List<com.fretron.Model.VehicleTripState> tripStatus;
  @Deprecated public java.util.List<com.fretron.Model.Alert> alerts;
  @Deprecated public boolean isLatestActivity;
  @Deprecated public boolean isFirstActivity;
  @Deprecated public java.lang.Long lastUpdatedTime;
  @Deprecated public java.lang.String event;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public VehicleActivity() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param vehicleId The new value for vehicleId
   * @param activityDescriptor The new value for activityDescriptor
   * @param activityType The new value for activityType
   * @param startTime The new value for startTime
   * @param endTime The new value for endTime
   * @param gpsStates The new value for gpsStates
   * @param tripStatus The new value for tripStatus
   * @param alerts The new value for alerts
   * @param isLatestActivity The new value for isLatestActivity
   * @param isFirstActivity The new value for isFirstActivity
   * @param lastUpdatedTime The new value for lastUpdatedTime
   * @param event The new value for event
   */
  public VehicleActivity(java.lang.String uuid, java.lang.String vehicleId, java.lang.String activityDescriptor, java.lang.String activityType, java.lang.Long startTime, java.lang.Long endTime, java.util.List<com.fretron.Model.VehicleGpsState> gpsStates, java.util.List<com.fretron.Model.VehicleTripState> tripStatus, java.util.List<com.fretron.Model.Alert> alerts, java.lang.Boolean isLatestActivity, java.lang.Boolean isFirstActivity, java.lang.Long lastUpdatedTime, java.lang.String event) {
    this.uuid = uuid;
    this.vehicleId = vehicleId;
    this.activityDescriptor = activityDescriptor;
    this.activityType = activityType;
    this.startTime = startTime;
    this.endTime = endTime;
    this.gpsStates = gpsStates;
    this.tripStatus = tripStatus;
    this.alerts = alerts;
    this.isLatestActivity = isLatestActivity;
    this.isFirstActivity = isFirstActivity;
    this.lastUpdatedTime = lastUpdatedTime;
    this.event = event;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return vehicleId;
    case 2: return activityDescriptor;
    case 3: return activityType;
    case 4: return startTime;
    case 5: return endTime;
    case 6: return gpsStates;
    case 7: return tripStatus;
    case 8: return alerts;
    case 9: return isLatestActivity;
    case 10: return isFirstActivity;
    case 11: return lastUpdatedTime;
    case 12: return event;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: vehicleId = (java.lang.String)value$; break;
    case 2: activityDescriptor = (java.lang.String)value$; break;
    case 3: activityType = (java.lang.String)value$; break;
    case 4: startTime = (java.lang.Long)value$; break;
    case 5: endTime = (java.lang.Long)value$; break;
    case 6: gpsStates = (java.util.List<com.fretron.Model.VehicleGpsState>)value$; break;
    case 7: tripStatus = (java.util.List<com.fretron.Model.VehicleTripState>)value$; break;
    case 8: alerts = (java.util.List<com.fretron.Model.Alert>)value$; break;
    case 9: isLatestActivity = (java.lang.Boolean)value$; break;
    case 10: isFirstActivity = (java.lang.Boolean)value$; break;
    case 11: lastUpdatedTime = (java.lang.Long)value$; break;
    case 12: event = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'vehicleId' field.
   * @return The value of the 'vehicleId' field.
   */
  public java.lang.String getVehicleId() {
    return vehicleId;
  }

  /**
   * Sets the value of the 'vehicleId' field.
   * @param value the value to set.
   */
  public void setVehicleId(java.lang.String value) {
    this.vehicleId = value;
  }

  /**
   * Gets the value of the 'activityDescriptor' field.
   * @return The value of the 'activityDescriptor' field.
   */
  public java.lang.String getActivityDescriptor() {
    return activityDescriptor;
  }

  /**
   * Sets the value of the 'activityDescriptor' field.
   * @param value the value to set.
   */
  public void setActivityDescriptor(java.lang.String value) {
    this.activityDescriptor = value;
  }

  /**
   * Gets the value of the 'activityType' field.
   * @return The value of the 'activityType' field.
   */
  public java.lang.String getActivityType() {
    return activityType;
  }

  /**
   * Sets the value of the 'activityType' field.
   * @param value the value to set.
   */
  public void setActivityType(java.lang.String value) {
    this.activityType = value;
  }

  /**
   * Gets the value of the 'startTime' field.
   * @return The value of the 'startTime' field.
   */
  public java.lang.Long getStartTime() {
    return startTime;
  }

  /**
   * Sets the value of the 'startTime' field.
   * @param value the value to set.
   */
  public void setStartTime(java.lang.Long value) {
    this.startTime = value;
  }

  /**
   * Gets the value of the 'endTime' field.
   * @return The value of the 'endTime' field.
   */
  public java.lang.Long getEndTime() {
    return endTime;
  }

  /**
   * Sets the value of the 'endTime' field.
   * @param value the value to set.
   */
  public void setEndTime(java.lang.Long value) {
    this.endTime = value;
  }

  /**
   * Gets the value of the 'gpsStates' field.
   * @return The value of the 'gpsStates' field.
   */
  public java.util.List<com.fretron.Model.VehicleGpsState> getGpsStates() {
    return gpsStates;
  }

  /**
   * Sets the value of the 'gpsStates' field.
   * @param value the value to set.
   */
  public void setGpsStates(java.util.List<com.fretron.Model.VehicleGpsState> value) {
    this.gpsStates = value;
  }

  /**
   * Gets the value of the 'tripStatus' field.
   * @return The value of the 'tripStatus' field.
   */
  public java.util.List<com.fretron.Model.VehicleTripState> getTripStatus() {
    return tripStatus;
  }

  /**
   * Sets the value of the 'tripStatus' field.
   * @param value the value to set.
   */
  public void setTripStatus(java.util.List<com.fretron.Model.VehicleTripState> value) {
    this.tripStatus = value;
  }

  /**
   * Gets the value of the 'alerts' field.
   * @return The value of the 'alerts' field.
   */
  public java.util.List<com.fretron.Model.Alert> getAlerts() {
    return alerts;
  }

  /**
   * Sets the value of the 'alerts' field.
   * @param value the value to set.
   */
  public void setAlerts(java.util.List<com.fretron.Model.Alert> value) {
    this.alerts = value;
  }

  /**
   * Gets the value of the 'isLatestActivity' field.
   * @return The value of the 'isLatestActivity' field.
   */
  public java.lang.Boolean getIsLatestActivity() {
    return isLatestActivity;
  }

  /**
   * Sets the value of the 'isLatestActivity' field.
   * @param value the value to set.
   */
  public void setIsLatestActivity(java.lang.Boolean value) {
    this.isLatestActivity = value;
  }

  /**
   * Gets the value of the 'isFirstActivity' field.
   * @return The value of the 'isFirstActivity' field.
   */
  public java.lang.Boolean getIsFirstActivity() {
    return isFirstActivity;
  }

  /**
   * Sets the value of the 'isFirstActivity' field.
   * @param value the value to set.
   */
  public void setIsFirstActivity(java.lang.Boolean value) {
    this.isFirstActivity = value;
  }

  /**
   * Gets the value of the 'lastUpdatedTime' field.
   * @return The value of the 'lastUpdatedTime' field.
   */
  public java.lang.Long getLastUpdatedTime() {
    return lastUpdatedTime;
  }

  /**
   * Sets the value of the 'lastUpdatedTime' field.
   * @param value the value to set.
   */
  public void setLastUpdatedTime(java.lang.Long value) {
    this.lastUpdatedTime = value;
  }

  /**
   * Gets the value of the 'event' field.
   * @return The value of the 'event' field.
   */
  public java.lang.String getEvent() {
    return event;
  }

  /**
   * Sets the value of the 'event' field.
   * @param value the value to set.
   */
  public void setEvent(java.lang.String value) {
    this.event = value;
  }

  /**
   * Creates a new VehicleActivity RecordBuilder.
   * @return A new VehicleActivity RecordBuilder
   */
  public static com.fretron.Model.VehicleActivity.Builder newBuilder() {
    return new com.fretron.Model.VehicleActivity.Builder();
  }

  /**
   * Creates a new VehicleActivity RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new VehicleActivity RecordBuilder
   */
  public static com.fretron.Model.VehicleActivity.Builder newBuilder(com.fretron.Model.VehicleActivity.Builder other) {
    return new com.fretron.Model.VehicleActivity.Builder(other);
  }

  /**
   * Creates a new VehicleActivity RecordBuilder by copying an existing VehicleActivity instance.
   * @param other The existing instance to copy.
   * @return A new VehicleActivity RecordBuilder
   */
  public static com.fretron.Model.VehicleActivity.Builder newBuilder(com.fretron.Model.VehicleActivity other) {
    return new com.fretron.Model.VehicleActivity.Builder(other);
  }

  /**
   * RecordBuilder for VehicleActivity instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<VehicleActivity>
    implements org.apache.avro.data.RecordBuilder<VehicleActivity> {

    private java.lang.String uuid;
    private java.lang.String vehicleId;
    private java.lang.String activityDescriptor;
    private java.lang.String activityType;
    private java.lang.Long startTime;
    private java.lang.Long endTime;
    private java.util.List<com.fretron.Model.VehicleGpsState> gpsStates;
    private java.util.List<com.fretron.Model.VehicleTripState> tripStatus;
    private java.util.List<com.fretron.Model.Alert> alerts;
    private boolean isLatestActivity;
    private boolean isFirstActivity;
    private java.lang.Long lastUpdatedTime;
    private java.lang.String event;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.VehicleActivity.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[1].schema(), other.vehicleId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.activityDescriptor)) {
        this.activityDescriptor = data().deepCopy(fields()[2].schema(), other.activityDescriptor);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.activityType)) {
        this.activityType = data().deepCopy(fields()[3].schema(), other.activityType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.startTime)) {
        this.startTime = data().deepCopy(fields()[4].schema(), other.startTime);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.endTime)) {
        this.endTime = data().deepCopy(fields()[5].schema(), other.endTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.gpsStates)) {
        this.gpsStates = data().deepCopy(fields()[6].schema(), other.gpsStates);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.tripStatus)) {
        this.tripStatus = data().deepCopy(fields()[7].schema(), other.tripStatus);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.alerts)) {
        this.alerts = data().deepCopy(fields()[8].schema(), other.alerts);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.isLatestActivity)) {
        this.isLatestActivity = data().deepCopy(fields()[9].schema(), other.isLatestActivity);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.isFirstActivity)) {
        this.isFirstActivity = data().deepCopy(fields()[10].schema(), other.isFirstActivity);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.lastUpdatedTime)) {
        this.lastUpdatedTime = data().deepCopy(fields()[11].schema(), other.lastUpdatedTime);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.event)) {
        this.event = data().deepCopy(fields()[12].schema(), other.event);
        fieldSetFlags()[12] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing VehicleActivity instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.VehicleActivity other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[1].schema(), other.vehicleId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.activityDescriptor)) {
        this.activityDescriptor = data().deepCopy(fields()[2].schema(), other.activityDescriptor);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.activityType)) {
        this.activityType = data().deepCopy(fields()[3].schema(), other.activityType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.startTime)) {
        this.startTime = data().deepCopy(fields()[4].schema(), other.startTime);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.endTime)) {
        this.endTime = data().deepCopy(fields()[5].schema(), other.endTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.gpsStates)) {
        this.gpsStates = data().deepCopy(fields()[6].schema(), other.gpsStates);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.tripStatus)) {
        this.tripStatus = data().deepCopy(fields()[7].schema(), other.tripStatus);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.alerts)) {
        this.alerts = data().deepCopy(fields()[8].schema(), other.alerts);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.isLatestActivity)) {
        this.isLatestActivity = data().deepCopy(fields()[9].schema(), other.isLatestActivity);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.isFirstActivity)) {
        this.isFirstActivity = data().deepCopy(fields()[10].schema(), other.isFirstActivity);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.lastUpdatedTime)) {
        this.lastUpdatedTime = data().deepCopy(fields()[11].schema(), other.lastUpdatedTime);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.event)) {
        this.event = data().deepCopy(fields()[12].schema(), other.event);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleId' field.
      * @return The value.
      */
    public java.lang.String getVehicleId() {
      return vehicleId;
    }

    /**
      * Sets the value of the 'vehicleId' field.
      * @param value The value of 'vehicleId'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setVehicleId(java.lang.String value) {
      validate(fields()[1], value);
      this.vehicleId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleId' field has been set.
      * @return True if the 'vehicleId' field has been set, false otherwise.
      */
    public boolean hasVehicleId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'vehicleId' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearVehicleId() {
      vehicleId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'activityDescriptor' field.
      * @return The value.
      */
    public java.lang.String getActivityDescriptor() {
      return activityDescriptor;
    }

    /**
      * Sets the value of the 'activityDescriptor' field.
      * @param value The value of 'activityDescriptor'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setActivityDescriptor(java.lang.String value) {
      validate(fields()[2], value);
      this.activityDescriptor = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'activityDescriptor' field has been set.
      * @return True if the 'activityDescriptor' field has been set, false otherwise.
      */
    public boolean hasActivityDescriptor() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'activityDescriptor' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearActivityDescriptor() {
      activityDescriptor = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'activityType' field.
      * @return The value.
      */
    public java.lang.String getActivityType() {
      return activityType;
    }

    /**
      * Sets the value of the 'activityType' field.
      * @param value The value of 'activityType'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setActivityType(java.lang.String value) {
      validate(fields()[3], value);
      this.activityType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'activityType' field has been set.
      * @return True if the 'activityType' field has been set, false otherwise.
      */
    public boolean hasActivityType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'activityType' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearActivityType() {
      activityType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'startTime' field.
      * @return The value.
      */
    public java.lang.Long getStartTime() {
      return startTime;
    }

    /**
      * Sets the value of the 'startTime' field.
      * @param value The value of 'startTime'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setStartTime(java.lang.Long value) {
      validate(fields()[4], value);
      this.startTime = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'startTime' field has been set.
      * @return True if the 'startTime' field has been set, false otherwise.
      */
    public boolean hasStartTime() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'startTime' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearStartTime() {
      startTime = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'endTime' field.
      * @return The value.
      */
    public java.lang.Long getEndTime() {
      return endTime;
    }

    /**
      * Sets the value of the 'endTime' field.
      * @param value The value of 'endTime'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setEndTime(java.lang.Long value) {
      validate(fields()[5], value);
      this.endTime = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'endTime' field has been set.
      * @return True if the 'endTime' field has been set, false otherwise.
      */
    public boolean hasEndTime() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'endTime' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearEndTime() {
      endTime = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'gpsStates' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.VehicleGpsState> getGpsStates() {
      return gpsStates;
    }

    /**
      * Sets the value of the 'gpsStates' field.
      * @param value The value of 'gpsStates'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setGpsStates(java.util.List<com.fretron.Model.VehicleGpsState> value) {
      validate(fields()[6], value);
      this.gpsStates = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'gpsStates' field has been set.
      * @return True if the 'gpsStates' field has been set, false otherwise.
      */
    public boolean hasGpsStates() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'gpsStates' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearGpsStates() {
      gpsStates = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'tripStatus' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.VehicleTripState> getTripStatus() {
      return tripStatus;
    }

    /**
      * Sets the value of the 'tripStatus' field.
      * @param value The value of 'tripStatus'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setTripStatus(java.util.List<com.fretron.Model.VehicleTripState> value) {
      validate(fields()[7], value);
      this.tripStatus = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'tripStatus' field has been set.
      * @return True if the 'tripStatus' field has been set, false otherwise.
      */
    public boolean hasTripStatus() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'tripStatus' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearTripStatus() {
      tripStatus = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'alerts' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.Alert> getAlerts() {
      return alerts;
    }

    /**
      * Sets the value of the 'alerts' field.
      * @param value The value of 'alerts'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setAlerts(java.util.List<com.fretron.Model.Alert> value) {
      validate(fields()[8], value);
      this.alerts = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'alerts' field has been set.
      * @return True if the 'alerts' field has been set, false otherwise.
      */
    public boolean hasAlerts() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'alerts' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearAlerts() {
      alerts = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'isLatestActivity' field.
      * @return The value.
      */
    public java.lang.Boolean getIsLatestActivity() {
      return isLatestActivity;
    }

    /**
      * Sets the value of the 'isLatestActivity' field.
      * @param value The value of 'isLatestActivity'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setIsLatestActivity(boolean value) {
      validate(fields()[9], value);
      this.isLatestActivity = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'isLatestActivity' field has been set.
      * @return True if the 'isLatestActivity' field has been set, false otherwise.
      */
    public boolean hasIsLatestActivity() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'isLatestActivity' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearIsLatestActivity() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'isFirstActivity' field.
      * @return The value.
      */
    public java.lang.Boolean getIsFirstActivity() {
      return isFirstActivity;
    }

    /**
      * Sets the value of the 'isFirstActivity' field.
      * @param value The value of 'isFirstActivity'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setIsFirstActivity(boolean value) {
      validate(fields()[10], value);
      this.isFirstActivity = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'isFirstActivity' field has been set.
      * @return True if the 'isFirstActivity' field has been set, false otherwise.
      */
    public boolean hasIsFirstActivity() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'isFirstActivity' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearIsFirstActivity() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdatedTime' field.
      * @return The value.
      */
    public java.lang.Long getLastUpdatedTime() {
      return lastUpdatedTime;
    }

    /**
      * Sets the value of the 'lastUpdatedTime' field.
      * @param value The value of 'lastUpdatedTime'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setLastUpdatedTime(java.lang.Long value) {
      validate(fields()[11], value);
      this.lastUpdatedTime = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdatedTime' field has been set.
      * @return True if the 'lastUpdatedTime' field has been set, false otherwise.
      */
    public boolean hasLastUpdatedTime() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'lastUpdatedTime' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearLastUpdatedTime() {
      lastUpdatedTime = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'event' field.
      * @return The value.
      */
    public java.lang.String getEvent() {
      return event;
    }

    /**
      * Sets the value of the 'event' field.
      * @param value The value of 'event'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder setEvent(java.lang.String value) {
      validate(fields()[12], value);
      this.event = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'event' field has been set.
      * @return True if the 'event' field has been set, false otherwise.
      */
    public boolean hasEvent() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'event' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleActivity.Builder clearEvent() {
      event = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    public VehicleActivity build() {
      try {
        VehicleActivity record = new VehicleActivity();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.vehicleId = fieldSetFlags()[1] ? this.vehicleId : (java.lang.String) defaultValue(fields()[1]);
        record.activityDescriptor = fieldSetFlags()[2] ? this.activityDescriptor : (java.lang.String) defaultValue(fields()[2]);
        record.activityType = fieldSetFlags()[3] ? this.activityType : (java.lang.String) defaultValue(fields()[3]);
        record.startTime = fieldSetFlags()[4] ? this.startTime : (java.lang.Long) defaultValue(fields()[4]);
        record.endTime = fieldSetFlags()[5] ? this.endTime : (java.lang.Long) defaultValue(fields()[5]);
        record.gpsStates = fieldSetFlags()[6] ? this.gpsStates : (java.util.List<com.fretron.Model.VehicleGpsState>) defaultValue(fields()[6]);
        record.tripStatus = fieldSetFlags()[7] ? this.tripStatus : (java.util.List<com.fretron.Model.VehicleTripState>) defaultValue(fields()[7]);
        record.alerts = fieldSetFlags()[8] ? this.alerts : (java.util.List<com.fretron.Model.Alert>) defaultValue(fields()[8]);
        record.isLatestActivity = fieldSetFlags()[9] ? this.isLatestActivity : (java.lang.Boolean) defaultValue(fields()[9]);
        record.isFirstActivity = fieldSetFlags()[10] ? this.isFirstActivity : (java.lang.Boolean) defaultValue(fields()[10]);
        record.lastUpdatedTime = fieldSetFlags()[11] ? this.lastUpdatedTime : (java.lang.Long) defaultValue(fields()[11]);
        record.event = fieldSetFlags()[12] ? this.event : (java.lang.String) defaultValue(fields()[12]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

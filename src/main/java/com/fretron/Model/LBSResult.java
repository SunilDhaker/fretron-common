/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LBSResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1855973926762409811L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LBSResult\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"requestType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"requestId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"requestURL\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"statusCode\",\"type\":[\"null\",\"int\"]},{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"error\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"requestedAt\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"requestTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceIdentifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceCreationTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"apiKey\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String mobileNumber;
  @Deprecated public java.lang.String requestType;
  @Deprecated public java.lang.String requestId;
  @Deprecated public java.lang.String requestURL;
  @Deprecated public java.lang.Integer statusCode;
  @Deprecated public java.lang.String data;
  @Deprecated public java.lang.String error;
  @Deprecated public java.lang.Long requestedAt;
  @Deprecated public java.lang.Long requestTime;
  @Deprecated public java.lang.String userId;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.String resourceIdentifier;
  @Deprecated public java.lang.Long resourceCreationTime;
  @Deprecated public java.lang.String apiKey;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LBSResult() {}

  /**
   * All-args constructor.
   * @param mobileNumber The new value for mobileNumber
   * @param requestType The new value for requestType
   * @param requestId The new value for requestId
   * @param requestURL The new value for requestURL
   * @param statusCode The new value for statusCode
   * @param data The new value for data
   * @param error The new value for error
   * @param requestedAt The new value for requestedAt
   * @param requestTime The new value for requestTime
   * @param userId The new value for userId
   * @param orgId The new value for orgId
   * @param resourceIdentifier The new value for resourceIdentifier
   * @param resourceCreationTime The new value for resourceCreationTime
   * @param apiKey The new value for apiKey
   */
  public LBSResult(java.lang.String mobileNumber, java.lang.String requestType, java.lang.String requestId, java.lang.String requestURL, java.lang.Integer statusCode, java.lang.String data, java.lang.String error, java.lang.Long requestedAt, java.lang.Long requestTime, java.lang.String userId, java.lang.String orgId, java.lang.String resourceIdentifier, java.lang.Long resourceCreationTime, java.lang.String apiKey) {
    this.mobileNumber = mobileNumber;
    this.requestType = requestType;
    this.requestId = requestId;
    this.requestURL = requestURL;
    this.statusCode = statusCode;
    this.data = data;
    this.error = error;
    this.requestedAt = requestedAt;
    this.requestTime = requestTime;
    this.userId = userId;
    this.orgId = orgId;
    this.resourceIdentifier = resourceIdentifier;
    this.resourceCreationTime = resourceCreationTime;
    this.apiKey = apiKey;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return mobileNumber;
    case 1: return requestType;
    case 2: return requestId;
    case 3: return requestURL;
    case 4: return statusCode;
    case 5: return data;
    case 6: return error;
    case 7: return requestedAt;
    case 8: return requestTime;
    case 9: return userId;
    case 10: return orgId;
    case 11: return resourceIdentifier;
    case 12: return resourceCreationTime;
    case 13: return apiKey;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: mobileNumber = (java.lang.String)value$; break;
    case 1: requestType = (java.lang.String)value$; break;
    case 2: requestId = (java.lang.String)value$; break;
    case 3: requestURL = (java.lang.String)value$; break;
    case 4: statusCode = (java.lang.Integer)value$; break;
    case 5: data = (java.lang.String)value$; break;
    case 6: error = (java.lang.String)value$; break;
    case 7: requestedAt = (java.lang.Long)value$; break;
    case 8: requestTime = (java.lang.Long)value$; break;
    case 9: userId = (java.lang.String)value$; break;
    case 10: orgId = (java.lang.String)value$; break;
    case 11: resourceIdentifier = (java.lang.String)value$; break;
    case 12: resourceCreationTime = (java.lang.Long)value$; break;
    case 13: apiKey = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'mobileNumber' field.
   * @return The value of the 'mobileNumber' field.
   */
  public java.lang.String getMobileNumber() {
    return mobileNumber;
  }

  /**
   * Sets the value of the 'mobileNumber' field.
   * @param value the value to set.
   */
  public void setMobileNumber(java.lang.String value) {
    this.mobileNumber = value;
  }

  /**
   * Gets the value of the 'requestType' field.
   * @return The value of the 'requestType' field.
   */
  public java.lang.String getRequestType() {
    return requestType;
  }

  /**
   * Sets the value of the 'requestType' field.
   * @param value the value to set.
   */
  public void setRequestType(java.lang.String value) {
    this.requestType = value;
  }

  /**
   * Gets the value of the 'requestId' field.
   * @return The value of the 'requestId' field.
   */
  public java.lang.String getRequestId() {
    return requestId;
  }

  /**
   * Sets the value of the 'requestId' field.
   * @param value the value to set.
   */
  public void setRequestId(java.lang.String value) {
    this.requestId = value;
  }

  /**
   * Gets the value of the 'requestURL' field.
   * @return The value of the 'requestURL' field.
   */
  public java.lang.String getRequestURL() {
    return requestURL;
  }

  /**
   * Sets the value of the 'requestURL' field.
   * @param value the value to set.
   */
  public void setRequestURL(java.lang.String value) {
    this.requestURL = value;
  }

  /**
   * Gets the value of the 'statusCode' field.
   * @return The value of the 'statusCode' field.
   */
  public java.lang.Integer getStatusCode() {
    return statusCode;
  }

  /**
   * Sets the value of the 'statusCode' field.
   * @param value the value to set.
   */
  public void setStatusCode(java.lang.Integer value) {
    this.statusCode = value;
  }

  /**
   * Gets the value of the 'data' field.
   * @return The value of the 'data' field.
   */
  public java.lang.String getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(java.lang.String value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'error' field.
   * @return The value of the 'error' field.
   */
  public java.lang.String getError() {
    return error;
  }

  /**
   * Sets the value of the 'error' field.
   * @param value the value to set.
   */
  public void setError(java.lang.String value) {
    this.error = value;
  }

  /**
   * Gets the value of the 'requestedAt' field.
   * @return The value of the 'requestedAt' field.
   */
  public java.lang.Long getRequestedAt() {
    return requestedAt;
  }

  /**
   * Sets the value of the 'requestedAt' field.
   * @param value the value to set.
   */
  public void setRequestedAt(java.lang.Long value) {
    this.requestedAt = value;
  }

  /**
   * Gets the value of the 'requestTime' field.
   * @return The value of the 'requestTime' field.
   */
  public java.lang.Long getRequestTime() {
    return requestTime;
  }

  /**
   * Sets the value of the 'requestTime' field.
   * @param value the value to set.
   */
  public void setRequestTime(java.lang.Long value) {
    this.requestTime = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.String getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.String value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'resourceIdentifier' field.
   * @return The value of the 'resourceIdentifier' field.
   */
  public java.lang.String getResourceIdentifier() {
    return resourceIdentifier;
  }

  /**
   * Sets the value of the 'resourceIdentifier' field.
   * @param value the value to set.
   */
  public void setResourceIdentifier(java.lang.String value) {
    this.resourceIdentifier = value;
  }

  /**
   * Gets the value of the 'resourceCreationTime' field.
   * @return The value of the 'resourceCreationTime' field.
   */
  public java.lang.Long getResourceCreationTime() {
    return resourceCreationTime;
  }

  /**
   * Sets the value of the 'resourceCreationTime' field.
   * @param value the value to set.
   */
  public void setResourceCreationTime(java.lang.Long value) {
    this.resourceCreationTime = value;
  }

  /**
   * Gets the value of the 'apiKey' field.
   * @return The value of the 'apiKey' field.
   */
  public java.lang.String getApiKey() {
    return apiKey;
  }

  /**
   * Sets the value of the 'apiKey' field.
   * @param value the value to set.
   */
  public void setApiKey(java.lang.String value) {
    this.apiKey = value;
  }

  /**
   * Creates a new LBSResult RecordBuilder.
   * @return A new LBSResult RecordBuilder
   */
  public static com.fretron.Model.LBSResult.Builder newBuilder() {
    return new com.fretron.Model.LBSResult.Builder();
  }

  /**
   * Creates a new LBSResult RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LBSResult RecordBuilder
   */
  public static com.fretron.Model.LBSResult.Builder newBuilder(com.fretron.Model.LBSResult.Builder other) {
    return new com.fretron.Model.LBSResult.Builder(other);
  }

  /**
   * Creates a new LBSResult RecordBuilder by copying an existing LBSResult instance.
   * @param other The existing instance to copy.
   * @return A new LBSResult RecordBuilder
   */
  public static com.fretron.Model.LBSResult.Builder newBuilder(com.fretron.Model.LBSResult other) {
    return new com.fretron.Model.LBSResult.Builder(other);
  }

  /**
   * RecordBuilder for LBSResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LBSResult>
    implements org.apache.avro.data.RecordBuilder<LBSResult> {

    private java.lang.String mobileNumber;
    private java.lang.String requestType;
    private java.lang.String requestId;
    private java.lang.String requestURL;
    private java.lang.Integer statusCode;
    private java.lang.String data;
    private java.lang.String error;
    private java.lang.Long requestedAt;
    private java.lang.Long requestTime;
    private java.lang.String userId;
    private java.lang.String orgId;
    private java.lang.String resourceIdentifier;
    private java.lang.Long resourceCreationTime;
    private java.lang.String apiKey;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.LBSResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.mobileNumber)) {
        this.mobileNumber = data().deepCopy(fields()[0].schema(), other.mobileNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.requestType)) {
        this.requestType = data().deepCopy(fields()[1].schema(), other.requestType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.requestId)) {
        this.requestId = data().deepCopy(fields()[2].schema(), other.requestId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.requestURL)) {
        this.requestURL = data().deepCopy(fields()[3].schema(), other.requestURL);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.statusCode)) {
        this.statusCode = data().deepCopy(fields()[4].schema(), other.statusCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.data)) {
        this.data = data().deepCopy(fields()[5].schema(), other.data);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.error)) {
        this.error = data().deepCopy(fields()[6].schema(), other.error);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.requestedAt)) {
        this.requestedAt = data().deepCopy(fields()[7].schema(), other.requestedAt);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.requestTime)) {
        this.requestTime = data().deepCopy(fields()[8].schema(), other.requestTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.userId)) {
        this.userId = data().deepCopy(fields()[9].schema(), other.userId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.orgId)) {
        this.orgId = data().deepCopy(fields()[10].schema(), other.orgId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.resourceIdentifier)) {
        this.resourceIdentifier = data().deepCopy(fields()[11].schema(), other.resourceIdentifier);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.resourceCreationTime)) {
        this.resourceCreationTime = data().deepCopy(fields()[12].schema(), other.resourceCreationTime);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.apiKey)) {
        this.apiKey = data().deepCopy(fields()[13].schema(), other.apiKey);
        fieldSetFlags()[13] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing LBSResult instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.LBSResult other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.mobileNumber)) {
        this.mobileNumber = data().deepCopy(fields()[0].schema(), other.mobileNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.requestType)) {
        this.requestType = data().deepCopy(fields()[1].schema(), other.requestType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.requestId)) {
        this.requestId = data().deepCopy(fields()[2].schema(), other.requestId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.requestURL)) {
        this.requestURL = data().deepCopy(fields()[3].schema(), other.requestURL);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.statusCode)) {
        this.statusCode = data().deepCopy(fields()[4].schema(), other.statusCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.data)) {
        this.data = data().deepCopy(fields()[5].schema(), other.data);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.error)) {
        this.error = data().deepCopy(fields()[6].schema(), other.error);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.requestedAt)) {
        this.requestedAt = data().deepCopy(fields()[7].schema(), other.requestedAt);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.requestTime)) {
        this.requestTime = data().deepCopy(fields()[8].schema(), other.requestTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.userId)) {
        this.userId = data().deepCopy(fields()[9].schema(), other.userId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.orgId)) {
        this.orgId = data().deepCopy(fields()[10].schema(), other.orgId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.resourceIdentifier)) {
        this.resourceIdentifier = data().deepCopy(fields()[11].schema(), other.resourceIdentifier);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.resourceCreationTime)) {
        this.resourceCreationTime = data().deepCopy(fields()[12].schema(), other.resourceCreationTime);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.apiKey)) {
        this.apiKey = data().deepCopy(fields()[13].schema(), other.apiKey);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'mobileNumber' field.
      * @return The value.
      */
    public java.lang.String getMobileNumber() {
      return mobileNumber;
    }

    /**
      * Sets the value of the 'mobileNumber' field.
      * @param value The value of 'mobileNumber'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setMobileNumber(java.lang.String value) {
      validate(fields()[0], value);
      this.mobileNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'mobileNumber' field has been set.
      * @return True if the 'mobileNumber' field has been set, false otherwise.
      */
    public boolean hasMobileNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'mobileNumber' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearMobileNumber() {
      mobileNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestType' field.
      * @return The value.
      */
    public java.lang.String getRequestType() {
      return requestType;
    }

    /**
      * Sets the value of the 'requestType' field.
      * @param value The value of 'requestType'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setRequestType(java.lang.String value) {
      validate(fields()[1], value);
      this.requestType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'requestType' field has been set.
      * @return True if the 'requestType' field has been set, false otherwise.
      */
    public boolean hasRequestType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'requestType' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearRequestType() {
      requestType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestId' field.
      * @return The value.
      */
    public java.lang.String getRequestId() {
      return requestId;
    }

    /**
      * Sets the value of the 'requestId' field.
      * @param value The value of 'requestId'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setRequestId(java.lang.String value) {
      validate(fields()[2], value);
      this.requestId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'requestId' field has been set.
      * @return True if the 'requestId' field has been set, false otherwise.
      */
    public boolean hasRequestId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'requestId' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearRequestId() {
      requestId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestURL' field.
      * @return The value.
      */
    public java.lang.String getRequestURL() {
      return requestURL;
    }

    /**
      * Sets the value of the 'requestURL' field.
      * @param value The value of 'requestURL'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setRequestURL(java.lang.String value) {
      validate(fields()[3], value);
      this.requestURL = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'requestURL' field has been set.
      * @return True if the 'requestURL' field has been set, false otherwise.
      */
    public boolean hasRequestURL() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'requestURL' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearRequestURL() {
      requestURL = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'statusCode' field.
      * @return The value.
      */
    public java.lang.Integer getStatusCode() {
      return statusCode;
    }

    /**
      * Sets the value of the 'statusCode' field.
      * @param value The value of 'statusCode'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setStatusCode(java.lang.Integer value) {
      validate(fields()[4], value);
      this.statusCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'statusCode' field has been set.
      * @return True if the 'statusCode' field has been set, false otherwise.
      */
    public boolean hasStatusCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'statusCode' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearStatusCode() {
      statusCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'data' field.
      * @return The value.
      */
    public java.lang.String getData() {
      return data;
    }

    /**
      * Sets the value of the 'data' field.
      * @param value The value of 'data'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setData(java.lang.String value) {
      validate(fields()[5], value);
      this.data = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'data' field has been set.
      * @return True if the 'data' field has been set, false otherwise.
      */
    public boolean hasData() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'data' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearData() {
      data = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'error' field.
      * @return The value.
      */
    public java.lang.String getError() {
      return error;
    }

    /**
      * Sets the value of the 'error' field.
      * @param value The value of 'error'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setError(java.lang.String value) {
      validate(fields()[6], value);
      this.error = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'error' field has been set.
      * @return True if the 'error' field has been set, false otherwise.
      */
    public boolean hasError() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'error' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearError() {
      error = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestedAt' field.
      * @return The value.
      */
    public java.lang.Long getRequestedAt() {
      return requestedAt;
    }

    /**
      * Sets the value of the 'requestedAt' field.
      * @param value The value of 'requestedAt'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setRequestedAt(java.lang.Long value) {
      validate(fields()[7], value);
      this.requestedAt = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'requestedAt' field has been set.
      * @return True if the 'requestedAt' field has been set, false otherwise.
      */
    public boolean hasRequestedAt() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'requestedAt' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearRequestedAt() {
      requestedAt = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestTime' field.
      * @return The value.
      */
    public java.lang.Long getRequestTime() {
      return requestTime;
    }

    /**
      * Sets the value of the 'requestTime' field.
      * @param value The value of 'requestTime'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setRequestTime(java.lang.Long value) {
      validate(fields()[8], value);
      this.requestTime = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'requestTime' field has been set.
      * @return True if the 'requestTime' field has been set, false otherwise.
      */
    public boolean hasRequestTime() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'requestTime' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearRequestTime() {
      requestTime = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.String getUserId() {
      return userId;
    }

    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setUserId(java.lang.String value) {
      validate(fields()[9], value);
      this.userId = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setOrgId(java.lang.String value) {
      validate(fields()[10], value);
      this.orgId = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'resourceIdentifier' field.
      * @return The value.
      */
    public java.lang.String getResourceIdentifier() {
      return resourceIdentifier;
    }

    /**
      * Sets the value of the 'resourceIdentifier' field.
      * @param value The value of 'resourceIdentifier'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setResourceIdentifier(java.lang.String value) {
      validate(fields()[11], value);
      this.resourceIdentifier = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceIdentifier' field has been set.
      * @return True if the 'resourceIdentifier' field has been set, false otherwise.
      */
    public boolean hasResourceIdentifier() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'resourceIdentifier' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearResourceIdentifier() {
      resourceIdentifier = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'resourceCreationTime' field.
      * @return The value.
      */
    public java.lang.Long getResourceCreationTime() {
      return resourceCreationTime;
    }

    /**
      * Sets the value of the 'resourceCreationTime' field.
      * @param value The value of 'resourceCreationTime'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setResourceCreationTime(java.lang.Long value) {
      validate(fields()[12], value);
      this.resourceCreationTime = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceCreationTime' field has been set.
      * @return True if the 'resourceCreationTime' field has been set, false otherwise.
      */
    public boolean hasResourceCreationTime() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'resourceCreationTime' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearResourceCreationTime() {
      resourceCreationTime = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'apiKey' field.
      * @return The value.
      */
    public java.lang.String getApiKey() {
      return apiKey;
    }

    /**
      * Sets the value of the 'apiKey' field.
      * @param value The value of 'apiKey'.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder setApiKey(java.lang.String value) {
      validate(fields()[13], value);
      this.apiKey = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'apiKey' field has been set.
      * @return True if the 'apiKey' field has been set, false otherwise.
      */
    public boolean hasApiKey() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'apiKey' field.
      * @return This builder.
      */
    public com.fretron.Model.LBSResult.Builder clearApiKey() {
      apiKey = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    public LBSResult build() {
      try {
        LBSResult record = new LBSResult();
        record.mobileNumber = fieldSetFlags()[0] ? this.mobileNumber : (java.lang.String) defaultValue(fields()[0]);
        record.requestType = fieldSetFlags()[1] ? this.requestType : (java.lang.String) defaultValue(fields()[1]);
        record.requestId = fieldSetFlags()[2] ? this.requestId : (java.lang.String) defaultValue(fields()[2]);
        record.requestURL = fieldSetFlags()[3] ? this.requestURL : (java.lang.String) defaultValue(fields()[3]);
        record.statusCode = fieldSetFlags()[4] ? this.statusCode : (java.lang.Integer) defaultValue(fields()[4]);
        record.data = fieldSetFlags()[5] ? this.data : (java.lang.String) defaultValue(fields()[5]);
        record.error = fieldSetFlags()[6] ? this.error : (java.lang.String) defaultValue(fields()[6]);
        record.requestedAt = fieldSetFlags()[7] ? this.requestedAt : (java.lang.Long) defaultValue(fields()[7]);
        record.requestTime = fieldSetFlags()[8] ? this.requestTime : (java.lang.Long) defaultValue(fields()[8]);
        record.userId = fieldSetFlags()[9] ? this.userId : (java.lang.String) defaultValue(fields()[9]);
        record.orgId = fieldSetFlags()[10] ? this.orgId : (java.lang.String) defaultValue(fields()[10]);
        record.resourceIdentifier = fieldSetFlags()[11] ? this.resourceIdentifier : (java.lang.String) defaultValue(fields()[11]);
        record.resourceCreationTime = fieldSetFlags()[12] ? this.resourceCreationTime : (java.lang.Long) defaultValue(fields()[12]);
        record.apiKey = fieldSetFlags()[13] ? this.apiKey : (java.lang.String) defaultValue(fields()[13]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

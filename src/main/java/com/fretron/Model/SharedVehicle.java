/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SharedVehicle extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1526695639865557726L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SharedVehicle\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"vehicleId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sharedWithEmail\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"validFrom\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"validTill\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"accessLevel\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"DASHBOARD\"},{\"name\":\"sharedByCustomer\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sharedToCustomer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String vehicleId;
  @Deprecated public java.lang.String sharedWithEmail;
  @Deprecated public java.lang.Long validFrom;
  @Deprecated public java.lang.Long validTill;
  @Deprecated public java.lang.String accessLevel;
  @Deprecated public java.lang.String sharedByCustomer;
  @Deprecated public java.lang.String sharedToCustomer;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SharedVehicle() {}

  /**
   * All-args constructor.
   * @param vehicleId The new value for vehicleId
   * @param sharedWithEmail The new value for sharedWithEmail
   * @param validFrom The new value for validFrom
   * @param validTill The new value for validTill
   * @param accessLevel The new value for accessLevel
   * @param sharedByCustomer The new value for sharedByCustomer
   * @param sharedToCustomer The new value for sharedToCustomer
   */
  public SharedVehicle(java.lang.String vehicleId, java.lang.String sharedWithEmail, java.lang.Long validFrom, java.lang.Long validTill, java.lang.String accessLevel, java.lang.String sharedByCustomer, java.lang.String sharedToCustomer) {
    this.vehicleId = vehicleId;
    this.sharedWithEmail = sharedWithEmail;
    this.validFrom = validFrom;
    this.validTill = validTill;
    this.accessLevel = accessLevel;
    this.sharedByCustomer = sharedByCustomer;
    this.sharedToCustomer = sharedToCustomer;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return vehicleId;
    case 1: return sharedWithEmail;
    case 2: return validFrom;
    case 3: return validTill;
    case 4: return accessLevel;
    case 5: return sharedByCustomer;
    case 6: return sharedToCustomer;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: vehicleId = (java.lang.String)value$; break;
    case 1: sharedWithEmail = (java.lang.String)value$; break;
    case 2: validFrom = (java.lang.Long)value$; break;
    case 3: validTill = (java.lang.Long)value$; break;
    case 4: accessLevel = (java.lang.String)value$; break;
    case 5: sharedByCustomer = (java.lang.String)value$; break;
    case 6: sharedToCustomer = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'vehicleId' field.
   * @return The value of the 'vehicleId' field.
   */
  public java.lang.String getVehicleId() {
    return vehicleId;
  }

  /**
   * Sets the value of the 'vehicleId' field.
   * @param value the value to set.
   */
  public void setVehicleId(java.lang.String value) {
    this.vehicleId = value;
  }

  /**
   * Gets the value of the 'sharedWithEmail' field.
   * @return The value of the 'sharedWithEmail' field.
   */
  public java.lang.String getSharedWithEmail() {
    return sharedWithEmail;
  }

  /**
   * Sets the value of the 'sharedWithEmail' field.
   * @param value the value to set.
   */
  public void setSharedWithEmail(java.lang.String value) {
    this.sharedWithEmail = value;
  }

  /**
   * Gets the value of the 'validFrom' field.
   * @return The value of the 'validFrom' field.
   */
  public java.lang.Long getValidFrom() {
    return validFrom;
  }

  /**
   * Sets the value of the 'validFrom' field.
   * @param value the value to set.
   */
  public void setValidFrom(java.lang.Long value) {
    this.validFrom = value;
  }

  /**
   * Gets the value of the 'validTill' field.
   * @return The value of the 'validTill' field.
   */
  public java.lang.Long getValidTill() {
    return validTill;
  }

  /**
   * Sets the value of the 'validTill' field.
   * @param value the value to set.
   */
  public void setValidTill(java.lang.Long value) {
    this.validTill = value;
  }

  /**
   * Gets the value of the 'accessLevel' field.
   * @return The value of the 'accessLevel' field.
   */
  public java.lang.String getAccessLevel() {
    return accessLevel;
  }

  /**
   * Sets the value of the 'accessLevel' field.
   * @param value the value to set.
   */
  public void setAccessLevel(java.lang.String value) {
    this.accessLevel = value;
  }

  /**
   * Gets the value of the 'sharedByCustomer' field.
   * @return The value of the 'sharedByCustomer' field.
   */
  public java.lang.String getSharedByCustomer() {
    return sharedByCustomer;
  }

  /**
   * Sets the value of the 'sharedByCustomer' field.
   * @param value the value to set.
   */
  public void setSharedByCustomer(java.lang.String value) {
    this.sharedByCustomer = value;
  }

  /**
   * Gets the value of the 'sharedToCustomer' field.
   * @return The value of the 'sharedToCustomer' field.
   */
  public java.lang.String getSharedToCustomer() {
    return sharedToCustomer;
  }

  /**
   * Sets the value of the 'sharedToCustomer' field.
   * @param value the value to set.
   */
  public void setSharedToCustomer(java.lang.String value) {
    this.sharedToCustomer = value;
  }

  /**
   * Creates a new SharedVehicle RecordBuilder.
   * @return A new SharedVehicle RecordBuilder
   */
  public static com.fretron.Model.SharedVehicle.Builder newBuilder() {
    return new com.fretron.Model.SharedVehicle.Builder();
  }

  /**
   * Creates a new SharedVehicle RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SharedVehicle RecordBuilder
   */
  public static com.fretron.Model.SharedVehicle.Builder newBuilder(com.fretron.Model.SharedVehicle.Builder other) {
    return new com.fretron.Model.SharedVehicle.Builder(other);
  }

  /**
   * Creates a new SharedVehicle RecordBuilder by copying an existing SharedVehicle instance.
   * @param other The existing instance to copy.
   * @return A new SharedVehicle RecordBuilder
   */
  public static com.fretron.Model.SharedVehicle.Builder newBuilder(com.fretron.Model.SharedVehicle other) {
    return new com.fretron.Model.SharedVehicle.Builder(other);
  }

  /**
   * RecordBuilder for SharedVehicle instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SharedVehicle>
    implements org.apache.avro.data.RecordBuilder<SharedVehicle> {

    private java.lang.String vehicleId;
    private java.lang.String sharedWithEmail;
    private java.lang.Long validFrom;
    private java.lang.Long validTill;
    private java.lang.String accessLevel;
    private java.lang.String sharedByCustomer;
    private java.lang.String sharedToCustomer;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.SharedVehicle.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[0].schema(), other.vehicleId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sharedWithEmail)) {
        this.sharedWithEmail = data().deepCopy(fields()[1].schema(), other.sharedWithEmail);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.validFrom)) {
        this.validFrom = data().deepCopy(fields()[2].schema(), other.validFrom);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.validTill)) {
        this.validTill = data().deepCopy(fields()[3].schema(), other.validTill);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.accessLevel)) {
        this.accessLevel = data().deepCopy(fields()[4].schema(), other.accessLevel);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sharedByCustomer)) {
        this.sharedByCustomer = data().deepCopy(fields()[5].schema(), other.sharedByCustomer);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sharedToCustomer)) {
        this.sharedToCustomer = data().deepCopy(fields()[6].schema(), other.sharedToCustomer);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SharedVehicle instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.SharedVehicle other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[0].schema(), other.vehicleId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sharedWithEmail)) {
        this.sharedWithEmail = data().deepCopy(fields()[1].schema(), other.sharedWithEmail);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.validFrom)) {
        this.validFrom = data().deepCopy(fields()[2].schema(), other.validFrom);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.validTill)) {
        this.validTill = data().deepCopy(fields()[3].schema(), other.validTill);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.accessLevel)) {
        this.accessLevel = data().deepCopy(fields()[4].schema(), other.accessLevel);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sharedByCustomer)) {
        this.sharedByCustomer = data().deepCopy(fields()[5].schema(), other.sharedByCustomer);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sharedToCustomer)) {
        this.sharedToCustomer = data().deepCopy(fields()[6].schema(), other.sharedToCustomer);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'vehicleId' field.
      * @return The value.
      */
    public java.lang.String getVehicleId() {
      return vehicleId;
    }

    /**
      * Sets the value of the 'vehicleId' field.
      * @param value The value of 'vehicleId'.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder setVehicleId(java.lang.String value) {
      validate(fields()[0], value);
      this.vehicleId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleId' field has been set.
      * @return True if the 'vehicleId' field has been set, false otherwise.
      */
    public boolean hasVehicleId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'vehicleId' field.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder clearVehicleId() {
      vehicleId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sharedWithEmail' field.
      * @return The value.
      */
    public java.lang.String getSharedWithEmail() {
      return sharedWithEmail;
    }

    /**
      * Sets the value of the 'sharedWithEmail' field.
      * @param value The value of 'sharedWithEmail'.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder setSharedWithEmail(java.lang.String value) {
      validate(fields()[1], value);
      this.sharedWithEmail = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sharedWithEmail' field has been set.
      * @return True if the 'sharedWithEmail' field has been set, false otherwise.
      */
    public boolean hasSharedWithEmail() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sharedWithEmail' field.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder clearSharedWithEmail() {
      sharedWithEmail = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'validFrom' field.
      * @return The value.
      */
    public java.lang.Long getValidFrom() {
      return validFrom;
    }

    /**
      * Sets the value of the 'validFrom' field.
      * @param value The value of 'validFrom'.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder setValidFrom(java.lang.Long value) {
      validate(fields()[2], value);
      this.validFrom = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'validFrom' field has been set.
      * @return True if the 'validFrom' field has been set, false otherwise.
      */
    public boolean hasValidFrom() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'validFrom' field.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder clearValidFrom() {
      validFrom = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'validTill' field.
      * @return The value.
      */
    public java.lang.Long getValidTill() {
      return validTill;
    }

    /**
      * Sets the value of the 'validTill' field.
      * @param value The value of 'validTill'.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder setValidTill(java.lang.Long value) {
      validate(fields()[3], value);
      this.validTill = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'validTill' field has been set.
      * @return True if the 'validTill' field has been set, false otherwise.
      */
    public boolean hasValidTill() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'validTill' field.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder clearValidTill() {
      validTill = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'accessLevel' field.
      * @return The value.
      */
    public java.lang.String getAccessLevel() {
      return accessLevel;
    }

    /**
      * Sets the value of the 'accessLevel' field.
      * @param value The value of 'accessLevel'.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder setAccessLevel(java.lang.String value) {
      validate(fields()[4], value);
      this.accessLevel = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'accessLevel' field has been set.
      * @return True if the 'accessLevel' field has been set, false otherwise.
      */
    public boolean hasAccessLevel() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'accessLevel' field.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder clearAccessLevel() {
      accessLevel = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'sharedByCustomer' field.
      * @return The value.
      */
    public java.lang.String getSharedByCustomer() {
      return sharedByCustomer;
    }

    /**
      * Sets the value of the 'sharedByCustomer' field.
      * @param value The value of 'sharedByCustomer'.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder setSharedByCustomer(java.lang.String value) {
      validate(fields()[5], value);
      this.sharedByCustomer = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'sharedByCustomer' field has been set.
      * @return True if the 'sharedByCustomer' field has been set, false otherwise.
      */
    public boolean hasSharedByCustomer() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'sharedByCustomer' field.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder clearSharedByCustomer() {
      sharedByCustomer = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'sharedToCustomer' field.
      * @return The value.
      */
    public java.lang.String getSharedToCustomer() {
      return sharedToCustomer;
    }

    /**
      * Sets the value of the 'sharedToCustomer' field.
      * @param value The value of 'sharedToCustomer'.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder setSharedToCustomer(java.lang.String value) {
      validate(fields()[6], value);
      this.sharedToCustomer = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'sharedToCustomer' field has been set.
      * @return True if the 'sharedToCustomer' field has been set, false otherwise.
      */
    public boolean hasSharedToCustomer() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'sharedToCustomer' field.
      * @return This builder.
      */
    public com.fretron.Model.SharedVehicle.Builder clearSharedToCustomer() {
      sharedToCustomer = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public SharedVehicle build() {
      try {
        SharedVehicle record = new SharedVehicle();
        record.vehicleId = fieldSetFlags()[0] ? this.vehicleId : (java.lang.String) defaultValue(fields()[0]);
        record.sharedWithEmail = fieldSetFlags()[1] ? this.sharedWithEmail : (java.lang.String) defaultValue(fields()[1]);
        record.validFrom = fieldSetFlags()[2] ? this.validFrom : (java.lang.Long) defaultValue(fields()[2]);
        record.validTill = fieldSetFlags()[3] ? this.validTill : (java.lang.Long) defaultValue(fields()[3]);
        record.accessLevel = fieldSetFlags()[4] ? this.accessLevel : (java.lang.String) defaultValue(fields()[4]);
        record.sharedByCustomer = fieldSetFlags()[5] ? this.sharedByCustomer : (java.lang.String) defaultValue(fields()[5]);
        record.sharedToCustomer = fieldSetFlags()[6] ? this.sharedToCustomer : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

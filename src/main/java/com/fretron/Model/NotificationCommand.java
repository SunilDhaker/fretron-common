/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class NotificationCommand extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5600264091427384883L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NotificationCommand\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subscribers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cc\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"to\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"mobileNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"module\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"channels\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceIdentifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subject\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"content\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"htmlContent\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"redirectURL\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"threadId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"debounceTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdOn\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"isSmsQuotaOver\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isEmailQuotaOver\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.util.List<java.lang.String> subscribers;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.util.List<java.lang.String> cc;
  @Deprecated public java.lang.String to;
  @Deprecated public java.util.List<java.lang.String> mobileNumbers;
  @Deprecated public java.lang.String module;
  @Deprecated public java.util.List<java.lang.String> channels;
  @Deprecated public java.lang.String resourceId;
  @Deprecated public java.lang.String resourceIdentifier;
  @Deprecated public java.lang.String resourceType;
  @Deprecated public java.lang.String eventName;
  @Deprecated public java.lang.String subject;
  @Deprecated public java.lang.String content;
  @Deprecated public java.lang.String htmlContent;
  @Deprecated public java.lang.String redirectURL;
  @Deprecated public java.lang.String threadId;
  @Deprecated public java.lang.Long debounceTime;
  @Deprecated public java.lang.String status;
  @Deprecated public java.lang.Long createdOn;
  @Deprecated public java.lang.Boolean isSmsQuotaOver;
  @Deprecated public java.lang.Boolean isEmailQuotaOver;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public NotificationCommand() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param subscribers The new value for subscribers
   * @param orgId The new value for orgId
   * @param cc The new value for cc
   * @param to The new value for to
   * @param mobileNumbers The new value for mobileNumbers
   * @param module The new value for module
   * @param channels The new value for channels
   * @param resourceId The new value for resourceId
   * @param resourceIdentifier The new value for resourceIdentifier
   * @param resourceType The new value for resourceType
   * @param eventName The new value for eventName
   * @param subject The new value for subject
   * @param content The new value for content
   * @param htmlContent The new value for htmlContent
   * @param redirectURL The new value for redirectURL
   * @param threadId The new value for threadId
   * @param debounceTime The new value for debounceTime
   * @param status The new value for status
   * @param createdOn The new value for createdOn
   * @param isSmsQuotaOver The new value for isSmsQuotaOver
   * @param isEmailQuotaOver The new value for isEmailQuotaOver
   */
  public NotificationCommand(java.lang.String uuid, java.util.List<java.lang.String> subscribers, java.lang.String orgId, java.util.List<java.lang.String> cc, java.lang.String to, java.util.List<java.lang.String> mobileNumbers, java.lang.String module, java.util.List<java.lang.String> channels, java.lang.String resourceId, java.lang.String resourceIdentifier, java.lang.String resourceType, java.lang.String eventName, java.lang.String subject, java.lang.String content, java.lang.String htmlContent, java.lang.String redirectURL, java.lang.String threadId, java.lang.Long debounceTime, java.lang.String status, java.lang.Long createdOn, java.lang.Boolean isSmsQuotaOver, java.lang.Boolean isEmailQuotaOver) {
    this.uuid = uuid;
    this.subscribers = subscribers;
    this.orgId = orgId;
    this.cc = cc;
    this.to = to;
    this.mobileNumbers = mobileNumbers;
    this.module = module;
    this.channels = channels;
    this.resourceId = resourceId;
    this.resourceIdentifier = resourceIdentifier;
    this.resourceType = resourceType;
    this.eventName = eventName;
    this.subject = subject;
    this.content = content;
    this.htmlContent = htmlContent;
    this.redirectURL = redirectURL;
    this.threadId = threadId;
    this.debounceTime = debounceTime;
    this.status = status;
    this.createdOn = createdOn;
    this.isSmsQuotaOver = isSmsQuotaOver;
    this.isEmailQuotaOver = isEmailQuotaOver;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return subscribers;
    case 2: return orgId;
    case 3: return cc;
    case 4: return to;
    case 5: return mobileNumbers;
    case 6: return module;
    case 7: return channels;
    case 8: return resourceId;
    case 9: return resourceIdentifier;
    case 10: return resourceType;
    case 11: return eventName;
    case 12: return subject;
    case 13: return content;
    case 14: return htmlContent;
    case 15: return redirectURL;
    case 16: return threadId;
    case 17: return debounceTime;
    case 18: return status;
    case 19: return createdOn;
    case 20: return isSmsQuotaOver;
    case 21: return isEmailQuotaOver;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: subscribers = (java.util.List<java.lang.String>)value$; break;
    case 2: orgId = (java.lang.String)value$; break;
    case 3: cc = (java.util.List<java.lang.String>)value$; break;
    case 4: to = (java.lang.String)value$; break;
    case 5: mobileNumbers = (java.util.List<java.lang.String>)value$; break;
    case 6: module = (java.lang.String)value$; break;
    case 7: channels = (java.util.List<java.lang.String>)value$; break;
    case 8: resourceId = (java.lang.String)value$; break;
    case 9: resourceIdentifier = (java.lang.String)value$; break;
    case 10: resourceType = (java.lang.String)value$; break;
    case 11: eventName = (java.lang.String)value$; break;
    case 12: subject = (java.lang.String)value$; break;
    case 13: content = (java.lang.String)value$; break;
    case 14: htmlContent = (java.lang.String)value$; break;
    case 15: redirectURL = (java.lang.String)value$; break;
    case 16: threadId = (java.lang.String)value$; break;
    case 17: debounceTime = (java.lang.Long)value$; break;
    case 18: status = (java.lang.String)value$; break;
    case 19: createdOn = (java.lang.Long)value$; break;
    case 20: isSmsQuotaOver = (java.lang.Boolean)value$; break;
    case 21: isEmailQuotaOver = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'subscribers' field.
   * @return The value of the 'subscribers' field.
   */
  public java.util.List<java.lang.String> getSubscribers() {
    return subscribers;
  }

  /**
   * Sets the value of the 'subscribers' field.
   * @param value the value to set.
   */
  public void setSubscribers(java.util.List<java.lang.String> value) {
    this.subscribers = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'cc' field.
   * @return The value of the 'cc' field.
   */
  public java.util.List<java.lang.String> getCc() {
    return cc;
  }

  /**
   * Sets the value of the 'cc' field.
   * @param value the value to set.
   */
  public void setCc(java.util.List<java.lang.String> value) {
    this.cc = value;
  }

  /**
   * Gets the value of the 'to' field.
   * @return The value of the 'to' field.
   */
  public java.lang.String getTo() {
    return to;
  }

  /**
   * Sets the value of the 'to' field.
   * @param value the value to set.
   */
  public void setTo(java.lang.String value) {
    this.to = value;
  }

  /**
   * Gets the value of the 'mobileNumbers' field.
   * @return The value of the 'mobileNumbers' field.
   */
  public java.util.List<java.lang.String> getMobileNumbers() {
    return mobileNumbers;
  }

  /**
   * Sets the value of the 'mobileNumbers' field.
   * @param value the value to set.
   */
  public void setMobileNumbers(java.util.List<java.lang.String> value) {
    this.mobileNumbers = value;
  }

  /**
   * Gets the value of the 'module' field.
   * @return The value of the 'module' field.
   */
  public java.lang.String getModule() {
    return module;
  }

  /**
   * Sets the value of the 'module' field.
   * @param value the value to set.
   */
  public void setModule(java.lang.String value) {
    this.module = value;
  }

  /**
   * Gets the value of the 'channels' field.
   * @return The value of the 'channels' field.
   */
  public java.util.List<java.lang.String> getChannels() {
    return channels;
  }

  /**
   * Sets the value of the 'channels' field.
   * @param value the value to set.
   */
  public void setChannels(java.util.List<java.lang.String> value) {
    this.channels = value;
  }

  /**
   * Gets the value of the 'resourceId' field.
   * @return The value of the 'resourceId' field.
   */
  public java.lang.String getResourceId() {
    return resourceId;
  }

  /**
   * Sets the value of the 'resourceId' field.
   * @param value the value to set.
   */
  public void setResourceId(java.lang.String value) {
    this.resourceId = value;
  }

  /**
   * Gets the value of the 'resourceIdentifier' field.
   * @return The value of the 'resourceIdentifier' field.
   */
  public java.lang.String getResourceIdentifier() {
    return resourceIdentifier;
  }

  /**
   * Sets the value of the 'resourceIdentifier' field.
   * @param value the value to set.
   */
  public void setResourceIdentifier(java.lang.String value) {
    this.resourceIdentifier = value;
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.String getResourceType() {
    return resourceType;
  }

  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.String value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'eventName' field.
   * @return The value of the 'eventName' field.
   */
  public java.lang.String getEventName() {
    return eventName;
  }

  /**
   * Sets the value of the 'eventName' field.
   * @param value the value to set.
   */
  public void setEventName(java.lang.String value) {
    this.eventName = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public java.lang.String getSubject() {
    return subject;
  }

  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(java.lang.String value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'content' field.
   * @return The value of the 'content' field.
   */
  public java.lang.String getContent() {
    return content;
  }

  /**
   * Sets the value of the 'content' field.
   * @param value the value to set.
   */
  public void setContent(java.lang.String value) {
    this.content = value;
  }

  /**
   * Gets the value of the 'htmlContent' field.
   * @return The value of the 'htmlContent' field.
   */
  public java.lang.String getHtmlContent() {
    return htmlContent;
  }

  /**
   * Sets the value of the 'htmlContent' field.
   * @param value the value to set.
   */
  public void setHtmlContent(java.lang.String value) {
    this.htmlContent = value;
  }

  /**
   * Gets the value of the 'redirectURL' field.
   * @return The value of the 'redirectURL' field.
   */
  public java.lang.String getRedirectURL() {
    return redirectURL;
  }

  /**
   * Sets the value of the 'redirectURL' field.
   * @param value the value to set.
   */
  public void setRedirectURL(java.lang.String value) {
    this.redirectURL = value;
  }

  /**
   * Gets the value of the 'threadId' field.
   * @return The value of the 'threadId' field.
   */
  public java.lang.String getThreadId() {
    return threadId;
  }

  /**
   * Sets the value of the 'threadId' field.
   * @param value the value to set.
   */
  public void setThreadId(java.lang.String value) {
    this.threadId = value;
  }

  /**
   * Gets the value of the 'debounceTime' field.
   * @return The value of the 'debounceTime' field.
   */
  public java.lang.Long getDebounceTime() {
    return debounceTime;
  }

  /**
   * Sets the value of the 'debounceTime' field.
   * @param value the value to set.
   */
  public void setDebounceTime(java.lang.Long value) {
    this.debounceTime = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'createdOn' field.
   * @return The value of the 'createdOn' field.
   */
  public java.lang.Long getCreatedOn() {
    return createdOn;
  }

  /**
   * Sets the value of the 'createdOn' field.
   * @param value the value to set.
   */
  public void setCreatedOn(java.lang.Long value) {
    this.createdOn = value;
  }

  /**
   * Gets the value of the 'isSmsQuotaOver' field.
   * @return The value of the 'isSmsQuotaOver' field.
   */
  public java.lang.Boolean getIsSmsQuotaOver() {
    return isSmsQuotaOver;
  }

  /**
   * Sets the value of the 'isSmsQuotaOver' field.
   * @param value the value to set.
   */
  public void setIsSmsQuotaOver(java.lang.Boolean value) {
    this.isSmsQuotaOver = value;
  }

  /**
   * Gets the value of the 'isEmailQuotaOver' field.
   * @return The value of the 'isEmailQuotaOver' field.
   */
  public java.lang.Boolean getIsEmailQuotaOver() {
    return isEmailQuotaOver;
  }

  /**
   * Sets the value of the 'isEmailQuotaOver' field.
   * @param value the value to set.
   */
  public void setIsEmailQuotaOver(java.lang.Boolean value) {
    this.isEmailQuotaOver = value;
  }

  /**
   * Creates a new NotificationCommand RecordBuilder.
   * @return A new NotificationCommand RecordBuilder
   */
  public static com.fretron.Model.NotificationCommand.Builder newBuilder() {
    return new com.fretron.Model.NotificationCommand.Builder();
  }

  /**
   * Creates a new NotificationCommand RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new NotificationCommand RecordBuilder
   */
  public static com.fretron.Model.NotificationCommand.Builder newBuilder(com.fretron.Model.NotificationCommand.Builder other) {
    return new com.fretron.Model.NotificationCommand.Builder(other);
  }

  /**
   * Creates a new NotificationCommand RecordBuilder by copying an existing NotificationCommand instance.
   * @param other The existing instance to copy.
   * @return A new NotificationCommand RecordBuilder
   */
  public static com.fretron.Model.NotificationCommand.Builder newBuilder(com.fretron.Model.NotificationCommand other) {
    return new com.fretron.Model.NotificationCommand.Builder(other);
  }

  /**
   * RecordBuilder for NotificationCommand instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NotificationCommand>
    implements org.apache.avro.data.RecordBuilder<NotificationCommand> {

    private java.lang.String uuid;
    private java.util.List<java.lang.String> subscribers;
    private java.lang.String orgId;
    private java.util.List<java.lang.String> cc;
    private java.lang.String to;
    private java.util.List<java.lang.String> mobileNumbers;
    private java.lang.String module;
    private java.util.List<java.lang.String> channels;
    private java.lang.String resourceId;
    private java.lang.String resourceIdentifier;
    private java.lang.String resourceType;
    private java.lang.String eventName;
    private java.lang.String subject;
    private java.lang.String content;
    private java.lang.String htmlContent;
    private java.lang.String redirectURL;
    private java.lang.String threadId;
    private java.lang.Long debounceTime;
    private java.lang.String status;
    private java.lang.Long createdOn;
    private java.lang.Boolean isSmsQuotaOver;
    private java.lang.Boolean isEmailQuotaOver;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.NotificationCommand.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.subscribers)) {
        this.subscribers = data().deepCopy(fields()[1].schema(), other.subscribers);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cc)) {
        this.cc = data().deepCopy(fields()[3].schema(), other.cc);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.to)) {
        this.to = data().deepCopy(fields()[4].schema(), other.to);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.mobileNumbers)) {
        this.mobileNumbers = data().deepCopy(fields()[5].schema(), other.mobileNumbers);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.module)) {
        this.module = data().deepCopy(fields()[6].schema(), other.module);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.channels)) {
        this.channels = data().deepCopy(fields()[7].schema(), other.channels);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.resourceId)) {
        this.resourceId = data().deepCopy(fields()[8].schema(), other.resourceId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.resourceIdentifier)) {
        this.resourceIdentifier = data().deepCopy(fields()[9].schema(), other.resourceIdentifier);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[10].schema(), other.resourceType);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.eventName)) {
        this.eventName = data().deepCopy(fields()[11].schema(), other.eventName);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.subject)) {
        this.subject = data().deepCopy(fields()[12].schema(), other.subject);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.content)) {
        this.content = data().deepCopy(fields()[13].schema(), other.content);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.htmlContent)) {
        this.htmlContent = data().deepCopy(fields()[14].schema(), other.htmlContent);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.redirectURL)) {
        this.redirectURL = data().deepCopy(fields()[15].schema(), other.redirectURL);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.threadId)) {
        this.threadId = data().deepCopy(fields()[16].schema(), other.threadId);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.debounceTime)) {
        this.debounceTime = data().deepCopy(fields()[17].schema(), other.debounceTime);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.status)) {
        this.status = data().deepCopy(fields()[18].schema(), other.status);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.createdOn)) {
        this.createdOn = data().deepCopy(fields()[19].schema(), other.createdOn);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.isSmsQuotaOver)) {
        this.isSmsQuotaOver = data().deepCopy(fields()[20].schema(), other.isSmsQuotaOver);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.isEmailQuotaOver)) {
        this.isEmailQuotaOver = data().deepCopy(fields()[21].schema(), other.isEmailQuotaOver);
        fieldSetFlags()[21] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing NotificationCommand instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.NotificationCommand other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.subscribers)) {
        this.subscribers = data().deepCopy(fields()[1].schema(), other.subscribers);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cc)) {
        this.cc = data().deepCopy(fields()[3].schema(), other.cc);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.to)) {
        this.to = data().deepCopy(fields()[4].schema(), other.to);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.mobileNumbers)) {
        this.mobileNumbers = data().deepCopy(fields()[5].schema(), other.mobileNumbers);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.module)) {
        this.module = data().deepCopy(fields()[6].schema(), other.module);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.channels)) {
        this.channels = data().deepCopy(fields()[7].schema(), other.channels);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.resourceId)) {
        this.resourceId = data().deepCopy(fields()[8].schema(), other.resourceId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.resourceIdentifier)) {
        this.resourceIdentifier = data().deepCopy(fields()[9].schema(), other.resourceIdentifier);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[10].schema(), other.resourceType);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.eventName)) {
        this.eventName = data().deepCopy(fields()[11].schema(), other.eventName);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.subject)) {
        this.subject = data().deepCopy(fields()[12].schema(), other.subject);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.content)) {
        this.content = data().deepCopy(fields()[13].schema(), other.content);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.htmlContent)) {
        this.htmlContent = data().deepCopy(fields()[14].schema(), other.htmlContent);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.redirectURL)) {
        this.redirectURL = data().deepCopy(fields()[15].schema(), other.redirectURL);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.threadId)) {
        this.threadId = data().deepCopy(fields()[16].schema(), other.threadId);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.debounceTime)) {
        this.debounceTime = data().deepCopy(fields()[17].schema(), other.debounceTime);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.status)) {
        this.status = data().deepCopy(fields()[18].schema(), other.status);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.createdOn)) {
        this.createdOn = data().deepCopy(fields()[19].schema(), other.createdOn);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.isSmsQuotaOver)) {
        this.isSmsQuotaOver = data().deepCopy(fields()[20].schema(), other.isSmsQuotaOver);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.isEmailQuotaOver)) {
        this.isEmailQuotaOver = data().deepCopy(fields()[21].schema(), other.isEmailQuotaOver);
        fieldSetFlags()[21] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'subscribers' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getSubscribers() {
      return subscribers;
    }

    /**
      * Sets the value of the 'subscribers' field.
      * @param value The value of 'subscribers'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setSubscribers(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.subscribers = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'subscribers' field has been set.
      * @return True if the 'subscribers' field has been set, false otherwise.
      */
    public boolean hasSubscribers() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'subscribers' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearSubscribers() {
      subscribers = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setOrgId(java.lang.String value) {
      validate(fields()[2], value);
      this.orgId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'cc' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getCc() {
      return cc;
    }

    /**
      * Sets the value of the 'cc' field.
      * @param value The value of 'cc'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setCc(java.util.List<java.lang.String> value) {
      validate(fields()[3], value);
      this.cc = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'cc' field has been set.
      * @return True if the 'cc' field has been set, false otherwise.
      */
    public boolean hasCc() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'cc' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearCc() {
      cc = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'to' field.
      * @return The value.
      */
    public java.lang.String getTo() {
      return to;
    }

    /**
      * Sets the value of the 'to' field.
      * @param value The value of 'to'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setTo(java.lang.String value) {
      validate(fields()[4], value);
      this.to = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'to' field has been set.
      * @return True if the 'to' field has been set, false otherwise.
      */
    public boolean hasTo() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'to' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearTo() {
      to = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'mobileNumbers' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getMobileNumbers() {
      return mobileNumbers;
    }

    /**
      * Sets the value of the 'mobileNumbers' field.
      * @param value The value of 'mobileNumbers'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setMobileNumbers(java.util.List<java.lang.String> value) {
      validate(fields()[5], value);
      this.mobileNumbers = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'mobileNumbers' field has been set.
      * @return True if the 'mobileNumbers' field has been set, false otherwise.
      */
    public boolean hasMobileNumbers() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'mobileNumbers' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearMobileNumbers() {
      mobileNumbers = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'module' field.
      * @return The value.
      */
    public java.lang.String getModule() {
      return module;
    }

    /**
      * Sets the value of the 'module' field.
      * @param value The value of 'module'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setModule(java.lang.String value) {
      validate(fields()[6], value);
      this.module = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'module' field has been set.
      * @return True if the 'module' field has been set, false otherwise.
      */
    public boolean hasModule() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'module' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearModule() {
      module = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'channels' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getChannels() {
      return channels;
    }

    /**
      * Sets the value of the 'channels' field.
      * @param value The value of 'channels'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setChannels(java.util.List<java.lang.String> value) {
      validate(fields()[7], value);
      this.channels = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'channels' field has been set.
      * @return True if the 'channels' field has been set, false otherwise.
      */
    public boolean hasChannels() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'channels' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearChannels() {
      channels = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'resourceId' field.
      * @return The value.
      */
    public java.lang.String getResourceId() {
      return resourceId;
    }

    /**
      * Sets the value of the 'resourceId' field.
      * @param value The value of 'resourceId'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setResourceId(java.lang.String value) {
      validate(fields()[8], value);
      this.resourceId = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceId' field has been set.
      * @return True if the 'resourceId' field has been set, false otherwise.
      */
    public boolean hasResourceId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'resourceId' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearResourceId() {
      resourceId = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'resourceIdentifier' field.
      * @return The value.
      */
    public java.lang.String getResourceIdentifier() {
      return resourceIdentifier;
    }

    /**
      * Sets the value of the 'resourceIdentifier' field.
      * @param value The value of 'resourceIdentifier'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setResourceIdentifier(java.lang.String value) {
      validate(fields()[9], value);
      this.resourceIdentifier = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceIdentifier' field has been set.
      * @return True if the 'resourceIdentifier' field has been set, false otherwise.
      */
    public boolean hasResourceIdentifier() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'resourceIdentifier' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearResourceIdentifier() {
      resourceIdentifier = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.String getResourceType() {
      return resourceType;
    }

    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setResourceType(java.lang.String value) {
      validate(fields()[10], value);
      this.resourceType = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventName' field.
      * @return The value.
      */
    public java.lang.String getEventName() {
      return eventName;
    }

    /**
      * Sets the value of the 'eventName' field.
      * @param value The value of 'eventName'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setEventName(java.lang.String value) {
      validate(fields()[11], value);
      this.eventName = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'eventName' field has been set.
      * @return True if the 'eventName' field has been set, false otherwise.
      */
    public boolean hasEventName() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'eventName' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearEventName() {
      eventName = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public java.lang.String getSubject() {
      return subject;
    }

    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setSubject(java.lang.String value) {
      validate(fields()[12], value);
      this.subject = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearSubject() {
      subject = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'content' field.
      * @return The value.
      */
    public java.lang.String getContent() {
      return content;
    }

    /**
      * Sets the value of the 'content' field.
      * @param value The value of 'content'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setContent(java.lang.String value) {
      validate(fields()[13], value);
      this.content = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'content' field has been set.
      * @return True if the 'content' field has been set, false otherwise.
      */
    public boolean hasContent() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'content' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearContent() {
      content = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'htmlContent' field.
      * @return The value.
      */
    public java.lang.String getHtmlContent() {
      return htmlContent;
    }

    /**
      * Sets the value of the 'htmlContent' field.
      * @param value The value of 'htmlContent'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setHtmlContent(java.lang.String value) {
      validate(fields()[14], value);
      this.htmlContent = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'htmlContent' field has been set.
      * @return True if the 'htmlContent' field has been set, false otherwise.
      */
    public boolean hasHtmlContent() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'htmlContent' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearHtmlContent() {
      htmlContent = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'redirectURL' field.
      * @return The value.
      */
    public java.lang.String getRedirectURL() {
      return redirectURL;
    }

    /**
      * Sets the value of the 'redirectURL' field.
      * @param value The value of 'redirectURL'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setRedirectURL(java.lang.String value) {
      validate(fields()[15], value);
      this.redirectURL = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'redirectURL' field has been set.
      * @return True if the 'redirectURL' field has been set, false otherwise.
      */
    public boolean hasRedirectURL() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'redirectURL' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearRedirectURL() {
      redirectURL = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'threadId' field.
      * @return The value.
      */
    public java.lang.String getThreadId() {
      return threadId;
    }

    /**
      * Sets the value of the 'threadId' field.
      * @param value The value of 'threadId'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setThreadId(java.lang.String value) {
      validate(fields()[16], value);
      this.threadId = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'threadId' field has been set.
      * @return True if the 'threadId' field has been set, false otherwise.
      */
    public boolean hasThreadId() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'threadId' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearThreadId() {
      threadId = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'debounceTime' field.
      * @return The value.
      */
    public java.lang.Long getDebounceTime() {
      return debounceTime;
    }

    /**
      * Sets the value of the 'debounceTime' field.
      * @param value The value of 'debounceTime'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setDebounceTime(java.lang.Long value) {
      validate(fields()[17], value);
      this.debounceTime = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'debounceTime' field has been set.
      * @return True if the 'debounceTime' field has been set, false otherwise.
      */
    public boolean hasDebounceTime() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'debounceTime' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearDebounceTime() {
      debounceTime = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setStatus(java.lang.String value) {
      validate(fields()[18], value);
      this.status = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearStatus() {
      status = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdOn' field.
      * @return The value.
      */
    public java.lang.Long getCreatedOn() {
      return createdOn;
    }

    /**
      * Sets the value of the 'createdOn' field.
      * @param value The value of 'createdOn'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setCreatedOn(java.lang.Long value) {
      validate(fields()[19], value);
      this.createdOn = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'createdOn' field has been set.
      * @return True if the 'createdOn' field has been set, false otherwise.
      */
    public boolean hasCreatedOn() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'createdOn' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearCreatedOn() {
      createdOn = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'isSmsQuotaOver' field.
      * @return The value.
      */
    public java.lang.Boolean getIsSmsQuotaOver() {
      return isSmsQuotaOver;
    }

    /**
      * Sets the value of the 'isSmsQuotaOver' field.
      * @param value The value of 'isSmsQuotaOver'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setIsSmsQuotaOver(java.lang.Boolean value) {
      validate(fields()[20], value);
      this.isSmsQuotaOver = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'isSmsQuotaOver' field has been set.
      * @return True if the 'isSmsQuotaOver' field has been set, false otherwise.
      */
    public boolean hasIsSmsQuotaOver() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'isSmsQuotaOver' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearIsSmsQuotaOver() {
      isSmsQuotaOver = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'isEmailQuotaOver' field.
      * @return The value.
      */
    public java.lang.Boolean getIsEmailQuotaOver() {
      return isEmailQuotaOver;
    }

    /**
      * Sets the value of the 'isEmailQuotaOver' field.
      * @param value The value of 'isEmailQuotaOver'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder setIsEmailQuotaOver(java.lang.Boolean value) {
      validate(fields()[21], value);
      this.isEmailQuotaOver = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'isEmailQuotaOver' field has been set.
      * @return True if the 'isEmailQuotaOver' field has been set, false otherwise.
      */
    public boolean hasIsEmailQuotaOver() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'isEmailQuotaOver' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationCommand.Builder clearIsEmailQuotaOver() {
      isEmailQuotaOver = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    @Override
    public NotificationCommand build() {
      try {
        NotificationCommand record = new NotificationCommand();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.subscribers = fieldSetFlags()[1] ? this.subscribers : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.orgId = fieldSetFlags()[2] ? this.orgId : (java.lang.String) defaultValue(fields()[2]);
        record.cc = fieldSetFlags()[3] ? this.cc : (java.util.List<java.lang.String>) defaultValue(fields()[3]);
        record.to = fieldSetFlags()[4] ? this.to : (java.lang.String) defaultValue(fields()[4]);
        record.mobileNumbers = fieldSetFlags()[5] ? this.mobileNumbers : (java.util.List<java.lang.String>) defaultValue(fields()[5]);
        record.module = fieldSetFlags()[6] ? this.module : (java.lang.String) defaultValue(fields()[6]);
        record.channels = fieldSetFlags()[7] ? this.channels : (java.util.List<java.lang.String>) defaultValue(fields()[7]);
        record.resourceId = fieldSetFlags()[8] ? this.resourceId : (java.lang.String) defaultValue(fields()[8]);
        record.resourceIdentifier = fieldSetFlags()[9] ? this.resourceIdentifier : (java.lang.String) defaultValue(fields()[9]);
        record.resourceType = fieldSetFlags()[10] ? this.resourceType : (java.lang.String) defaultValue(fields()[10]);
        record.eventName = fieldSetFlags()[11] ? this.eventName : (java.lang.String) defaultValue(fields()[11]);
        record.subject = fieldSetFlags()[12] ? this.subject : (java.lang.String) defaultValue(fields()[12]);
        record.content = fieldSetFlags()[13] ? this.content : (java.lang.String) defaultValue(fields()[13]);
        record.htmlContent = fieldSetFlags()[14] ? this.htmlContent : (java.lang.String) defaultValue(fields()[14]);
        record.redirectURL = fieldSetFlags()[15] ? this.redirectURL : (java.lang.String) defaultValue(fields()[15]);
        record.threadId = fieldSetFlags()[16] ? this.threadId : (java.lang.String) defaultValue(fields()[16]);
        record.debounceTime = fieldSetFlags()[17] ? this.debounceTime : (java.lang.Long) defaultValue(fields()[17]);
        record.status = fieldSetFlags()[18] ? this.status : (java.lang.String) defaultValue(fields()[18]);
        record.createdOn = fieldSetFlags()[19] ? this.createdOn : (java.lang.Long) defaultValue(fields()[19]);
        record.isSmsQuotaOver = fieldSetFlags()[20] ? this.isSmsQuotaOver : (java.lang.Boolean) defaultValue(fields()[20]);
        record.isEmailQuotaOver = fieldSetFlags()[21] ? this.isEmailQuotaOver : (java.lang.Boolean) defaultValue(fields()[21]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

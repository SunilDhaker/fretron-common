/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Position extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6850939443117968332L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Position\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"]},{\"name\":\"attributes\",\"type\":{\"type\":\"record\",\"name\":\"Attributes\",\"fields\":[{\"name\":\"battery\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"alarm\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ip\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"distance\",\"type\":[\"null\",\"double\"]},{\"name\":\"totalDistance\",\"type\":[\"null\",\"double\"]}]}},{\"name\":\"deviceId\",\"type\":[\"null\",\"int\"]},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"imei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"protocol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"serverTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"deviceTime\",\"type\":[\"null\",\"double\"]},{\"name\":\"fixTime\",\"type\":[\"null\",\"double\"]},{\"name\":\"outdated\",\"type\":\"boolean\"},{\"name\":\"valid\",\"type\":\"boolean\"},{\"name\":\"latitude\",\"type\":[\"null\",\"double\"]},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"]},{\"name\":\"altitude\",\"type\":[\"null\",\"double\"]},{\"name\":\"speed\",\"type\":[\"null\",\"double\"]},{\"name\":\"course\",\"type\":[\"null\",\"double\"]},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"accuracy\",\"type\":[\"null\",\"int\"]},{\"name\":\"network\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"movemetState\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"totalDistance\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Integer id;
  @Deprecated public com.fretron.Model.Attributes attributes;
  @Deprecated public java.lang.Integer deviceId;
  @Deprecated public java.lang.String type;
  @Deprecated public java.lang.String imei;
  @Deprecated public java.lang.String protocol;
  @Deprecated public java.lang.String serverTime;
  @Deprecated public java.lang.Double deviceTime;
  @Deprecated public java.lang.Double fixTime;
  @Deprecated public boolean outdated;
  @Deprecated public boolean valid;
  @Deprecated public java.lang.Double latitude;
  @Deprecated public java.lang.Double longitude;
  @Deprecated public java.lang.Double altitude;
  @Deprecated public java.lang.Double speed;
  @Deprecated public java.lang.Double course;
  @Deprecated public java.lang.String address;
  @Deprecated public java.lang.Integer accuracy;
  @Deprecated public java.lang.String network;
  @Deprecated public java.lang.String movemetState;
  @Deprecated public java.lang.String totalDistance;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Position() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param attributes The new value for attributes
   * @param deviceId The new value for deviceId
   * @param type The new value for type
   * @param imei The new value for imei
   * @param protocol The new value for protocol
   * @param serverTime The new value for serverTime
   * @param deviceTime The new value for deviceTime
   * @param fixTime The new value for fixTime
   * @param outdated The new value for outdated
   * @param valid The new value for valid
   * @param latitude The new value for latitude
   * @param longitude The new value for longitude
   * @param altitude The new value for altitude
   * @param speed The new value for speed
   * @param course The new value for course
   * @param address The new value for address
   * @param accuracy The new value for accuracy
   * @param network The new value for network
   * @param movemetState The new value for movemetState
   * @param totalDistance The new value for totalDistance
   */
  public Position(java.lang.Integer id, com.fretron.Model.Attributes attributes, java.lang.Integer deviceId, java.lang.String type, java.lang.String imei, java.lang.String protocol, java.lang.String serverTime, java.lang.Double deviceTime, java.lang.Double fixTime, java.lang.Boolean outdated, java.lang.Boolean valid, java.lang.Double latitude, java.lang.Double longitude, java.lang.Double altitude, java.lang.Double speed, java.lang.Double course, java.lang.String address, java.lang.Integer accuracy, java.lang.String network, java.lang.String movemetState, java.lang.String totalDistance) {
    this.id = id;
    this.attributes = attributes;
    this.deviceId = deviceId;
    this.type = type;
    this.imei = imei;
    this.protocol = protocol;
    this.serverTime = serverTime;
    this.deviceTime = deviceTime;
    this.fixTime = fixTime;
    this.outdated = outdated;
    this.valid = valid;
    this.latitude = latitude;
    this.longitude = longitude;
    this.altitude = altitude;
    this.speed = speed;
    this.course = course;
    this.address = address;
    this.accuracy = accuracy;
    this.network = network;
    this.movemetState = movemetState;
    this.totalDistance = totalDistance;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return attributes;
    case 2: return deviceId;
    case 3: return type;
    case 4: return imei;
    case 5: return protocol;
    case 6: return serverTime;
    case 7: return deviceTime;
    case 8: return fixTime;
    case 9: return outdated;
    case 10: return valid;
    case 11: return latitude;
    case 12: return longitude;
    case 13: return altitude;
    case 14: return speed;
    case 15: return course;
    case 16: return address;
    case 17: return accuracy;
    case 18: return network;
    case 19: return movemetState;
    case 20: return totalDistance;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: attributes = (com.fretron.Model.Attributes)value$; break;
    case 2: deviceId = (java.lang.Integer)value$; break;
    case 3: type = (java.lang.String)value$; break;
    case 4: imei = (java.lang.String)value$; break;
    case 5: protocol = (java.lang.String)value$; break;
    case 6: serverTime = (java.lang.String)value$; break;
    case 7: deviceTime = (java.lang.Double)value$; break;
    case 8: fixTime = (java.lang.Double)value$; break;
    case 9: outdated = (java.lang.Boolean)value$; break;
    case 10: valid = (java.lang.Boolean)value$; break;
    case 11: latitude = (java.lang.Double)value$; break;
    case 12: longitude = (java.lang.Double)value$; break;
    case 13: altitude = (java.lang.Double)value$; break;
    case 14: speed = (java.lang.Double)value$; break;
    case 15: course = (java.lang.Double)value$; break;
    case 16: address = (java.lang.String)value$; break;
    case 17: accuracy = (java.lang.Integer)value$; break;
    case 18: network = (java.lang.String)value$; break;
    case 19: movemetState = (java.lang.String)value$; break;
    case 20: totalDistance = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Integer getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'attributes' field.
   * @return The value of the 'attributes' field.
   */
  public com.fretron.Model.Attributes getAttributes() {
    return attributes;
  }

  /**
   * Sets the value of the 'attributes' field.
   * @param value the value to set.
   */
  public void setAttributes(com.fretron.Model.Attributes value) {
    this.attributes = value;
  }

  /**
   * Gets the value of the 'deviceId' field.
   * @return The value of the 'deviceId' field.
   */
  public java.lang.Integer getDeviceId() {
    return deviceId;
  }

  /**
   * Sets the value of the 'deviceId' field.
   * @param value the value to set.
   */
  public void setDeviceId(java.lang.Integer value) {
    this.deviceId = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'imei' field.
   * @return The value of the 'imei' field.
   */
  public java.lang.String getImei() {
    return imei;
  }

  /**
   * Sets the value of the 'imei' field.
   * @param value the value to set.
   */
  public void setImei(java.lang.String value) {
    this.imei = value;
  }

  /**
   * Gets the value of the 'protocol' field.
   * @return The value of the 'protocol' field.
   */
  public java.lang.String getProtocol() {
    return protocol;
  }

  /**
   * Sets the value of the 'protocol' field.
   * @param value the value to set.
   */
  public void setProtocol(java.lang.String value) {
    this.protocol = value;
  }

  /**
   * Gets the value of the 'serverTime' field.
   * @return The value of the 'serverTime' field.
   */
  public java.lang.String getServerTime() {
    return serverTime;
  }

  /**
   * Sets the value of the 'serverTime' field.
   * @param value the value to set.
   */
  public void setServerTime(java.lang.String value) {
    this.serverTime = value;
  }

  /**
   * Gets the value of the 'deviceTime' field.
   * @return The value of the 'deviceTime' field.
   */
  public java.lang.Double getDeviceTime() {
    return deviceTime;
  }

  /**
   * Sets the value of the 'deviceTime' field.
   * @param value the value to set.
   */
  public void setDeviceTime(java.lang.Double value) {
    this.deviceTime = value;
  }

  /**
   * Gets the value of the 'fixTime' field.
   * @return The value of the 'fixTime' field.
   */
  public java.lang.Double getFixTime() {
    return fixTime;
  }

  /**
   * Sets the value of the 'fixTime' field.
   * @param value the value to set.
   */
  public void setFixTime(java.lang.Double value) {
    this.fixTime = value;
  }

  /**
   * Gets the value of the 'outdated' field.
   * @return The value of the 'outdated' field.
   */
  public java.lang.Boolean getOutdated() {
    return outdated;
  }

  /**
   * Sets the value of the 'outdated' field.
   * @param value the value to set.
   */
  public void setOutdated(java.lang.Boolean value) {
    this.outdated = value;
  }

  /**
   * Gets the value of the 'valid' field.
   * @return The value of the 'valid' field.
   */
  public java.lang.Boolean getValid() {
    return valid;
  }

  /**
   * Sets the value of the 'valid' field.
   * @param value the value to set.
   */
  public void setValid(java.lang.Boolean value) {
    this.valid = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   * @return The value of the 'latitude' field.
   */
  public java.lang.Double getLatitude() {
    return latitude;
  }

  /**
   * Sets the value of the 'latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(java.lang.Double value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   * @return The value of the 'longitude' field.
   */
  public java.lang.Double getLongitude() {
    return longitude;
  }

  /**
   * Sets the value of the 'longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(java.lang.Double value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'altitude' field.
   * @return The value of the 'altitude' field.
   */
  public java.lang.Double getAltitude() {
    return altitude;
  }

  /**
   * Sets the value of the 'altitude' field.
   * @param value the value to set.
   */
  public void setAltitude(java.lang.Double value) {
    this.altitude = value;
  }

  /**
   * Gets the value of the 'speed' field.
   * @return The value of the 'speed' field.
   */
  public java.lang.Double getSpeed() {
    return speed;
  }

  /**
   * Sets the value of the 'speed' field.
   * @param value the value to set.
   */
  public void setSpeed(java.lang.Double value) {
    this.speed = value;
  }

  /**
   * Gets the value of the 'course' field.
   * @return The value of the 'course' field.
   */
  public java.lang.Double getCourse() {
    return course;
  }

  /**
   * Sets the value of the 'course' field.
   * @param value the value to set.
   */
  public void setCourse(java.lang.Double value) {
    this.course = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public java.lang.String getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(java.lang.String value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'accuracy' field.
   * @return The value of the 'accuracy' field.
   */
  public java.lang.Integer getAccuracy() {
    return accuracy;
  }

  /**
   * Sets the value of the 'accuracy' field.
   * @param value the value to set.
   */
  public void setAccuracy(java.lang.Integer value) {
    this.accuracy = value;
  }

  /**
   * Gets the value of the 'network' field.
   * @return The value of the 'network' field.
   */
  public java.lang.String getNetwork() {
    return network;
  }

  /**
   * Sets the value of the 'network' field.
   * @param value the value to set.
   */
  public void setNetwork(java.lang.String value) {
    this.network = value;
  }

  /**
   * Gets the value of the 'movemetState' field.
   * @return The value of the 'movemetState' field.
   */
  public java.lang.String getMovemetState() {
    return movemetState;
  }

  /**
   * Sets the value of the 'movemetState' field.
   * @param value the value to set.
   */
  public void setMovemetState(java.lang.String value) {
    this.movemetState = value;
  }

  /**
   * Gets the value of the 'totalDistance' field.
   * @return The value of the 'totalDistance' field.
   */
  public java.lang.String getTotalDistance() {
    return totalDistance;
  }

  /**
   * Sets the value of the 'totalDistance' field.
   * @param value the value to set.
   */
  public void setTotalDistance(java.lang.String value) {
    this.totalDistance = value;
  }

  /**
   * Creates a new Position RecordBuilder.
   * @return A new Position RecordBuilder
   */
  public static com.fretron.Model.Position.Builder newBuilder() {
    return new com.fretron.Model.Position.Builder();
  }

  /**
   * Creates a new Position RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Position RecordBuilder
   */
  public static com.fretron.Model.Position.Builder newBuilder(com.fretron.Model.Position.Builder other) {
    return new com.fretron.Model.Position.Builder(other);
  }

  /**
   * Creates a new Position RecordBuilder by copying an existing Position instance.
   * @param other The existing instance to copy.
   * @return A new Position RecordBuilder
   */
  public static com.fretron.Model.Position.Builder newBuilder(com.fretron.Model.Position other) {
    return new com.fretron.Model.Position.Builder(other);
  }

  /**
   * RecordBuilder for Position instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Position>
    implements org.apache.avro.data.RecordBuilder<Position> {

    private java.lang.Integer id;
    private com.fretron.Model.Attributes attributes;
    private com.fretron.Model.Attributes.Builder attributesBuilder;
    private java.lang.Integer deviceId;
    private java.lang.String type;
    private java.lang.String imei;
    private java.lang.String protocol;
    private java.lang.String serverTime;
    private java.lang.Double deviceTime;
    private java.lang.Double fixTime;
    private boolean outdated;
    private boolean valid;
    private java.lang.Double latitude;
    private java.lang.Double longitude;
    private java.lang.Double altitude;
    private java.lang.Double speed;
    private java.lang.Double course;
    private java.lang.String address;
    private java.lang.Integer accuracy;
    private java.lang.String network;
    private java.lang.String movemetState;
    private java.lang.String totalDistance;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.Position.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attributes)) {
        this.attributes = data().deepCopy(fields()[1].schema(), other.attributes);
        fieldSetFlags()[1] = true;
      }
      if (other.hasAttributesBuilder()) {
        this.attributesBuilder = com.fretron.Model.Attributes.newBuilder(other.getAttributesBuilder());
      }
      if (isValidValue(fields()[2], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[2].schema(), other.deviceId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.imei)) {
        this.imei = data().deepCopy(fields()[4].schema(), other.imei);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocol)) {
        this.protocol = data().deepCopy(fields()[5].schema(), other.protocol);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.serverTime)) {
        this.serverTime = data().deepCopy(fields()[6].schema(), other.serverTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.deviceTime)) {
        this.deviceTime = data().deepCopy(fields()[7].schema(), other.deviceTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.fixTime)) {
        this.fixTime = data().deepCopy(fields()[8].schema(), other.fixTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.outdated)) {
        this.outdated = data().deepCopy(fields()[9].schema(), other.outdated);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.valid)) {
        this.valid = data().deepCopy(fields()[10].schema(), other.valid);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.latitude)) {
        this.latitude = data().deepCopy(fields()[11].schema(), other.latitude);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.longitude)) {
        this.longitude = data().deepCopy(fields()[12].schema(), other.longitude);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.altitude)) {
        this.altitude = data().deepCopy(fields()[13].schema(), other.altitude);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.speed)) {
        this.speed = data().deepCopy(fields()[14].schema(), other.speed);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.course)) {
        this.course = data().deepCopy(fields()[15].schema(), other.course);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.address)) {
        this.address = data().deepCopy(fields()[16].schema(), other.address);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.accuracy)) {
        this.accuracy = data().deepCopy(fields()[17].schema(), other.accuracy);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.network)) {
        this.network = data().deepCopy(fields()[18].schema(), other.network);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.movemetState)) {
        this.movemetState = data().deepCopy(fields()[19].schema(), other.movemetState);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.totalDistance)) {
        this.totalDistance = data().deepCopy(fields()[20].schema(), other.totalDistance);
        fieldSetFlags()[20] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Position instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.Position other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attributes)) {
        this.attributes = data().deepCopy(fields()[1].schema(), other.attributes);
        fieldSetFlags()[1] = true;
      }
      this.attributesBuilder = null;
      if (isValidValue(fields()[2], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[2].schema(), other.deviceId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.imei)) {
        this.imei = data().deepCopy(fields()[4].schema(), other.imei);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.protocol)) {
        this.protocol = data().deepCopy(fields()[5].schema(), other.protocol);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.serverTime)) {
        this.serverTime = data().deepCopy(fields()[6].schema(), other.serverTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.deviceTime)) {
        this.deviceTime = data().deepCopy(fields()[7].schema(), other.deviceTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.fixTime)) {
        this.fixTime = data().deepCopy(fields()[8].schema(), other.fixTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.outdated)) {
        this.outdated = data().deepCopy(fields()[9].schema(), other.outdated);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.valid)) {
        this.valid = data().deepCopy(fields()[10].schema(), other.valid);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.latitude)) {
        this.latitude = data().deepCopy(fields()[11].schema(), other.latitude);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.longitude)) {
        this.longitude = data().deepCopy(fields()[12].schema(), other.longitude);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.altitude)) {
        this.altitude = data().deepCopy(fields()[13].schema(), other.altitude);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.speed)) {
        this.speed = data().deepCopy(fields()[14].schema(), other.speed);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.course)) {
        this.course = data().deepCopy(fields()[15].schema(), other.course);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.address)) {
        this.address = data().deepCopy(fields()[16].schema(), other.address);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.accuracy)) {
        this.accuracy = data().deepCopy(fields()[17].schema(), other.accuracy);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.network)) {
        this.network = data().deepCopy(fields()[18].schema(), other.network);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.movemetState)) {
        this.movemetState = data().deepCopy(fields()[19].schema(), other.movemetState);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.totalDistance)) {
        this.totalDistance = data().deepCopy(fields()[20].schema(), other.totalDistance);
        fieldSetFlags()[20] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Integer getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setId(java.lang.Integer value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'attributes' field.
      * @return The value.
      */
    public com.fretron.Model.Attributes getAttributes() {
      return attributes;
    }

    /**
      * Sets the value of the 'attributes' field.
      * @param value The value of 'attributes'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setAttributes(com.fretron.Model.Attributes value) {
      validate(fields()[1], value);
      this.attributesBuilder = null;
      this.attributes = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'attributes' field has been set.
      * @return True if the 'attributes' field has been set, false otherwise.
      */
    public boolean hasAttributes() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'attributes' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Attributes.Builder getAttributesBuilder() {
      if (attributesBuilder == null) {
        if (hasAttributes()) {
          setAttributesBuilder(com.fretron.Model.Attributes.newBuilder(attributes));
        } else {
          setAttributesBuilder(com.fretron.Model.Attributes.newBuilder());
        }
      }
      return attributesBuilder;
    }

    /**
     * Sets the Builder instance for the 'attributes' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Position.Builder setAttributesBuilder(com.fretron.Model.Attributes.Builder value) {
      clearAttributes();
      attributesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'attributes' field has an active Builder instance
     * @return True if the 'attributes' field has an active Builder instance
     */
    public boolean hasAttributesBuilder() {
      return attributesBuilder != null;
    }

    /**
      * Clears the value of the 'attributes' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearAttributes() {
      attributes = null;
      attributesBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceId' field.
      * @return The value.
      */
    public java.lang.Integer getDeviceId() {
      return deviceId;
    }

    /**
      * Sets the value of the 'deviceId' field.
      * @param value The value of 'deviceId'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setDeviceId(java.lang.Integer value) {
      validate(fields()[2], value);
      this.deviceId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceId' field has been set.
      * @return True if the 'deviceId' field has been set, false otherwise.
      */
    public boolean hasDeviceId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'deviceId' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearDeviceId() {
      deviceId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setType(java.lang.String value) {
      validate(fields()[3], value);
      this.type = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearType() {
      type = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'imei' field.
      * @return The value.
      */
    public java.lang.String getImei() {
      return imei;
    }

    /**
      * Sets the value of the 'imei' field.
      * @param value The value of 'imei'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setImei(java.lang.String value) {
      validate(fields()[4], value);
      this.imei = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'imei' field has been set.
      * @return True if the 'imei' field has been set, false otherwise.
      */
    public boolean hasImei() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'imei' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearImei() {
      imei = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'protocol' field.
      * @return The value.
      */
    public java.lang.String getProtocol() {
      return protocol;
    }

    /**
      * Sets the value of the 'protocol' field.
      * @param value The value of 'protocol'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setProtocol(java.lang.String value) {
      validate(fields()[5], value);
      this.protocol = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'protocol' field has been set.
      * @return True if the 'protocol' field has been set, false otherwise.
      */
    public boolean hasProtocol() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'protocol' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearProtocol() {
      protocol = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'serverTime' field.
      * @return The value.
      */
    public java.lang.String getServerTime() {
      return serverTime;
    }

    /**
      * Sets the value of the 'serverTime' field.
      * @param value The value of 'serverTime'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setServerTime(java.lang.String value) {
      validate(fields()[6], value);
      this.serverTime = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'serverTime' field has been set.
      * @return True if the 'serverTime' field has been set, false otherwise.
      */
    public boolean hasServerTime() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'serverTime' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearServerTime() {
      serverTime = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceTime' field.
      * @return The value.
      */
    public java.lang.Double getDeviceTime() {
      return deviceTime;
    }

    /**
      * Sets the value of the 'deviceTime' field.
      * @param value The value of 'deviceTime'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setDeviceTime(java.lang.Double value) {
      validate(fields()[7], value);
      this.deviceTime = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceTime' field has been set.
      * @return True if the 'deviceTime' field has been set, false otherwise.
      */
    public boolean hasDeviceTime() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'deviceTime' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearDeviceTime() {
      deviceTime = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'fixTime' field.
      * @return The value.
      */
    public java.lang.Double getFixTime() {
      return fixTime;
    }

    /**
      * Sets the value of the 'fixTime' field.
      * @param value The value of 'fixTime'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setFixTime(java.lang.Double value) {
      validate(fields()[8], value);
      this.fixTime = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'fixTime' field has been set.
      * @return True if the 'fixTime' field has been set, false otherwise.
      */
    public boolean hasFixTime() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'fixTime' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearFixTime() {
      fixTime = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'outdated' field.
      * @return The value.
      */
    public java.lang.Boolean getOutdated() {
      return outdated;
    }

    /**
      * Sets the value of the 'outdated' field.
      * @param value The value of 'outdated'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setOutdated(boolean value) {
      validate(fields()[9], value);
      this.outdated = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'outdated' field has been set.
      * @return True if the 'outdated' field has been set, false otherwise.
      */
    public boolean hasOutdated() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'outdated' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearOutdated() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'valid' field.
      * @return The value.
      */
    public java.lang.Boolean getValid() {
      return valid;
    }

    /**
      * Sets the value of the 'valid' field.
      * @param value The value of 'valid'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setValid(boolean value) {
      validate(fields()[10], value);
      this.valid = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'valid' field has been set.
      * @return True if the 'valid' field has been set, false otherwise.
      */
    public boolean hasValid() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'valid' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearValid() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'latitude' field.
      * @return The value.
      */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    /**
      * Sets the value of the 'latitude' field.
      * @param value The value of 'latitude'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setLatitude(java.lang.Double value) {
      validate(fields()[11], value);
      this.latitude = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'latitude' field has been set.
      * @return True if the 'latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'latitude' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearLatitude() {
      latitude = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'longitude' field.
      * @return The value.
      */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    /**
      * Sets the value of the 'longitude' field.
      * @param value The value of 'longitude'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setLongitude(java.lang.Double value) {
      validate(fields()[12], value);
      this.longitude = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'longitude' field has been set.
      * @return True if the 'longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'longitude' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearLongitude() {
      longitude = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'altitude' field.
      * @return The value.
      */
    public java.lang.Double getAltitude() {
      return altitude;
    }

    /**
      * Sets the value of the 'altitude' field.
      * @param value The value of 'altitude'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setAltitude(java.lang.Double value) {
      validate(fields()[13], value);
      this.altitude = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'altitude' field has been set.
      * @return True if the 'altitude' field has been set, false otherwise.
      */
    public boolean hasAltitude() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'altitude' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearAltitude() {
      altitude = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'speed' field.
      * @return The value.
      */
    public java.lang.Double getSpeed() {
      return speed;
    }

    /**
      * Sets the value of the 'speed' field.
      * @param value The value of 'speed'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setSpeed(java.lang.Double value) {
      validate(fields()[14], value);
      this.speed = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'speed' field has been set.
      * @return True if the 'speed' field has been set, false otherwise.
      */
    public boolean hasSpeed() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'speed' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearSpeed() {
      speed = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'course' field.
      * @return The value.
      */
    public java.lang.Double getCourse() {
      return course;
    }

    /**
      * Sets the value of the 'course' field.
      * @param value The value of 'course'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setCourse(java.lang.Double value) {
      validate(fields()[15], value);
      this.course = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'course' field has been set.
      * @return True if the 'course' field has been set, false otherwise.
      */
    public boolean hasCourse() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'course' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearCourse() {
      course = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public java.lang.String getAddress() {
      return address;
    }

    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setAddress(java.lang.String value) {
      validate(fields()[16], value);
      this.address = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearAddress() {
      address = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'accuracy' field.
      * @return The value.
      */
    public java.lang.Integer getAccuracy() {
      return accuracy;
    }

    /**
      * Sets the value of the 'accuracy' field.
      * @param value The value of 'accuracy'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setAccuracy(java.lang.Integer value) {
      validate(fields()[17], value);
      this.accuracy = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'accuracy' field has been set.
      * @return True if the 'accuracy' field has been set, false otherwise.
      */
    public boolean hasAccuracy() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'accuracy' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearAccuracy() {
      accuracy = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'network' field.
      * @return The value.
      */
    public java.lang.String getNetwork() {
      return network;
    }

    /**
      * Sets the value of the 'network' field.
      * @param value The value of 'network'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setNetwork(java.lang.String value) {
      validate(fields()[18], value);
      this.network = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'network' field has been set.
      * @return True if the 'network' field has been set, false otherwise.
      */
    public boolean hasNetwork() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'network' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearNetwork() {
      network = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'movemetState' field.
      * @return The value.
      */
    public java.lang.String getMovemetState() {
      return movemetState;
    }

    /**
      * Sets the value of the 'movemetState' field.
      * @param value The value of 'movemetState'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setMovemetState(java.lang.String value) {
      validate(fields()[19], value);
      this.movemetState = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'movemetState' field has been set.
      * @return True if the 'movemetState' field has been set, false otherwise.
      */
    public boolean hasMovemetState() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'movemetState' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearMovemetState() {
      movemetState = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalDistance' field.
      * @return The value.
      */
    public java.lang.String getTotalDistance() {
      return totalDistance;
    }

    /**
      * Sets the value of the 'totalDistance' field.
      * @param value The value of 'totalDistance'.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder setTotalDistance(java.lang.String value) {
      validate(fields()[20], value);
      this.totalDistance = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'totalDistance' field has been set.
      * @return True if the 'totalDistance' field has been set, false otherwise.
      */
    public boolean hasTotalDistance() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'totalDistance' field.
      * @return This builder.
      */
    public com.fretron.Model.Position.Builder clearTotalDistance() {
      totalDistance = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    public Position build() {
      try {
        Position record = new Position();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        if (attributesBuilder != null) {
          record.attributes = this.attributesBuilder.build();
        } else {
          record.attributes = fieldSetFlags()[1] ? this.attributes : (com.fretron.Model.Attributes) defaultValue(fields()[1]);
        }
        record.deviceId = fieldSetFlags()[2] ? this.deviceId : (java.lang.Integer) defaultValue(fields()[2]);
        record.type = fieldSetFlags()[3] ? this.type : (java.lang.String) defaultValue(fields()[3]);
        record.imei = fieldSetFlags()[4] ? this.imei : (java.lang.String) defaultValue(fields()[4]);
        record.protocol = fieldSetFlags()[5] ? this.protocol : (java.lang.String) defaultValue(fields()[5]);
        record.serverTime = fieldSetFlags()[6] ? this.serverTime : (java.lang.String) defaultValue(fields()[6]);
        record.deviceTime = fieldSetFlags()[7] ? this.deviceTime : (java.lang.Double) defaultValue(fields()[7]);
        record.fixTime = fieldSetFlags()[8] ? this.fixTime : (java.lang.Double) defaultValue(fields()[8]);
        record.outdated = fieldSetFlags()[9] ? this.outdated : (java.lang.Boolean) defaultValue(fields()[9]);
        record.valid = fieldSetFlags()[10] ? this.valid : (java.lang.Boolean) defaultValue(fields()[10]);
        record.latitude = fieldSetFlags()[11] ? this.latitude : (java.lang.Double) defaultValue(fields()[11]);
        record.longitude = fieldSetFlags()[12] ? this.longitude : (java.lang.Double) defaultValue(fields()[12]);
        record.altitude = fieldSetFlags()[13] ? this.altitude : (java.lang.Double) defaultValue(fields()[13]);
        record.speed = fieldSetFlags()[14] ? this.speed : (java.lang.Double) defaultValue(fields()[14]);
        record.course = fieldSetFlags()[15] ? this.course : (java.lang.Double) defaultValue(fields()[15]);
        record.address = fieldSetFlags()[16] ? this.address : (java.lang.String) defaultValue(fields()[16]);
        record.accuracy = fieldSetFlags()[17] ? this.accuracy : (java.lang.Integer) defaultValue(fields()[17]);
        record.network = fieldSetFlags()[18] ? this.network : (java.lang.String) defaultValue(fields()[18]);
        record.movemetState = fieldSetFlags()[19] ? this.movemetState : (java.lang.String) defaultValue(fields()[19]);
        record.totalDistance = fieldSetFlags()[20] ? this.totalDistance : (java.lang.String) defaultValue(fields()[20]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

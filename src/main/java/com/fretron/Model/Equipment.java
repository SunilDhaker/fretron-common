/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Equipment extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7934038958734285505L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Equipment\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"inventoryNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"inventoryTypeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"catagory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Place\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"center\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"centerCoordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"suggestedRadius\",\"type\":\"double\",\"default\":null},{\"name\":\"viewport\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ViewPort\",\"fields\":[{\"name\":\"northeast\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"southwest\",\"type\":[\"null\",\"Location\"],\"default\":null}]}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hubId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"district\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subDistrict\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"boundary\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null},{\"name\":\"places\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Place\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isOwned\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"geoJsonBoundry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geometry\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"coordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null}]}],\"default\":null},{\"name\":\"controllingBranchId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"shipmentNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Updates\",\"fields\":[{\"name\":\"forwardReasons\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfInformation\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updateType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"forwardedFrom\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"revision\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"traceID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"usedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"attachedResourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"attachedResourceNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"statusDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customFields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LiteCustomFields\",\"fields\":[{\"name\":\"fieldType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldKey\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"indexedValue\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"valueType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"definitionId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"orderDetails\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"OrderRelation\",\"fields\":[{\"name\":\"orderId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lineItemId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String _id;
  @Deprecated public java.lang.String inventoryNo;
  @Deprecated public java.lang.String type;
  @Deprecated public java.lang.String inventoryTypeId;
  @Deprecated public java.lang.String catagory;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.String updatedBy;
  @Deprecated public com.fretron.Model.Place location;
  @Deprecated public java.lang.String shipmentNumber;
  @Deprecated public com.fretron.Model.Updates updates;
  @Deprecated public java.lang.String status;
  @Deprecated public java.lang.String usedBy;
  @Deprecated public java.lang.String attachedResourceId;
  @Deprecated public java.lang.String attachedResourceNumber;
  @Deprecated public java.lang.String statusDescription;
  @Deprecated public java.util.List<com.fretron.Model.LiteCustomFields> customFields;
  @Deprecated public com.fretron.Model.OrderRelation orderDetails;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Equipment() {}

  /**
   * All-args constructor.
   * @param _id The new value for _id
   * @param inventoryNo The new value for inventoryNo
   * @param type The new value for type
   * @param inventoryTypeId The new value for inventoryTypeId
   * @param catagory The new value for catagory
   * @param name The new value for name
   * @param orgId The new value for orgId
   * @param updatedBy The new value for updatedBy
   * @param location The new value for location
   * @param shipmentNumber The new value for shipmentNumber
   * @param updates The new value for updates
   * @param status The new value for status
   * @param usedBy The new value for usedBy
   * @param attachedResourceId The new value for attachedResourceId
   * @param attachedResourceNumber The new value for attachedResourceNumber
   * @param statusDescription The new value for statusDescription
   * @param customFields The new value for customFields
   * @param orderDetails The new value for orderDetails
   */
  public Equipment(java.lang.String _id, java.lang.String inventoryNo, java.lang.String type, java.lang.String inventoryTypeId, java.lang.String catagory, java.lang.String name, java.lang.String orgId, java.lang.String updatedBy, com.fretron.Model.Place location, java.lang.String shipmentNumber, com.fretron.Model.Updates updates, java.lang.String status, java.lang.String usedBy, java.lang.String attachedResourceId, java.lang.String attachedResourceNumber, java.lang.String statusDescription, java.util.List<com.fretron.Model.LiteCustomFields> customFields, com.fretron.Model.OrderRelation orderDetails) {
    this._id = _id;
    this.inventoryNo = inventoryNo;
    this.type = type;
    this.inventoryTypeId = inventoryTypeId;
    this.catagory = catagory;
    this.name = name;
    this.orgId = orgId;
    this.updatedBy = updatedBy;
    this.location = location;
    this.shipmentNumber = shipmentNumber;
    this.updates = updates;
    this.status = status;
    this.usedBy = usedBy;
    this.attachedResourceId = attachedResourceId;
    this.attachedResourceNumber = attachedResourceNumber;
    this.statusDescription = statusDescription;
    this.customFields = customFields;
    this.orderDetails = orderDetails;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return _id;
    case 1: return inventoryNo;
    case 2: return type;
    case 3: return inventoryTypeId;
    case 4: return catagory;
    case 5: return name;
    case 6: return orgId;
    case 7: return updatedBy;
    case 8: return location;
    case 9: return shipmentNumber;
    case 10: return updates;
    case 11: return status;
    case 12: return usedBy;
    case 13: return attachedResourceId;
    case 14: return attachedResourceNumber;
    case 15: return statusDescription;
    case 16: return customFields;
    case 17: return orderDetails;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: _id = (java.lang.String)value$; break;
    case 1: inventoryNo = (java.lang.String)value$; break;
    case 2: type = (java.lang.String)value$; break;
    case 3: inventoryTypeId = (java.lang.String)value$; break;
    case 4: catagory = (java.lang.String)value$; break;
    case 5: name = (java.lang.String)value$; break;
    case 6: orgId = (java.lang.String)value$; break;
    case 7: updatedBy = (java.lang.String)value$; break;
    case 8: location = (com.fretron.Model.Place)value$; break;
    case 9: shipmentNumber = (java.lang.String)value$; break;
    case 10: updates = (com.fretron.Model.Updates)value$; break;
    case 11: status = (java.lang.String)value$; break;
    case 12: usedBy = (java.lang.String)value$; break;
    case 13: attachedResourceId = (java.lang.String)value$; break;
    case 14: attachedResourceNumber = (java.lang.String)value$; break;
    case 15: statusDescription = (java.lang.String)value$; break;
    case 16: customFields = (java.util.List<com.fretron.Model.LiteCustomFields>)value$; break;
    case 17: orderDetails = (com.fretron.Model.OrderRelation)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the '_id' field.
   * @return The value of the '_id' field.
   */
  public java.lang.String getId$1() {
    return _id;
  }

  /**
   * Sets the value of the '_id' field.
   * @param value the value to set.
   */
  public void setId$1(java.lang.String value) {
    this._id = value;
  }

  /**
   * Gets the value of the 'inventoryNo' field.
   * @return The value of the 'inventoryNo' field.
   */
  public java.lang.String getInventoryNo() {
    return inventoryNo;
  }

  /**
   * Sets the value of the 'inventoryNo' field.
   * @param value the value to set.
   */
  public void setInventoryNo(java.lang.String value) {
    this.inventoryNo = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'inventoryTypeId' field.
   * @return The value of the 'inventoryTypeId' field.
   */
  public java.lang.String getInventoryTypeId() {
    return inventoryTypeId;
  }

  /**
   * Sets the value of the 'inventoryTypeId' field.
   * @param value the value to set.
   */
  public void setInventoryTypeId(java.lang.String value) {
    this.inventoryTypeId = value;
  }

  /**
   * Gets the value of the 'catagory' field.
   * @return The value of the 'catagory' field.
   */
  public java.lang.String getCatagory() {
    return catagory;
  }

  /**
   * Sets the value of the 'catagory' field.
   * @param value the value to set.
   */
  public void setCatagory(java.lang.String value) {
    this.catagory = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'updatedBy' field.
   * @return The value of the 'updatedBy' field.
   */
  public java.lang.String getUpdatedBy() {
    return updatedBy;
  }

  /**
   * Sets the value of the 'updatedBy' field.
   * @param value the value to set.
   */
  public void setUpdatedBy(java.lang.String value) {
    this.updatedBy = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public com.fretron.Model.Place getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(com.fretron.Model.Place value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'shipmentNumber' field.
   * @return The value of the 'shipmentNumber' field.
   */
  public java.lang.String getShipmentNumber() {
    return shipmentNumber;
  }

  /**
   * Sets the value of the 'shipmentNumber' field.
   * @param value the value to set.
   */
  public void setShipmentNumber(java.lang.String value) {
    this.shipmentNumber = value;
  }

  /**
   * Gets the value of the 'updates' field.
   * @return The value of the 'updates' field.
   */
  public com.fretron.Model.Updates getUpdates() {
    return updates;
  }

  /**
   * Sets the value of the 'updates' field.
   * @param value the value to set.
   */
  public void setUpdates(com.fretron.Model.Updates value) {
    this.updates = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'usedBy' field.
   * @return The value of the 'usedBy' field.
   */
  public java.lang.String getUsedBy() {
    return usedBy;
  }

  /**
   * Sets the value of the 'usedBy' field.
   * @param value the value to set.
   */
  public void setUsedBy(java.lang.String value) {
    this.usedBy = value;
  }

  /**
   * Gets the value of the 'attachedResourceId' field.
   * @return The value of the 'attachedResourceId' field.
   */
  public java.lang.String getAttachedResourceId() {
    return attachedResourceId;
  }

  /**
   * Sets the value of the 'attachedResourceId' field.
   * @param value the value to set.
   */
  public void setAttachedResourceId(java.lang.String value) {
    this.attachedResourceId = value;
  }

  /**
   * Gets the value of the 'attachedResourceNumber' field.
   * @return The value of the 'attachedResourceNumber' field.
   */
  public java.lang.String getAttachedResourceNumber() {
    return attachedResourceNumber;
  }

  /**
   * Sets the value of the 'attachedResourceNumber' field.
   * @param value the value to set.
   */
  public void setAttachedResourceNumber(java.lang.String value) {
    this.attachedResourceNumber = value;
  }

  /**
   * Gets the value of the 'statusDescription' field.
   * @return The value of the 'statusDescription' field.
   */
  public java.lang.String getStatusDescription() {
    return statusDescription;
  }

  /**
   * Sets the value of the 'statusDescription' field.
   * @param value the value to set.
   */
  public void setStatusDescription(java.lang.String value) {
    this.statusDescription = value;
  }

  /**
   * Gets the value of the 'customFields' field.
   * @return The value of the 'customFields' field.
   */
  public java.util.List<com.fretron.Model.LiteCustomFields> getCustomFields() {
    return customFields;
  }

  /**
   * Sets the value of the 'customFields' field.
   * @param value the value to set.
   */
  public void setCustomFields(java.util.List<com.fretron.Model.LiteCustomFields> value) {
    this.customFields = value;
  }

  /**
   * Gets the value of the 'orderDetails' field.
   * @return The value of the 'orderDetails' field.
   */
  public com.fretron.Model.OrderRelation getOrderDetails() {
    return orderDetails;
  }

  /**
   * Sets the value of the 'orderDetails' field.
   * @param value the value to set.
   */
  public void setOrderDetails(com.fretron.Model.OrderRelation value) {
    this.orderDetails = value;
  }

  /**
   * Creates a new Equipment RecordBuilder.
   * @return A new Equipment RecordBuilder
   */
  public static com.fretron.Model.Equipment.Builder newBuilder() {
    return new com.fretron.Model.Equipment.Builder();
  }

  /**
   * Creates a new Equipment RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Equipment RecordBuilder
   */
  public static com.fretron.Model.Equipment.Builder newBuilder(com.fretron.Model.Equipment.Builder other) {
    return new com.fretron.Model.Equipment.Builder(other);
  }

  /**
   * Creates a new Equipment RecordBuilder by copying an existing Equipment instance.
   * @param other The existing instance to copy.
   * @return A new Equipment RecordBuilder
   */
  public static com.fretron.Model.Equipment.Builder newBuilder(com.fretron.Model.Equipment other) {
    return new com.fretron.Model.Equipment.Builder(other);
  }

  /**
   * RecordBuilder for Equipment instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Equipment>
    implements org.apache.avro.data.RecordBuilder<Equipment> {

    private java.lang.String _id;
    private java.lang.String inventoryNo;
    private java.lang.String type;
    private java.lang.String inventoryTypeId;
    private java.lang.String catagory;
    private java.lang.String name;
    private java.lang.String orgId;
    private java.lang.String updatedBy;
    private com.fretron.Model.Place location;
    private com.fretron.Model.Place.Builder locationBuilder;
    private java.lang.String shipmentNumber;
    private com.fretron.Model.Updates updates;
    private com.fretron.Model.Updates.Builder updatesBuilder;
    private java.lang.String status;
    private java.lang.String usedBy;
    private java.lang.String attachedResourceId;
    private java.lang.String attachedResourceNumber;
    private java.lang.String statusDescription;
    private java.util.List<com.fretron.Model.LiteCustomFields> customFields;
    private com.fretron.Model.OrderRelation orderDetails;
    private com.fretron.Model.OrderRelation.Builder orderDetailsBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.Equipment.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other._id)) {
        this._id = data().deepCopy(fields()[0].schema(), other._id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.inventoryNo)) {
        this.inventoryNo = data().deepCopy(fields()[1].schema(), other.inventoryNo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.inventoryTypeId)) {
        this.inventoryTypeId = data().deepCopy(fields()[3].schema(), other.inventoryTypeId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.catagory)) {
        this.catagory = data().deepCopy(fields()[4].schema(), other.catagory);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.name)) {
        this.name = data().deepCopy(fields()[5].schema(), other.name);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.orgId)) {
        this.orgId = data().deepCopy(fields()[6].schema(), other.orgId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[7].schema(), other.updatedBy);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.location)) {
        this.location = data().deepCopy(fields()[8].schema(), other.location);
        fieldSetFlags()[8] = true;
      }
      if (other.hasLocationBuilder()) {
        this.locationBuilder = com.fretron.Model.Place.newBuilder(other.getLocationBuilder());
      }
      if (isValidValue(fields()[9], other.shipmentNumber)) {
        this.shipmentNumber = data().deepCopy(fields()[9].schema(), other.shipmentNumber);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.updates)) {
        this.updates = data().deepCopy(fields()[10].schema(), other.updates);
        fieldSetFlags()[10] = true;
      }
      if (other.hasUpdatesBuilder()) {
        this.updatesBuilder = com.fretron.Model.Updates.newBuilder(other.getUpdatesBuilder());
      }
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.usedBy)) {
        this.usedBy = data().deepCopy(fields()[12].schema(), other.usedBy);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.attachedResourceId)) {
        this.attachedResourceId = data().deepCopy(fields()[13].schema(), other.attachedResourceId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.attachedResourceNumber)) {
        this.attachedResourceNumber = data().deepCopy(fields()[14].schema(), other.attachedResourceNumber);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.statusDescription)) {
        this.statusDescription = data().deepCopy(fields()[15].schema(), other.statusDescription);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.customFields)) {
        this.customFields = data().deepCopy(fields()[16].schema(), other.customFields);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.orderDetails)) {
        this.orderDetails = data().deepCopy(fields()[17].schema(), other.orderDetails);
        fieldSetFlags()[17] = true;
      }
      if (other.hasOrderDetailsBuilder()) {
        this.orderDetailsBuilder = com.fretron.Model.OrderRelation.newBuilder(other.getOrderDetailsBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Equipment instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.Equipment other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other._id)) {
        this._id = data().deepCopy(fields()[0].schema(), other._id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.inventoryNo)) {
        this.inventoryNo = data().deepCopy(fields()[1].schema(), other.inventoryNo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.inventoryTypeId)) {
        this.inventoryTypeId = data().deepCopy(fields()[3].schema(), other.inventoryTypeId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.catagory)) {
        this.catagory = data().deepCopy(fields()[4].schema(), other.catagory);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.name)) {
        this.name = data().deepCopy(fields()[5].schema(), other.name);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.orgId)) {
        this.orgId = data().deepCopy(fields()[6].schema(), other.orgId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[7].schema(), other.updatedBy);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.location)) {
        this.location = data().deepCopy(fields()[8].schema(), other.location);
        fieldSetFlags()[8] = true;
      }
      this.locationBuilder = null;
      if (isValidValue(fields()[9], other.shipmentNumber)) {
        this.shipmentNumber = data().deepCopy(fields()[9].schema(), other.shipmentNumber);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.updates)) {
        this.updates = data().deepCopy(fields()[10].schema(), other.updates);
        fieldSetFlags()[10] = true;
      }
      this.updatesBuilder = null;
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.usedBy)) {
        this.usedBy = data().deepCopy(fields()[12].schema(), other.usedBy);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.attachedResourceId)) {
        this.attachedResourceId = data().deepCopy(fields()[13].schema(), other.attachedResourceId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.attachedResourceNumber)) {
        this.attachedResourceNumber = data().deepCopy(fields()[14].schema(), other.attachedResourceNumber);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.statusDescription)) {
        this.statusDescription = data().deepCopy(fields()[15].schema(), other.statusDescription);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.customFields)) {
        this.customFields = data().deepCopy(fields()[16].schema(), other.customFields);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.orderDetails)) {
        this.orderDetails = data().deepCopy(fields()[17].schema(), other.orderDetails);
        fieldSetFlags()[17] = true;
      }
      this.orderDetailsBuilder = null;
    }

    /**
      * Gets the value of the '_id' field.
      * @return The value.
      */
    public java.lang.String getId$1() {
      return _id;
    }

    /**
      * Sets the value of the '_id' field.
      * @param value The value of '_id'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setId$1(java.lang.String value) {
      validate(fields()[0], value);
      this._id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the '_id' field has been set.
      * @return True if the '_id' field has been set, false otherwise.
      */
    public boolean hasId$1() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the '_id' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearId$1() {
      _id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'inventoryNo' field.
      * @return The value.
      */
    public java.lang.String getInventoryNo() {
      return inventoryNo;
    }

    /**
      * Sets the value of the 'inventoryNo' field.
      * @param value The value of 'inventoryNo'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setInventoryNo(java.lang.String value) {
      validate(fields()[1], value);
      this.inventoryNo = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'inventoryNo' field has been set.
      * @return True if the 'inventoryNo' field has been set, false otherwise.
      */
    public boolean hasInventoryNo() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'inventoryNo' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearInventoryNo() {
      inventoryNo = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setType(java.lang.String value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'inventoryTypeId' field.
      * @return The value.
      */
    public java.lang.String getInventoryTypeId() {
      return inventoryTypeId;
    }

    /**
      * Sets the value of the 'inventoryTypeId' field.
      * @param value The value of 'inventoryTypeId'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setInventoryTypeId(java.lang.String value) {
      validate(fields()[3], value);
      this.inventoryTypeId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'inventoryTypeId' field has been set.
      * @return True if the 'inventoryTypeId' field has been set, false otherwise.
      */
    public boolean hasInventoryTypeId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'inventoryTypeId' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearInventoryTypeId() {
      inventoryTypeId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'catagory' field.
      * @return The value.
      */
    public java.lang.String getCatagory() {
      return catagory;
    }

    /**
      * Sets the value of the 'catagory' field.
      * @param value The value of 'catagory'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setCatagory(java.lang.String value) {
      validate(fields()[4], value);
      this.catagory = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'catagory' field has been set.
      * @return True if the 'catagory' field has been set, false otherwise.
      */
    public boolean hasCatagory() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'catagory' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearCatagory() {
      catagory = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setName(java.lang.String value) {
      validate(fields()[5], value);
      this.name = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearName() {
      name = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setOrgId(java.lang.String value) {
      validate(fields()[6], value);
      this.orgId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedBy' field.
      * @return The value.
      */
    public java.lang.String getUpdatedBy() {
      return updatedBy;
    }

    /**
      * Sets the value of the 'updatedBy' field.
      * @param value The value of 'updatedBy'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setUpdatedBy(java.lang.String value) {
      validate(fields()[7], value);
      this.updatedBy = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedBy' field has been set.
      * @return True if the 'updatedBy' field has been set, false otherwise.
      */
    public boolean hasUpdatedBy() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'updatedBy' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearUpdatedBy() {
      updatedBy = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public com.fretron.Model.Place getLocation() {
      return location;
    }

    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setLocation(com.fretron.Model.Place value) {
      validate(fields()[8], value);
      this.locationBuilder = null;
      this.location = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'location' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Place.Builder getLocationBuilder() {
      if (locationBuilder == null) {
        if (hasLocation()) {
          setLocationBuilder(com.fretron.Model.Place.newBuilder(location));
        } else {
          setLocationBuilder(com.fretron.Model.Place.newBuilder());
        }
      }
      return locationBuilder;
    }

    /**
     * Sets the Builder instance for the 'location' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Equipment.Builder setLocationBuilder(com.fretron.Model.Place.Builder value) {
      clearLocation();
      locationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'location' field has an active Builder instance
     * @return True if the 'location' field has an active Builder instance
     */
    public boolean hasLocationBuilder() {
      return locationBuilder != null;
    }

    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearLocation() {
      location = null;
      locationBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'shipmentNumber' field.
      * @return The value.
      */
    public java.lang.String getShipmentNumber() {
      return shipmentNumber;
    }

    /**
      * Sets the value of the 'shipmentNumber' field.
      * @param value The value of 'shipmentNumber'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setShipmentNumber(java.lang.String value) {
      validate(fields()[9], value);
      this.shipmentNumber = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'shipmentNumber' field has been set.
      * @return True if the 'shipmentNumber' field has been set, false otherwise.
      */
    public boolean hasShipmentNumber() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'shipmentNumber' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearShipmentNumber() {
      shipmentNumber = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'updates' field.
      * @return The value.
      */
    public com.fretron.Model.Updates getUpdates() {
      return updates;
    }

    /**
      * Sets the value of the 'updates' field.
      * @param value The value of 'updates'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setUpdates(com.fretron.Model.Updates value) {
      validate(fields()[10], value);
      this.updatesBuilder = null;
      this.updates = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'updates' field has been set.
      * @return True if the 'updates' field has been set, false otherwise.
      */
    public boolean hasUpdates() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'updates' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Updates.Builder getUpdatesBuilder() {
      if (updatesBuilder == null) {
        if (hasUpdates()) {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder(updates));
        } else {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder());
        }
      }
      return updatesBuilder;
    }

    /**
     * Sets the Builder instance for the 'updates' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Equipment.Builder setUpdatesBuilder(com.fretron.Model.Updates.Builder value) {
      clearUpdates();
      updatesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'updates' field has an active Builder instance
     * @return True if the 'updates' field has an active Builder instance
     */
    public boolean hasUpdatesBuilder() {
      return updatesBuilder != null;
    }

    /**
      * Clears the value of the 'updates' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearUpdates() {
      updates = null;
      updatesBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setStatus(java.lang.String value) {
      validate(fields()[11], value);
      this.status = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearStatus() {
      status = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'usedBy' field.
      * @return The value.
      */
    public java.lang.String getUsedBy() {
      return usedBy;
    }

    /**
      * Sets the value of the 'usedBy' field.
      * @param value The value of 'usedBy'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setUsedBy(java.lang.String value) {
      validate(fields()[12], value);
      this.usedBy = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'usedBy' field has been set.
      * @return True if the 'usedBy' field has been set, false otherwise.
      */
    public boolean hasUsedBy() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'usedBy' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearUsedBy() {
      usedBy = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'attachedResourceId' field.
      * @return The value.
      */
    public java.lang.String getAttachedResourceId() {
      return attachedResourceId;
    }

    /**
      * Sets the value of the 'attachedResourceId' field.
      * @param value The value of 'attachedResourceId'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setAttachedResourceId(java.lang.String value) {
      validate(fields()[13], value);
      this.attachedResourceId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'attachedResourceId' field has been set.
      * @return True if the 'attachedResourceId' field has been set, false otherwise.
      */
    public boolean hasAttachedResourceId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'attachedResourceId' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearAttachedResourceId() {
      attachedResourceId = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'attachedResourceNumber' field.
      * @return The value.
      */
    public java.lang.String getAttachedResourceNumber() {
      return attachedResourceNumber;
    }

    /**
      * Sets the value of the 'attachedResourceNumber' field.
      * @param value The value of 'attachedResourceNumber'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setAttachedResourceNumber(java.lang.String value) {
      validate(fields()[14], value);
      this.attachedResourceNumber = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'attachedResourceNumber' field has been set.
      * @return True if the 'attachedResourceNumber' field has been set, false otherwise.
      */
    public boolean hasAttachedResourceNumber() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'attachedResourceNumber' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearAttachedResourceNumber() {
      attachedResourceNumber = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'statusDescription' field.
      * @return The value.
      */
    public java.lang.String getStatusDescription() {
      return statusDescription;
    }

    /**
      * Sets the value of the 'statusDescription' field.
      * @param value The value of 'statusDescription'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setStatusDescription(java.lang.String value) {
      validate(fields()[15], value);
      this.statusDescription = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'statusDescription' field has been set.
      * @return True if the 'statusDescription' field has been set, false otherwise.
      */
    public boolean hasStatusDescription() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'statusDescription' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearStatusDescription() {
      statusDescription = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'customFields' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.LiteCustomFields> getCustomFields() {
      return customFields;
    }

    /**
      * Sets the value of the 'customFields' field.
      * @param value The value of 'customFields'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setCustomFields(java.util.List<com.fretron.Model.LiteCustomFields> value) {
      validate(fields()[16], value);
      this.customFields = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'customFields' field has been set.
      * @return True if the 'customFields' field has been set, false otherwise.
      */
    public boolean hasCustomFields() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'customFields' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearCustomFields() {
      customFields = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderDetails' field.
      * @return The value.
      */
    public com.fretron.Model.OrderRelation getOrderDetails() {
      return orderDetails;
    }

    /**
      * Sets the value of the 'orderDetails' field.
      * @param value The value of 'orderDetails'.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder setOrderDetails(com.fretron.Model.OrderRelation value) {
      validate(fields()[17], value);
      this.orderDetailsBuilder = null;
      this.orderDetails = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'orderDetails' field has been set.
      * @return True if the 'orderDetails' field has been set, false otherwise.
      */
    public boolean hasOrderDetails() {
      return fieldSetFlags()[17];
    }

    /**
     * Gets the Builder instance for the 'orderDetails' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.OrderRelation.Builder getOrderDetailsBuilder() {
      if (orderDetailsBuilder == null) {
        if (hasOrderDetails()) {
          setOrderDetailsBuilder(com.fretron.Model.OrderRelation.newBuilder(orderDetails));
        } else {
          setOrderDetailsBuilder(com.fretron.Model.OrderRelation.newBuilder());
        }
      }
      return orderDetailsBuilder;
    }

    /**
     * Sets the Builder instance for the 'orderDetails' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Equipment.Builder setOrderDetailsBuilder(com.fretron.Model.OrderRelation.Builder value) {
      clearOrderDetails();
      orderDetailsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'orderDetails' field has an active Builder instance
     * @return True if the 'orderDetails' field has an active Builder instance
     */
    public boolean hasOrderDetailsBuilder() {
      return orderDetailsBuilder != null;
    }

    /**
      * Clears the value of the 'orderDetails' field.
      * @return This builder.
      */
    public com.fretron.Model.Equipment.Builder clearOrderDetails() {
      orderDetails = null;
      orderDetailsBuilder = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    @Override
    public Equipment build() {
      try {
        Equipment record = new Equipment();
        record._id = fieldSetFlags()[0] ? this._id : (java.lang.String) defaultValue(fields()[0]);
        record.inventoryNo = fieldSetFlags()[1] ? this.inventoryNo : (java.lang.String) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (java.lang.String) defaultValue(fields()[2]);
        record.inventoryTypeId = fieldSetFlags()[3] ? this.inventoryTypeId : (java.lang.String) defaultValue(fields()[3]);
        record.catagory = fieldSetFlags()[4] ? this.catagory : (java.lang.String) defaultValue(fields()[4]);
        record.name = fieldSetFlags()[5] ? this.name : (java.lang.String) defaultValue(fields()[5]);
        record.orgId = fieldSetFlags()[6] ? this.orgId : (java.lang.String) defaultValue(fields()[6]);
        record.updatedBy = fieldSetFlags()[7] ? this.updatedBy : (java.lang.String) defaultValue(fields()[7]);
        if (locationBuilder != null) {
          record.location = this.locationBuilder.build();
        } else {
          record.location = fieldSetFlags()[8] ? this.location : (com.fretron.Model.Place) defaultValue(fields()[8]);
        }
        record.shipmentNumber = fieldSetFlags()[9] ? this.shipmentNumber : (java.lang.String) defaultValue(fields()[9]);
        if (updatesBuilder != null) {
          record.updates = this.updatesBuilder.build();
        } else {
          record.updates = fieldSetFlags()[10] ? this.updates : (com.fretron.Model.Updates) defaultValue(fields()[10]);
        }
        record.status = fieldSetFlags()[11] ? this.status : (java.lang.String) defaultValue(fields()[11]);
        record.usedBy = fieldSetFlags()[12] ? this.usedBy : (java.lang.String) defaultValue(fields()[12]);
        record.attachedResourceId = fieldSetFlags()[13] ? this.attachedResourceId : (java.lang.String) defaultValue(fields()[13]);
        record.attachedResourceNumber = fieldSetFlags()[14] ? this.attachedResourceNumber : (java.lang.String) defaultValue(fields()[14]);
        record.statusDescription = fieldSetFlags()[15] ? this.statusDescription : (java.lang.String) defaultValue(fields()[15]);
        record.customFields = fieldSetFlags()[16] ? this.customFields : (java.util.List<com.fretron.Model.LiteCustomFields>) defaultValue(fields()[16]);
        if (orderDetailsBuilder != null) {
          record.orderDetails = this.orderDetailsBuilder.build();
        } else {
          record.orderDetails = fieldSetFlags()[17] ? this.orderDetails : (com.fretron.Model.OrderRelation) defaultValue(fields()[17]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

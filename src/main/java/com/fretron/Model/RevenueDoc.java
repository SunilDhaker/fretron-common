/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RevenueDoc extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2854326786279289788L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RevenueDoc\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"shipmentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"applicability\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"distributionBasis\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lineItems\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ShipmentCostLineItem\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"consignmentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"charge\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ChartsOfAccountLite\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accountGroup\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accountPath\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}],\"default\":null},{\"name\":\"billId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billItemId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"charge\",\"type\":[\"null\",\"ChartsOfAccountLite\"],\"default\":null},{\"name\":\"customer\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LiteBusinessPartner\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"gstn\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"group\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PartnerGroup\",\"fields\":[{\"name\":\"partnerType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"billId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billItemId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billFeedingType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Updates\",\"fields\":[{\"name\":\"forwardReasons\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfInformation\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updateType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"forwardedFrom\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"revision\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"traceID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"changes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ChangeUpdate\",\"fields\":[{\"name\":\"currentValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.String shipmentId;
  @Deprecated public java.lang.Double amount;
  @Deprecated public java.lang.String applicability;
  @Deprecated public java.lang.String distributionBasis;
  @Deprecated public java.util.List<com.fretron.Model.ShipmentCostLineItem> lineItems;
  @Deprecated public com.fretron.Model.ChartsOfAccountLite charge;
  @Deprecated public com.fretron.Model.LiteBusinessPartner customer;
  @Deprecated public java.lang.String billId;
  @Deprecated public java.lang.String billItemId;
  @Deprecated public java.lang.String billStatus;
  @Deprecated public java.lang.String billFeedingType;
  @Deprecated public com.fretron.Model.Updates updates;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RevenueDoc() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param orgId The new value for orgId
   * @param shipmentId The new value for shipmentId
   * @param amount The new value for amount
   * @param applicability The new value for applicability
   * @param distributionBasis The new value for distributionBasis
   * @param lineItems The new value for lineItems
   * @param charge The new value for charge
   * @param customer The new value for customer
   * @param billId The new value for billId
   * @param billItemId The new value for billItemId
   * @param billStatus The new value for billStatus
   * @param billFeedingType The new value for billFeedingType
   * @param updates The new value for updates
   */
  public RevenueDoc(java.lang.String uuid, java.lang.String orgId, java.lang.String shipmentId, java.lang.Double amount, java.lang.String applicability, java.lang.String distributionBasis, java.util.List<com.fretron.Model.ShipmentCostLineItem> lineItems, com.fretron.Model.ChartsOfAccountLite charge, com.fretron.Model.LiteBusinessPartner customer, java.lang.String billId, java.lang.String billItemId, java.lang.String billStatus, java.lang.String billFeedingType, com.fretron.Model.Updates updates) {
    this.uuid = uuid;
    this.orgId = orgId;
    this.shipmentId = shipmentId;
    this.amount = amount;
    this.applicability = applicability;
    this.distributionBasis = distributionBasis;
    this.lineItems = lineItems;
    this.charge = charge;
    this.customer = customer;
    this.billId = billId;
    this.billItemId = billItemId;
    this.billStatus = billStatus;
    this.billFeedingType = billFeedingType;
    this.updates = updates;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return orgId;
    case 2: return shipmentId;
    case 3: return amount;
    case 4: return applicability;
    case 5: return distributionBasis;
    case 6: return lineItems;
    case 7: return charge;
    case 8: return customer;
    case 9: return billId;
    case 10: return billItemId;
    case 11: return billStatus;
    case 12: return billFeedingType;
    case 13: return updates;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: orgId = (java.lang.String)value$; break;
    case 2: shipmentId = (java.lang.String)value$; break;
    case 3: amount = (java.lang.Double)value$; break;
    case 4: applicability = (java.lang.String)value$; break;
    case 5: distributionBasis = (java.lang.String)value$; break;
    case 6: lineItems = (java.util.List<com.fretron.Model.ShipmentCostLineItem>)value$; break;
    case 7: charge = (com.fretron.Model.ChartsOfAccountLite)value$; break;
    case 8: customer = (com.fretron.Model.LiteBusinessPartner)value$; break;
    case 9: billId = (java.lang.String)value$; break;
    case 10: billItemId = (java.lang.String)value$; break;
    case 11: billStatus = (java.lang.String)value$; break;
    case 12: billFeedingType = (java.lang.String)value$; break;
    case 13: updates = (com.fretron.Model.Updates)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'shipmentId' field.
   * @return The value of the 'shipmentId' field.
   */
  public java.lang.String getShipmentId() {
    return shipmentId;
  }

  /**
   * Sets the value of the 'shipmentId' field.
   * @param value the value to set.
   */
  public void setShipmentId(java.lang.String value) {
    this.shipmentId = value;
  }

  /**
   * Gets the value of the 'amount' field.
   * @return The value of the 'amount' field.
   */
  public java.lang.Double getAmount() {
    return amount;
  }

  /**
   * Sets the value of the 'amount' field.
   * @param value the value to set.
   */
  public void setAmount(java.lang.Double value) {
    this.amount = value;
  }

  /**
   * Gets the value of the 'applicability' field.
   * @return The value of the 'applicability' field.
   */
  public java.lang.String getApplicability() {
    return applicability;
  }

  /**
   * Sets the value of the 'applicability' field.
   * @param value the value to set.
   */
  public void setApplicability(java.lang.String value) {
    this.applicability = value;
  }

  /**
   * Gets the value of the 'distributionBasis' field.
   * @return The value of the 'distributionBasis' field.
   */
  public java.lang.String getDistributionBasis() {
    return distributionBasis;
  }

  /**
   * Sets the value of the 'distributionBasis' field.
   * @param value the value to set.
   */
  public void setDistributionBasis(java.lang.String value) {
    this.distributionBasis = value;
  }

  /**
   * Gets the value of the 'lineItems' field.
   * @return The value of the 'lineItems' field.
   */
  public java.util.List<com.fretron.Model.ShipmentCostLineItem> getLineItems() {
    return lineItems;
  }

  /**
   * Sets the value of the 'lineItems' field.
   * @param value the value to set.
   */
  public void setLineItems(java.util.List<com.fretron.Model.ShipmentCostLineItem> value) {
    this.lineItems = value;
  }

  /**
   * Gets the value of the 'charge' field.
   * @return The value of the 'charge' field.
   */
  public com.fretron.Model.ChartsOfAccountLite getCharge() {
    return charge;
  }

  /**
   * Sets the value of the 'charge' field.
   * @param value the value to set.
   */
  public void setCharge(com.fretron.Model.ChartsOfAccountLite value) {
    this.charge = value;
  }

  /**
   * Gets the value of the 'customer' field.
   * @return The value of the 'customer' field.
   */
  public com.fretron.Model.LiteBusinessPartner getCustomer() {
    return customer;
  }

  /**
   * Sets the value of the 'customer' field.
   * @param value the value to set.
   */
  public void setCustomer(com.fretron.Model.LiteBusinessPartner value) {
    this.customer = value;
  }

  /**
   * Gets the value of the 'billId' field.
   * @return The value of the 'billId' field.
   */
  public java.lang.String getBillId() {
    return billId;
  }

  /**
   * Sets the value of the 'billId' field.
   * @param value the value to set.
   */
  public void setBillId(java.lang.String value) {
    this.billId = value;
  }

  /**
   * Gets the value of the 'billItemId' field.
   * @return The value of the 'billItemId' field.
   */
  public java.lang.String getBillItemId() {
    return billItemId;
  }

  /**
   * Sets the value of the 'billItemId' field.
   * @param value the value to set.
   */
  public void setBillItemId(java.lang.String value) {
    this.billItemId = value;
  }

  /**
   * Gets the value of the 'billStatus' field.
   * @return The value of the 'billStatus' field.
   */
  public java.lang.String getBillStatus() {
    return billStatus;
  }

  /**
   * Sets the value of the 'billStatus' field.
   * @param value the value to set.
   */
  public void setBillStatus(java.lang.String value) {
    this.billStatus = value;
  }

  /**
   * Gets the value of the 'billFeedingType' field.
   * @return The value of the 'billFeedingType' field.
   */
  public java.lang.String getBillFeedingType() {
    return billFeedingType;
  }

  /**
   * Sets the value of the 'billFeedingType' field.
   * @param value the value to set.
   */
  public void setBillFeedingType(java.lang.String value) {
    this.billFeedingType = value;
  }

  /**
   * Gets the value of the 'updates' field.
   * @return The value of the 'updates' field.
   */
  public com.fretron.Model.Updates getUpdates() {
    return updates;
  }

  /**
   * Sets the value of the 'updates' field.
   * @param value the value to set.
   */
  public void setUpdates(com.fretron.Model.Updates value) {
    this.updates = value;
  }

  /**
   * Creates a new RevenueDoc RecordBuilder.
   * @return A new RevenueDoc RecordBuilder
   */
  public static com.fretron.Model.RevenueDoc.Builder newBuilder() {
    return new com.fretron.Model.RevenueDoc.Builder();
  }

  /**
   * Creates a new RevenueDoc RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RevenueDoc RecordBuilder
   */
  public static com.fretron.Model.RevenueDoc.Builder newBuilder(com.fretron.Model.RevenueDoc.Builder other) {
    return new com.fretron.Model.RevenueDoc.Builder(other);
  }

  /**
   * Creates a new RevenueDoc RecordBuilder by copying an existing RevenueDoc instance.
   * @param other The existing instance to copy.
   * @return A new RevenueDoc RecordBuilder
   */
  public static com.fretron.Model.RevenueDoc.Builder newBuilder(com.fretron.Model.RevenueDoc other) {
    return new com.fretron.Model.RevenueDoc.Builder(other);
  }

  /**
   * RecordBuilder for RevenueDoc instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RevenueDoc>
    implements org.apache.avro.data.RecordBuilder<RevenueDoc> {

    private java.lang.String uuid;
    private java.lang.String orgId;
    private java.lang.String shipmentId;
    private java.lang.Double amount;
    private java.lang.String applicability;
    private java.lang.String distributionBasis;
    private java.util.List<com.fretron.Model.ShipmentCostLineItem> lineItems;
    private com.fretron.Model.ChartsOfAccountLite charge;
    private com.fretron.Model.ChartsOfAccountLite.Builder chargeBuilder;
    private com.fretron.Model.LiteBusinessPartner customer;
    private com.fretron.Model.LiteBusinessPartner.Builder customerBuilder;
    private java.lang.String billId;
    private java.lang.String billItemId;
    private java.lang.String billStatus;
    private java.lang.String billFeedingType;
    private com.fretron.Model.Updates updates;
    private com.fretron.Model.Updates.Builder updatesBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.RevenueDoc.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgId)) {
        this.orgId = data().deepCopy(fields()[1].schema(), other.orgId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.shipmentId)) {
        this.shipmentId = data().deepCopy(fields()[2].schema(), other.shipmentId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.amount)) {
        this.amount = data().deepCopy(fields()[3].schema(), other.amount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.applicability)) {
        this.applicability = data().deepCopy(fields()[4].schema(), other.applicability);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.distributionBasis)) {
        this.distributionBasis = data().deepCopy(fields()[5].schema(), other.distributionBasis);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.lineItems)) {
        this.lineItems = data().deepCopy(fields()[6].schema(), other.lineItems);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.charge)) {
        this.charge = data().deepCopy(fields()[7].schema(), other.charge);
        fieldSetFlags()[7] = true;
      }
      if (other.hasChargeBuilder()) {
        this.chargeBuilder = com.fretron.Model.ChartsOfAccountLite.newBuilder(other.getChargeBuilder());
      }
      if (isValidValue(fields()[8], other.customer)) {
        this.customer = data().deepCopy(fields()[8].schema(), other.customer);
        fieldSetFlags()[8] = true;
      }
      if (other.hasCustomerBuilder()) {
        this.customerBuilder = com.fretron.Model.LiteBusinessPartner.newBuilder(other.getCustomerBuilder());
      }
      if (isValidValue(fields()[9], other.billId)) {
        this.billId = data().deepCopy(fields()[9].schema(), other.billId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.billItemId)) {
        this.billItemId = data().deepCopy(fields()[10].schema(), other.billItemId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.billStatus)) {
        this.billStatus = data().deepCopy(fields()[11].schema(), other.billStatus);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.billFeedingType)) {
        this.billFeedingType = data().deepCopy(fields()[12].schema(), other.billFeedingType);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.updates)) {
        this.updates = data().deepCopy(fields()[13].schema(), other.updates);
        fieldSetFlags()[13] = true;
      }
      if (other.hasUpdatesBuilder()) {
        this.updatesBuilder = com.fretron.Model.Updates.newBuilder(other.getUpdatesBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing RevenueDoc instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.RevenueDoc other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgId)) {
        this.orgId = data().deepCopy(fields()[1].schema(), other.orgId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.shipmentId)) {
        this.shipmentId = data().deepCopy(fields()[2].schema(), other.shipmentId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.amount)) {
        this.amount = data().deepCopy(fields()[3].schema(), other.amount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.applicability)) {
        this.applicability = data().deepCopy(fields()[4].schema(), other.applicability);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.distributionBasis)) {
        this.distributionBasis = data().deepCopy(fields()[5].schema(), other.distributionBasis);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.lineItems)) {
        this.lineItems = data().deepCopy(fields()[6].schema(), other.lineItems);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.charge)) {
        this.charge = data().deepCopy(fields()[7].schema(), other.charge);
        fieldSetFlags()[7] = true;
      }
      this.chargeBuilder = null;
      if (isValidValue(fields()[8], other.customer)) {
        this.customer = data().deepCopy(fields()[8].schema(), other.customer);
        fieldSetFlags()[8] = true;
      }
      this.customerBuilder = null;
      if (isValidValue(fields()[9], other.billId)) {
        this.billId = data().deepCopy(fields()[9].schema(), other.billId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.billItemId)) {
        this.billItemId = data().deepCopy(fields()[10].schema(), other.billItemId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.billStatus)) {
        this.billStatus = data().deepCopy(fields()[11].schema(), other.billStatus);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.billFeedingType)) {
        this.billFeedingType = data().deepCopy(fields()[12].schema(), other.billFeedingType);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.updates)) {
        this.updates = data().deepCopy(fields()[13].schema(), other.updates);
        fieldSetFlags()[13] = true;
      }
      this.updatesBuilder = null;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setOrgId(java.lang.String value) {
      validate(fields()[1], value);
      this.orgId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'shipmentId' field.
      * @return The value.
      */
    public java.lang.String getShipmentId() {
      return shipmentId;
    }

    /**
      * Sets the value of the 'shipmentId' field.
      * @param value The value of 'shipmentId'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setShipmentId(java.lang.String value) {
      validate(fields()[2], value);
      this.shipmentId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'shipmentId' field has been set.
      * @return True if the 'shipmentId' field has been set, false otherwise.
      */
    public boolean hasShipmentId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'shipmentId' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearShipmentId() {
      shipmentId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'amount' field.
      * @return The value.
      */
    public java.lang.Double getAmount() {
      return amount;
    }

    /**
      * Sets the value of the 'amount' field.
      * @param value The value of 'amount'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setAmount(java.lang.Double value) {
      validate(fields()[3], value);
      this.amount = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'amount' field has been set.
      * @return True if the 'amount' field has been set, false otherwise.
      */
    public boolean hasAmount() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'amount' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearAmount() {
      amount = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'applicability' field.
      * @return The value.
      */
    public java.lang.String getApplicability() {
      return applicability;
    }

    /**
      * Sets the value of the 'applicability' field.
      * @param value The value of 'applicability'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setApplicability(java.lang.String value) {
      validate(fields()[4], value);
      this.applicability = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'applicability' field has been set.
      * @return True if the 'applicability' field has been set, false otherwise.
      */
    public boolean hasApplicability() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'applicability' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearApplicability() {
      applicability = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'distributionBasis' field.
      * @return The value.
      */
    public java.lang.String getDistributionBasis() {
      return distributionBasis;
    }

    /**
      * Sets the value of the 'distributionBasis' field.
      * @param value The value of 'distributionBasis'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setDistributionBasis(java.lang.String value) {
      validate(fields()[5], value);
      this.distributionBasis = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'distributionBasis' field has been set.
      * @return True if the 'distributionBasis' field has been set, false otherwise.
      */
    public boolean hasDistributionBasis() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'distributionBasis' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearDistributionBasis() {
      distributionBasis = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'lineItems' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.ShipmentCostLineItem> getLineItems() {
      return lineItems;
    }

    /**
      * Sets the value of the 'lineItems' field.
      * @param value The value of 'lineItems'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setLineItems(java.util.List<com.fretron.Model.ShipmentCostLineItem> value) {
      validate(fields()[6], value);
      this.lineItems = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'lineItems' field has been set.
      * @return True if the 'lineItems' field has been set, false otherwise.
      */
    public boolean hasLineItems() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'lineItems' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearLineItems() {
      lineItems = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'charge' field.
      * @return The value.
      */
    public com.fretron.Model.ChartsOfAccountLite getCharge() {
      return charge;
    }

    /**
      * Sets the value of the 'charge' field.
      * @param value The value of 'charge'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setCharge(com.fretron.Model.ChartsOfAccountLite value) {
      validate(fields()[7], value);
      this.chargeBuilder = null;
      this.charge = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'charge' field has been set.
      * @return True if the 'charge' field has been set, false otherwise.
      */
    public boolean hasCharge() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'charge' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.ChartsOfAccountLite.Builder getChargeBuilder() {
      if (chargeBuilder == null) {
        if (hasCharge()) {
          setChargeBuilder(com.fretron.Model.ChartsOfAccountLite.newBuilder(charge));
        } else {
          setChargeBuilder(com.fretron.Model.ChartsOfAccountLite.newBuilder());
        }
      }
      return chargeBuilder;
    }

    /**
     * Sets the Builder instance for the 'charge' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.RevenueDoc.Builder setChargeBuilder(com.fretron.Model.ChartsOfAccountLite.Builder value) {
      clearCharge();
      chargeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'charge' field has an active Builder instance
     * @return True if the 'charge' field has an active Builder instance
     */
    public boolean hasChargeBuilder() {
      return chargeBuilder != null;
    }

    /**
      * Clears the value of the 'charge' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearCharge() {
      charge = null;
      chargeBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'customer' field.
      * @return The value.
      */
    public com.fretron.Model.LiteBusinessPartner getCustomer() {
      return customer;
    }

    /**
      * Sets the value of the 'customer' field.
      * @param value The value of 'customer'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setCustomer(com.fretron.Model.LiteBusinessPartner value) {
      validate(fields()[8], value);
      this.customerBuilder = null;
      this.customer = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'customer' field has been set.
      * @return True if the 'customer' field has been set, false otherwise.
      */
    public boolean hasCustomer() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'customer' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.LiteBusinessPartner.Builder getCustomerBuilder() {
      if (customerBuilder == null) {
        if (hasCustomer()) {
          setCustomerBuilder(com.fretron.Model.LiteBusinessPartner.newBuilder(customer));
        } else {
          setCustomerBuilder(com.fretron.Model.LiteBusinessPartner.newBuilder());
        }
      }
      return customerBuilder;
    }

    /**
     * Sets the Builder instance for the 'customer' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.RevenueDoc.Builder setCustomerBuilder(com.fretron.Model.LiteBusinessPartner.Builder value) {
      clearCustomer();
      customerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'customer' field has an active Builder instance
     * @return True if the 'customer' field has an active Builder instance
     */
    public boolean hasCustomerBuilder() {
      return customerBuilder != null;
    }

    /**
      * Clears the value of the 'customer' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearCustomer() {
      customer = null;
      customerBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'billId' field.
      * @return The value.
      */
    public java.lang.String getBillId() {
      return billId;
    }

    /**
      * Sets the value of the 'billId' field.
      * @param value The value of 'billId'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setBillId(java.lang.String value) {
      validate(fields()[9], value);
      this.billId = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'billId' field has been set.
      * @return True if the 'billId' field has been set, false otherwise.
      */
    public boolean hasBillId() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'billId' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearBillId() {
      billId = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'billItemId' field.
      * @return The value.
      */
    public java.lang.String getBillItemId() {
      return billItemId;
    }

    /**
      * Sets the value of the 'billItemId' field.
      * @param value The value of 'billItemId'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setBillItemId(java.lang.String value) {
      validate(fields()[10], value);
      this.billItemId = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'billItemId' field has been set.
      * @return True if the 'billItemId' field has been set, false otherwise.
      */
    public boolean hasBillItemId() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'billItemId' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearBillItemId() {
      billItemId = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'billStatus' field.
      * @return The value.
      */
    public java.lang.String getBillStatus() {
      return billStatus;
    }

    /**
      * Sets the value of the 'billStatus' field.
      * @param value The value of 'billStatus'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setBillStatus(java.lang.String value) {
      validate(fields()[11], value);
      this.billStatus = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'billStatus' field has been set.
      * @return True if the 'billStatus' field has been set, false otherwise.
      */
    public boolean hasBillStatus() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'billStatus' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearBillStatus() {
      billStatus = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'billFeedingType' field.
      * @return The value.
      */
    public java.lang.String getBillFeedingType() {
      return billFeedingType;
    }

    /**
      * Sets the value of the 'billFeedingType' field.
      * @param value The value of 'billFeedingType'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setBillFeedingType(java.lang.String value) {
      validate(fields()[12], value);
      this.billFeedingType = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'billFeedingType' field has been set.
      * @return True if the 'billFeedingType' field has been set, false otherwise.
      */
    public boolean hasBillFeedingType() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'billFeedingType' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearBillFeedingType() {
      billFeedingType = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'updates' field.
      * @return The value.
      */
    public com.fretron.Model.Updates getUpdates() {
      return updates;
    }

    /**
      * Sets the value of the 'updates' field.
      * @param value The value of 'updates'.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder setUpdates(com.fretron.Model.Updates value) {
      validate(fields()[13], value);
      this.updatesBuilder = null;
      this.updates = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'updates' field has been set.
      * @return True if the 'updates' field has been set, false otherwise.
      */
    public boolean hasUpdates() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'updates' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Updates.Builder getUpdatesBuilder() {
      if (updatesBuilder == null) {
        if (hasUpdates()) {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder(updates));
        } else {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder());
        }
      }
      return updatesBuilder;
    }

    /**
     * Sets the Builder instance for the 'updates' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.RevenueDoc.Builder setUpdatesBuilder(com.fretron.Model.Updates.Builder value) {
      clearUpdates();
      updatesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'updates' field has an active Builder instance
     * @return True if the 'updates' field has an active Builder instance
     */
    public boolean hasUpdatesBuilder() {
      return updatesBuilder != null;
    }

    /**
      * Clears the value of the 'updates' field.
      * @return This builder.
      */
    public com.fretron.Model.RevenueDoc.Builder clearUpdates() {
      updates = null;
      updatesBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    public RevenueDoc build() {
      try {
        RevenueDoc record = new RevenueDoc();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.orgId = fieldSetFlags()[1] ? this.orgId : (java.lang.String) defaultValue(fields()[1]);
        record.shipmentId = fieldSetFlags()[2] ? this.shipmentId : (java.lang.String) defaultValue(fields()[2]);
        record.amount = fieldSetFlags()[3] ? this.amount : (java.lang.Double) defaultValue(fields()[3]);
        record.applicability = fieldSetFlags()[4] ? this.applicability : (java.lang.String) defaultValue(fields()[4]);
        record.distributionBasis = fieldSetFlags()[5] ? this.distributionBasis : (java.lang.String) defaultValue(fields()[5]);
        record.lineItems = fieldSetFlags()[6] ? this.lineItems : (java.util.List<com.fretron.Model.ShipmentCostLineItem>) defaultValue(fields()[6]);
        if (chargeBuilder != null) {
          record.charge = this.chargeBuilder.build();
        } else {
          record.charge = fieldSetFlags()[7] ? this.charge : (com.fretron.Model.ChartsOfAccountLite) defaultValue(fields()[7]);
        }
        if (customerBuilder != null) {
          record.customer = this.customerBuilder.build();
        } else {
          record.customer = fieldSetFlags()[8] ? this.customer : (com.fretron.Model.LiteBusinessPartner) defaultValue(fields()[8]);
        }
        record.billId = fieldSetFlags()[9] ? this.billId : (java.lang.String) defaultValue(fields()[9]);
        record.billItemId = fieldSetFlags()[10] ? this.billItemId : (java.lang.String) defaultValue(fields()[10]);
        record.billStatus = fieldSetFlags()[11] ? this.billStatus : (java.lang.String) defaultValue(fields()[11]);
        record.billFeedingType = fieldSetFlags()[12] ? this.billFeedingType : (java.lang.String) defaultValue(fields()[12]);
        if (updatesBuilder != null) {
          record.updates = this.updatesBuilder.build();
        } else {
          record.updates = fieldSetFlags()[13] ? this.updates : (com.fretron.Model.Updates) defaultValue(fields()[13]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

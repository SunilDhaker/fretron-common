/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Leg extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6221875449380274255L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Leg\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"origin\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Place\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"center\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"centerCoordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"suggestedRadius\",\"type\":\"double\",\"default\":null},{\"name\":\"viewport\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ViewPort\",\"fields\":[{\"name\":\"northeast\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"southwest\",\"type\":[\"null\",\"Location\"],\"default\":null}]}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hubId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"district\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subDistrict\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"boundary\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null},{\"name\":\"places\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Place\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isOwned\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"geoJsonBoundry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geometry\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"coordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"destination\",\"type\":[\"null\",\"Place\"],\"default\":null},{\"name\":\"originType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transportationMode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"allowedTransitDays\",\"type\":[\"null\",\"int\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String type;
  @Deprecated public com.fretron.Model.Place origin;
  @Deprecated public com.fretron.Model.Place destination;
  @Deprecated public java.lang.String originType;
  @Deprecated public java.lang.String transportationMode;
  @Deprecated public java.lang.Integer allowedTransitDays;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Leg() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param type The new value for type
   * @param origin The new value for origin
   * @param destination The new value for destination
   * @param originType The new value for originType
   * @param transportationMode The new value for transportationMode
   * @param allowedTransitDays The new value for allowedTransitDays
   */
  public Leg(java.lang.String uuid, java.lang.String type, com.fretron.Model.Place origin, com.fretron.Model.Place destination, java.lang.String originType, java.lang.String transportationMode, java.lang.Integer allowedTransitDays) {
    this.uuid = uuid;
    this.type = type;
    this.origin = origin;
    this.destination = destination;
    this.originType = originType;
    this.transportationMode = transportationMode;
    this.allowedTransitDays = allowedTransitDays;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return type;
    case 2: return origin;
    case 3: return destination;
    case 4: return originType;
    case 5: return transportationMode;
    case 6: return allowedTransitDays;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: type = (java.lang.String)value$; break;
    case 2: origin = (com.fretron.Model.Place)value$; break;
    case 3: destination = (com.fretron.Model.Place)value$; break;
    case 4: originType = (java.lang.String)value$; break;
    case 5: transportationMode = (java.lang.String)value$; break;
    case 6: allowedTransitDays = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'origin' field.
   * @return The value of the 'origin' field.
   */
  public com.fretron.Model.Place getOrigin() {
    return origin;
  }

  /**
   * Sets the value of the 'origin' field.
   * @param value the value to set.
   */
  public void setOrigin(com.fretron.Model.Place value) {
    this.origin = value;
  }

  /**
   * Gets the value of the 'destination' field.
   * @return The value of the 'destination' field.
   */
  public com.fretron.Model.Place getDestination() {
    return destination;
  }

  /**
   * Sets the value of the 'destination' field.
   * @param value the value to set.
   */
  public void setDestination(com.fretron.Model.Place value) {
    this.destination = value;
  }

  /**
   * Gets the value of the 'originType' field.
   * @return The value of the 'originType' field.
   */
  public java.lang.String getOriginType() {
    return originType;
  }

  /**
   * Sets the value of the 'originType' field.
   * @param value the value to set.
   */
  public void setOriginType(java.lang.String value) {
    this.originType = value;
  }

  /**
   * Gets the value of the 'transportationMode' field.
   * @return The value of the 'transportationMode' field.
   */
  public java.lang.String getTransportationMode() {
    return transportationMode;
  }

  /**
   * Sets the value of the 'transportationMode' field.
   * @param value the value to set.
   */
  public void setTransportationMode(java.lang.String value) {
    this.transportationMode = value;
  }

  /**
   * Gets the value of the 'allowedTransitDays' field.
   * @return The value of the 'allowedTransitDays' field.
   */
  public java.lang.Integer getAllowedTransitDays() {
    return allowedTransitDays;
  }

  /**
   * Sets the value of the 'allowedTransitDays' field.
   * @param value the value to set.
   */
  public void setAllowedTransitDays(java.lang.Integer value) {
    this.allowedTransitDays = value;
  }

  /**
   * Creates a new Leg RecordBuilder.
   * @return A new Leg RecordBuilder
   */
  public static com.fretron.Model.Leg.Builder newBuilder() {
    return new com.fretron.Model.Leg.Builder();
  }

  /**
   * Creates a new Leg RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Leg RecordBuilder
   */
  public static com.fretron.Model.Leg.Builder newBuilder(com.fretron.Model.Leg.Builder other) {
    return new com.fretron.Model.Leg.Builder(other);
  }

  /**
   * Creates a new Leg RecordBuilder by copying an existing Leg instance.
   * @param other The existing instance to copy.
   * @return A new Leg RecordBuilder
   */
  public static com.fretron.Model.Leg.Builder newBuilder(com.fretron.Model.Leg other) {
    return new com.fretron.Model.Leg.Builder(other);
  }

  /**
   * RecordBuilder for Leg instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Leg>
    implements org.apache.avro.data.RecordBuilder<Leg> {

    private java.lang.String uuid;
    private java.lang.String type;
    private com.fretron.Model.Place origin;
    private com.fretron.Model.Place.Builder originBuilder;
    private com.fretron.Model.Place destination;
    private com.fretron.Model.Place.Builder destinationBuilder;
    private java.lang.String originType;
    private java.lang.String transportationMode;
    private java.lang.Integer allowedTransitDays;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.Leg.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.origin)) {
        this.origin = data().deepCopy(fields()[2].schema(), other.origin);
        fieldSetFlags()[2] = true;
      }
      if (other.hasOriginBuilder()) {
        this.originBuilder = com.fretron.Model.Place.newBuilder(other.getOriginBuilder());
      }
      if (isValidValue(fields()[3], other.destination)) {
        this.destination = data().deepCopy(fields()[3].schema(), other.destination);
        fieldSetFlags()[3] = true;
      }
      if (other.hasDestinationBuilder()) {
        this.destinationBuilder = com.fretron.Model.Place.newBuilder(other.getDestinationBuilder());
      }
      if (isValidValue(fields()[4], other.originType)) {
        this.originType = data().deepCopy(fields()[4].schema(), other.originType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.transportationMode)) {
        this.transportationMode = data().deepCopy(fields()[5].schema(), other.transportationMode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.allowedTransitDays)) {
        this.allowedTransitDays = data().deepCopy(fields()[6].schema(), other.allowedTransitDays);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Leg instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.Leg other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.origin)) {
        this.origin = data().deepCopy(fields()[2].schema(), other.origin);
        fieldSetFlags()[2] = true;
      }
      this.originBuilder = null;
      if (isValidValue(fields()[3], other.destination)) {
        this.destination = data().deepCopy(fields()[3].schema(), other.destination);
        fieldSetFlags()[3] = true;
      }
      this.destinationBuilder = null;
      if (isValidValue(fields()[4], other.originType)) {
        this.originType = data().deepCopy(fields()[4].schema(), other.originType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.transportationMode)) {
        this.transportationMode = data().deepCopy(fields()[5].schema(), other.transportationMode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.allowedTransitDays)) {
        this.allowedTransitDays = data().deepCopy(fields()[6].schema(), other.allowedTransitDays);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder setType(java.lang.String value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'origin' field.
      * @return The value.
      */
    public com.fretron.Model.Place getOrigin() {
      return origin;
    }

    /**
      * Sets the value of the 'origin' field.
      * @param value The value of 'origin'.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder setOrigin(com.fretron.Model.Place value) {
      validate(fields()[2], value);
      this.originBuilder = null;
      this.origin = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'origin' field has been set.
      * @return True if the 'origin' field has been set, false otherwise.
      */
    public boolean hasOrigin() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'origin' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Place.Builder getOriginBuilder() {
      if (originBuilder == null) {
        if (hasOrigin()) {
          setOriginBuilder(com.fretron.Model.Place.newBuilder(origin));
        } else {
          setOriginBuilder(com.fretron.Model.Place.newBuilder());
        }
      }
      return originBuilder;
    }

    /**
     * Sets the Builder instance for the 'origin' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Leg.Builder setOriginBuilder(com.fretron.Model.Place.Builder value) {
      clearOrigin();
      originBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'origin' field has an active Builder instance
     * @return True if the 'origin' field has an active Builder instance
     */
    public boolean hasOriginBuilder() {
      return originBuilder != null;
    }

    /**
      * Clears the value of the 'origin' field.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder clearOrigin() {
      origin = null;
      originBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'destination' field.
      * @return The value.
      */
    public com.fretron.Model.Place getDestination() {
      return destination;
    }

    /**
      * Sets the value of the 'destination' field.
      * @param value The value of 'destination'.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder setDestination(com.fretron.Model.Place value) {
      validate(fields()[3], value);
      this.destinationBuilder = null;
      this.destination = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'destination' field has been set.
      * @return True if the 'destination' field has been set, false otherwise.
      */
    public boolean hasDestination() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'destination' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Place.Builder getDestinationBuilder() {
      if (destinationBuilder == null) {
        if (hasDestination()) {
          setDestinationBuilder(com.fretron.Model.Place.newBuilder(destination));
        } else {
          setDestinationBuilder(com.fretron.Model.Place.newBuilder());
        }
      }
      return destinationBuilder;
    }

    /**
     * Sets the Builder instance for the 'destination' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Leg.Builder setDestinationBuilder(com.fretron.Model.Place.Builder value) {
      clearDestination();
      destinationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'destination' field has an active Builder instance
     * @return True if the 'destination' field has an active Builder instance
     */
    public boolean hasDestinationBuilder() {
      return destinationBuilder != null;
    }

    /**
      * Clears the value of the 'destination' field.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder clearDestination() {
      destination = null;
      destinationBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'originType' field.
      * @return The value.
      */
    public java.lang.String getOriginType() {
      return originType;
    }

    /**
      * Sets the value of the 'originType' field.
      * @param value The value of 'originType'.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder setOriginType(java.lang.String value) {
      validate(fields()[4], value);
      this.originType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'originType' field has been set.
      * @return True if the 'originType' field has been set, false otherwise.
      */
    public boolean hasOriginType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'originType' field.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder clearOriginType() {
      originType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'transportationMode' field.
      * @return The value.
      */
    public java.lang.String getTransportationMode() {
      return transportationMode;
    }

    /**
      * Sets the value of the 'transportationMode' field.
      * @param value The value of 'transportationMode'.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder setTransportationMode(java.lang.String value) {
      validate(fields()[5], value);
      this.transportationMode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'transportationMode' field has been set.
      * @return True if the 'transportationMode' field has been set, false otherwise.
      */
    public boolean hasTransportationMode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'transportationMode' field.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder clearTransportationMode() {
      transportationMode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowedTransitDays' field.
      * @return The value.
      */
    public java.lang.Integer getAllowedTransitDays() {
      return allowedTransitDays;
    }

    /**
      * Sets the value of the 'allowedTransitDays' field.
      * @param value The value of 'allowedTransitDays'.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder setAllowedTransitDays(java.lang.Integer value) {
      validate(fields()[6], value);
      this.allowedTransitDays = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'allowedTransitDays' field has been set.
      * @return True if the 'allowedTransitDays' field has been set, false otherwise.
      */
    public boolean hasAllowedTransitDays() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'allowedTransitDays' field.
      * @return This builder.
      */
    public com.fretron.Model.Leg.Builder clearAllowedTransitDays() {
      allowedTransitDays = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public Leg build() {
      try {
        Leg record = new Leg();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (java.lang.String) defaultValue(fields()[1]);
        if (originBuilder != null) {
          record.origin = this.originBuilder.build();
        } else {
          record.origin = fieldSetFlags()[2] ? this.origin : (com.fretron.Model.Place) defaultValue(fields()[2]);
        }
        if (destinationBuilder != null) {
          record.destination = this.destinationBuilder.build();
        } else {
          record.destination = fieldSetFlags()[3] ? this.destination : (com.fretron.Model.Place) defaultValue(fields()[3]);
        }
        record.originType = fieldSetFlags()[4] ? this.originType : (java.lang.String) defaultValue(fields()[4]);
        record.transportationMode = fieldSetFlags()[5] ? this.transportationMode : (java.lang.String) defaultValue(fields()[5]);
        record.allowedTransitDays = fieldSetFlags()[6] ? this.allowedTransitDays : (java.lang.Integer) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

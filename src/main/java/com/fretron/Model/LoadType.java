/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LoadType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5344115552399851274L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoadType\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"partnerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleCategory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"numberOfWheels\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"passingCapacityMT\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"bodyType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dimensionString\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.String partnerId;
  @Deprecated public java.lang.String vehicleCategory;
  @Deprecated public java.lang.Integer numberOfWheels;
  @Deprecated public java.lang.Double passingCapacityMT;
  @Deprecated public java.lang.String bodyType;
  @Deprecated public java.lang.String dimensionString;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoadType() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param orgId The new value for orgId
   * @param partnerId The new value for partnerId
   * @param vehicleCategory The new value for vehicleCategory
   * @param numberOfWheels The new value for numberOfWheels
   * @param passingCapacityMT The new value for passingCapacityMT
   * @param bodyType The new value for bodyType
   * @param dimensionString The new value for dimensionString
   */
  public LoadType(java.lang.String name, java.lang.String orgId, java.lang.String partnerId, java.lang.String vehicleCategory, java.lang.Integer numberOfWheels, java.lang.Double passingCapacityMT, java.lang.String bodyType, java.lang.String dimensionString) {
    this.name = name;
    this.orgId = orgId;
    this.partnerId = partnerId;
    this.vehicleCategory = vehicleCategory;
    this.numberOfWheels = numberOfWheels;
    this.passingCapacityMT = passingCapacityMT;
    this.bodyType = bodyType;
    this.dimensionString = dimensionString;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return orgId;
    case 2: return partnerId;
    case 3: return vehicleCategory;
    case 4: return numberOfWheels;
    case 5: return passingCapacityMT;
    case 6: return bodyType;
    case 7: return dimensionString;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.String)value$; break;
    case 1: orgId = (java.lang.String)value$; break;
    case 2: partnerId = (java.lang.String)value$; break;
    case 3: vehicleCategory = (java.lang.String)value$; break;
    case 4: numberOfWheels = (java.lang.Integer)value$; break;
    case 5: passingCapacityMT = (java.lang.Double)value$; break;
    case 6: bodyType = (java.lang.String)value$; break;
    case 7: dimensionString = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'partnerId' field.
   * @return The value of the 'partnerId' field.
   */
  public java.lang.String getPartnerId() {
    return partnerId;
  }

  /**
   * Sets the value of the 'partnerId' field.
   * @param value the value to set.
   */
  public void setPartnerId(java.lang.String value) {
    this.partnerId = value;
  }

  /**
   * Gets the value of the 'vehicleCategory' field.
   * @return The value of the 'vehicleCategory' field.
   */
  public java.lang.String getVehicleCategory() {
    return vehicleCategory;
  }

  /**
   * Sets the value of the 'vehicleCategory' field.
   * @param value the value to set.
   */
  public void setVehicleCategory(java.lang.String value) {
    this.vehicleCategory = value;
  }

  /**
   * Gets the value of the 'numberOfWheels' field.
   * @return The value of the 'numberOfWheels' field.
   */
  public java.lang.Integer getNumberOfWheels() {
    return numberOfWheels;
  }

  /**
   * Sets the value of the 'numberOfWheels' field.
   * @param value the value to set.
   */
  public void setNumberOfWheels(java.lang.Integer value) {
    this.numberOfWheels = value;
  }

  /**
   * Gets the value of the 'passingCapacityMT' field.
   * @return The value of the 'passingCapacityMT' field.
   */
  public java.lang.Double getPassingCapacityMT() {
    return passingCapacityMT;
  }

  /**
   * Sets the value of the 'passingCapacityMT' field.
   * @param value the value to set.
   */
  public void setPassingCapacityMT(java.lang.Double value) {
    this.passingCapacityMT = value;
  }

  /**
   * Gets the value of the 'bodyType' field.
   * @return The value of the 'bodyType' field.
   */
  public java.lang.String getBodyType() {
    return bodyType;
  }

  /**
   * Sets the value of the 'bodyType' field.
   * @param value the value to set.
   */
  public void setBodyType(java.lang.String value) {
    this.bodyType = value;
  }

  /**
   * Gets the value of the 'dimensionString' field.
   * @return The value of the 'dimensionString' field.
   */
  public java.lang.String getDimensionString() {
    return dimensionString;
  }

  /**
   * Sets the value of the 'dimensionString' field.
   * @param value the value to set.
   */
  public void setDimensionString(java.lang.String value) {
    this.dimensionString = value;
  }

  /**
   * Creates a new LoadType RecordBuilder.
   * @return A new LoadType RecordBuilder
   */
  public static com.fretron.Model.LoadType.Builder newBuilder() {
    return new com.fretron.Model.LoadType.Builder();
  }

  /**
   * Creates a new LoadType RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoadType RecordBuilder
   */
  public static com.fretron.Model.LoadType.Builder newBuilder(com.fretron.Model.LoadType.Builder other) {
    return new com.fretron.Model.LoadType.Builder(other);
  }

  /**
   * Creates a new LoadType RecordBuilder by copying an existing LoadType instance.
   * @param other The existing instance to copy.
   * @return A new LoadType RecordBuilder
   */
  public static com.fretron.Model.LoadType.Builder newBuilder(com.fretron.Model.LoadType other) {
    return new com.fretron.Model.LoadType.Builder(other);
  }

  /**
   * RecordBuilder for LoadType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoadType>
    implements org.apache.avro.data.RecordBuilder<LoadType> {

    private java.lang.String name;
    private java.lang.String orgId;
    private java.lang.String partnerId;
    private java.lang.String vehicleCategory;
    private java.lang.Integer numberOfWheels;
    private java.lang.Double passingCapacityMT;
    private java.lang.String bodyType;
    private java.lang.String dimensionString;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.LoadType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgId)) {
        this.orgId = data().deepCopy(fields()[1].schema(), other.orgId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.partnerId)) {
        this.partnerId = data().deepCopy(fields()[2].schema(), other.partnerId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vehicleCategory)) {
        this.vehicleCategory = data().deepCopy(fields()[3].schema(), other.vehicleCategory);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.numberOfWheels)) {
        this.numberOfWheels = data().deepCopy(fields()[4].schema(), other.numberOfWheels);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.passingCapacityMT)) {
        this.passingCapacityMT = data().deepCopy(fields()[5].schema(), other.passingCapacityMT);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.bodyType)) {
        this.bodyType = data().deepCopy(fields()[6].schema(), other.bodyType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.dimensionString)) {
        this.dimensionString = data().deepCopy(fields()[7].schema(), other.dimensionString);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing LoadType instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.LoadType other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgId)) {
        this.orgId = data().deepCopy(fields()[1].schema(), other.orgId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.partnerId)) {
        this.partnerId = data().deepCopy(fields()[2].schema(), other.partnerId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vehicleCategory)) {
        this.vehicleCategory = data().deepCopy(fields()[3].schema(), other.vehicleCategory);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.numberOfWheels)) {
        this.numberOfWheels = data().deepCopy(fields()[4].schema(), other.numberOfWheels);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.passingCapacityMT)) {
        this.passingCapacityMT = data().deepCopy(fields()[5].schema(), other.passingCapacityMT);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.bodyType)) {
        this.bodyType = data().deepCopy(fields()[6].schema(), other.bodyType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.dimensionString)) {
        this.dimensionString = data().deepCopy(fields()[7].schema(), other.dimensionString);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setName(java.lang.String value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setOrgId(java.lang.String value) {
      validate(fields()[1], value);
      this.orgId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'partnerId' field.
      * @return The value.
      */
    public java.lang.String getPartnerId() {
      return partnerId;
    }

    /**
      * Sets the value of the 'partnerId' field.
      * @param value The value of 'partnerId'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setPartnerId(java.lang.String value) {
      validate(fields()[2], value);
      this.partnerId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'partnerId' field has been set.
      * @return True if the 'partnerId' field has been set, false otherwise.
      */
    public boolean hasPartnerId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'partnerId' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearPartnerId() {
      partnerId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleCategory' field.
      * @return The value.
      */
    public java.lang.String getVehicleCategory() {
      return vehicleCategory;
    }

    /**
      * Sets the value of the 'vehicleCategory' field.
      * @param value The value of 'vehicleCategory'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setVehicleCategory(java.lang.String value) {
      validate(fields()[3], value);
      this.vehicleCategory = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleCategory' field has been set.
      * @return True if the 'vehicleCategory' field has been set, false otherwise.
      */
    public boolean hasVehicleCategory() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'vehicleCategory' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearVehicleCategory() {
      vehicleCategory = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'numberOfWheels' field.
      * @return The value.
      */
    public java.lang.Integer getNumberOfWheels() {
      return numberOfWheels;
    }

    /**
      * Sets the value of the 'numberOfWheels' field.
      * @param value The value of 'numberOfWheels'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setNumberOfWheels(java.lang.Integer value) {
      validate(fields()[4], value);
      this.numberOfWheels = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'numberOfWheels' field has been set.
      * @return True if the 'numberOfWheels' field has been set, false otherwise.
      */
    public boolean hasNumberOfWheels() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'numberOfWheels' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearNumberOfWheels() {
      numberOfWheels = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'passingCapacityMT' field.
      * @return The value.
      */
    public java.lang.Double getPassingCapacityMT() {
      return passingCapacityMT;
    }

    /**
      * Sets the value of the 'passingCapacityMT' field.
      * @param value The value of 'passingCapacityMT'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setPassingCapacityMT(java.lang.Double value) {
      validate(fields()[5], value);
      this.passingCapacityMT = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'passingCapacityMT' field has been set.
      * @return True if the 'passingCapacityMT' field has been set, false otherwise.
      */
    public boolean hasPassingCapacityMT() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'passingCapacityMT' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearPassingCapacityMT() {
      passingCapacityMT = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'bodyType' field.
      * @return The value.
      */
    public java.lang.String getBodyType() {
      return bodyType;
    }

    /**
      * Sets the value of the 'bodyType' field.
      * @param value The value of 'bodyType'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setBodyType(java.lang.String value) {
      validate(fields()[6], value);
      this.bodyType = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'bodyType' field has been set.
      * @return True if the 'bodyType' field has been set, false otherwise.
      */
    public boolean hasBodyType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'bodyType' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearBodyType() {
      bodyType = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'dimensionString' field.
      * @return The value.
      */
    public java.lang.String getDimensionString() {
      return dimensionString;
    }

    /**
      * Sets the value of the 'dimensionString' field.
      * @param value The value of 'dimensionString'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setDimensionString(java.lang.String value) {
      validate(fields()[7], value);
      this.dimensionString = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'dimensionString' field has been set.
      * @return True if the 'dimensionString' field has been set, false otherwise.
      */
    public boolean hasDimensionString() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'dimensionString' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearDimensionString() {
      dimensionString = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public LoadType build() {
      try {
        LoadType record = new LoadType();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.String) defaultValue(fields()[0]);
        record.orgId = fieldSetFlags()[1] ? this.orgId : (java.lang.String) defaultValue(fields()[1]);
        record.partnerId = fieldSetFlags()[2] ? this.partnerId : (java.lang.String) defaultValue(fields()[2]);
        record.vehicleCategory = fieldSetFlags()[3] ? this.vehicleCategory : (java.lang.String) defaultValue(fields()[3]);
        record.numberOfWheels = fieldSetFlags()[4] ? this.numberOfWheels : (java.lang.Integer) defaultValue(fields()[4]);
        record.passingCapacityMT = fieldSetFlags()[5] ? this.passingCapacityMT : (java.lang.Double) defaultValue(fields()[5]);
        record.bodyType = fieldSetFlags()[6] ? this.bodyType : (java.lang.String) defaultValue(fields()[6]);
        record.dimensionString = fieldSetFlags()[7] ? this.dimensionString : (java.lang.String) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

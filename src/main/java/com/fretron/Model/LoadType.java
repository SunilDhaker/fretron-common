/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LoadType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2111277233410355701L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoadType\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"partnerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleCategory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"numberOfWheels\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"passingCapacityMT\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"passingCapacityCFT\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"bodyType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"chassisType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dimensionString\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"minLength\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"includeMinLength\",\"type\":\"boolean\",\"default\":false},{\"name\":\"maxLength\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"includeMaxLength\",\"type\":\"boolean\",\"default\":false},{\"name\":\"minHeight\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"includeMinHeight\",\"type\":\"boolean\",\"default\":false},{\"name\":\"maxHeight\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"includeMaxHeight\",\"type\":\"boolean\",\"default\":false},{\"name\":\"bodyTypes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"chassisTypes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.String partnerId;
  @Deprecated public java.lang.String vehicleCategory;
  @Deprecated public java.lang.Integer numberOfWheels;
  @Deprecated public java.lang.Double passingCapacityMT;
  @Deprecated public java.lang.Double passingCapacityCFT;
  @Deprecated public java.lang.String bodyType;
  @Deprecated public java.lang.String chassisType;
  @Deprecated public java.lang.String dimensionString;
  @Deprecated public java.lang.Double minLength;
  @Deprecated public boolean includeMinLength;
  @Deprecated public java.lang.Double maxLength;
  @Deprecated public boolean includeMaxLength;
  @Deprecated public java.lang.Double minHeight;
  @Deprecated public boolean includeMinHeight;
  @Deprecated public java.lang.Double maxHeight;
  @Deprecated public boolean includeMaxHeight;
  @Deprecated public java.util.List<java.lang.String> bodyTypes;
  @Deprecated public java.util.List<java.lang.String> chassisTypes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoadType() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param uuid The new value for uuid
   * @param orgId The new value for orgId
   * @param partnerId The new value for partnerId
   * @param vehicleCategory The new value for vehicleCategory
   * @param numberOfWheels The new value for numberOfWheels
   * @param passingCapacityMT The new value for passingCapacityMT
   * @param passingCapacityCFT The new value for passingCapacityCFT
   * @param bodyType The new value for bodyType
   * @param chassisType The new value for chassisType
   * @param dimensionString The new value for dimensionString
   * @param minLength The new value for minLength
   * @param includeMinLength The new value for includeMinLength
   * @param maxLength The new value for maxLength
   * @param includeMaxLength The new value for includeMaxLength
   * @param minHeight The new value for minHeight
   * @param includeMinHeight The new value for includeMinHeight
   * @param maxHeight The new value for maxHeight
   * @param includeMaxHeight The new value for includeMaxHeight
   * @param bodyTypes The new value for bodyTypes
   * @param chassisTypes The new value for chassisTypes
   */
  public LoadType(java.lang.String name, java.lang.String uuid, java.lang.String orgId, java.lang.String partnerId, java.lang.String vehicleCategory, java.lang.Integer numberOfWheels, java.lang.Double passingCapacityMT, java.lang.Double passingCapacityCFT, java.lang.String bodyType, java.lang.String chassisType, java.lang.String dimensionString, java.lang.Double minLength, java.lang.Boolean includeMinLength, java.lang.Double maxLength, java.lang.Boolean includeMaxLength, java.lang.Double minHeight, java.lang.Boolean includeMinHeight, java.lang.Double maxHeight, java.lang.Boolean includeMaxHeight, java.util.List<java.lang.String> bodyTypes, java.util.List<java.lang.String> chassisTypes) {
    this.name = name;
    this.uuid = uuid;
    this.orgId = orgId;
    this.partnerId = partnerId;
    this.vehicleCategory = vehicleCategory;
    this.numberOfWheels = numberOfWheels;
    this.passingCapacityMT = passingCapacityMT;
    this.passingCapacityCFT = passingCapacityCFT;
    this.bodyType = bodyType;
    this.chassisType = chassisType;
    this.dimensionString = dimensionString;
    this.minLength = minLength;
    this.includeMinLength = includeMinLength;
    this.maxLength = maxLength;
    this.includeMaxLength = includeMaxLength;
    this.minHeight = minHeight;
    this.includeMinHeight = includeMinHeight;
    this.maxHeight = maxHeight;
    this.includeMaxHeight = includeMaxHeight;
    this.bodyTypes = bodyTypes;
    this.chassisTypes = chassisTypes;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return uuid;
    case 2: return orgId;
    case 3: return partnerId;
    case 4: return vehicleCategory;
    case 5: return numberOfWheels;
    case 6: return passingCapacityMT;
    case 7: return passingCapacityCFT;
    case 8: return bodyType;
    case 9: return chassisType;
    case 10: return dimensionString;
    case 11: return minLength;
    case 12: return includeMinLength;
    case 13: return maxLength;
    case 14: return includeMaxLength;
    case 15: return minHeight;
    case 16: return includeMinHeight;
    case 17: return maxHeight;
    case 18: return includeMaxHeight;
    case 19: return bodyTypes;
    case 20: return chassisTypes;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.String)value$; break;
    case 1: uuid = (java.lang.String)value$; break;
    case 2: orgId = (java.lang.String)value$; break;
    case 3: partnerId = (java.lang.String)value$; break;
    case 4: vehicleCategory = (java.lang.String)value$; break;
    case 5: numberOfWheels = (java.lang.Integer)value$; break;
    case 6: passingCapacityMT = (java.lang.Double)value$; break;
    case 7: passingCapacityCFT = (java.lang.Double)value$; break;
    case 8: bodyType = (java.lang.String)value$; break;
    case 9: chassisType = (java.lang.String)value$; break;
    case 10: dimensionString = (java.lang.String)value$; break;
    case 11: minLength = (java.lang.Double)value$; break;
    case 12: includeMinLength = (java.lang.Boolean)value$; break;
    case 13: maxLength = (java.lang.Double)value$; break;
    case 14: includeMaxLength = (java.lang.Boolean)value$; break;
    case 15: minHeight = (java.lang.Double)value$; break;
    case 16: includeMinHeight = (java.lang.Boolean)value$; break;
    case 17: maxHeight = (java.lang.Double)value$; break;
    case 18: includeMaxHeight = (java.lang.Boolean)value$; break;
    case 19: bodyTypes = (java.util.List<java.lang.String>)value$; break;
    case 20: chassisTypes = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'partnerId' field.
   * @return The value of the 'partnerId' field.
   */
  public java.lang.String getPartnerId() {
    return partnerId;
  }

  /**
   * Sets the value of the 'partnerId' field.
   * @param value the value to set.
   */
  public void setPartnerId(java.lang.String value) {
    this.partnerId = value;
  }

  /**
   * Gets the value of the 'vehicleCategory' field.
   * @return The value of the 'vehicleCategory' field.
   */
  public java.lang.String getVehicleCategory() {
    return vehicleCategory;
  }

  /**
   * Sets the value of the 'vehicleCategory' field.
   * @param value the value to set.
   */
  public void setVehicleCategory(java.lang.String value) {
    this.vehicleCategory = value;
  }

  /**
   * Gets the value of the 'numberOfWheels' field.
   * @return The value of the 'numberOfWheels' field.
   */
  public java.lang.Integer getNumberOfWheels() {
    return numberOfWheels;
  }

  /**
   * Sets the value of the 'numberOfWheels' field.
   * @param value the value to set.
   */
  public void setNumberOfWheels(java.lang.Integer value) {
    this.numberOfWheels = value;
  }

  /**
   * Gets the value of the 'passingCapacityMT' field.
   * @return The value of the 'passingCapacityMT' field.
   */
  public java.lang.Double getPassingCapacityMT() {
    return passingCapacityMT;
  }

  /**
   * Sets the value of the 'passingCapacityMT' field.
   * @param value the value to set.
   */
  public void setPassingCapacityMT(java.lang.Double value) {
    this.passingCapacityMT = value;
  }

  /**
   * Gets the value of the 'passingCapacityCFT' field.
   * @return The value of the 'passingCapacityCFT' field.
   */
  public java.lang.Double getPassingCapacityCFT() {
    return passingCapacityCFT;
  }

  /**
   * Sets the value of the 'passingCapacityCFT' field.
   * @param value the value to set.
   */
  public void setPassingCapacityCFT(java.lang.Double value) {
    this.passingCapacityCFT = value;
  }

  /**
   * Gets the value of the 'bodyType' field.
   * @return The value of the 'bodyType' field.
   */
  public java.lang.String getBodyType() {
    return bodyType;
  }

  /**
   * Sets the value of the 'bodyType' field.
   * @param value the value to set.
   */
  public void setBodyType(java.lang.String value) {
    this.bodyType = value;
  }

  /**
   * Gets the value of the 'chassisType' field.
   * @return The value of the 'chassisType' field.
   */
  public java.lang.String getChassisType() {
    return chassisType;
  }

  /**
   * Sets the value of the 'chassisType' field.
   * @param value the value to set.
   */
  public void setChassisType(java.lang.String value) {
    this.chassisType = value;
  }

  /**
   * Gets the value of the 'dimensionString' field.
   * @return The value of the 'dimensionString' field.
   */
  public java.lang.String getDimensionString() {
    return dimensionString;
  }

  /**
   * Sets the value of the 'dimensionString' field.
   * @param value the value to set.
   */
  public void setDimensionString(java.lang.String value) {
    this.dimensionString = value;
  }

  /**
   * Gets the value of the 'minLength' field.
   * @return The value of the 'minLength' field.
   */
  public java.lang.Double getMinLength() {
    return minLength;
  }

  /**
   * Sets the value of the 'minLength' field.
   * @param value the value to set.
   */
  public void setMinLength(java.lang.Double value) {
    this.minLength = value;
  }

  /**
   * Gets the value of the 'includeMinLength' field.
   * @return The value of the 'includeMinLength' field.
   */
  public java.lang.Boolean getIncludeMinLength() {
    return includeMinLength;
  }

  /**
   * Sets the value of the 'includeMinLength' field.
   * @param value the value to set.
   */
  public void setIncludeMinLength(java.lang.Boolean value) {
    this.includeMinLength = value;
  }

  /**
   * Gets the value of the 'maxLength' field.
   * @return The value of the 'maxLength' field.
   */
  public java.lang.Double getMaxLength() {
    return maxLength;
  }

  /**
   * Sets the value of the 'maxLength' field.
   * @param value the value to set.
   */
  public void setMaxLength(java.lang.Double value) {
    this.maxLength = value;
  }

  /**
   * Gets the value of the 'includeMaxLength' field.
   * @return The value of the 'includeMaxLength' field.
   */
  public java.lang.Boolean getIncludeMaxLength() {
    return includeMaxLength;
  }

  /**
   * Sets the value of the 'includeMaxLength' field.
   * @param value the value to set.
   */
  public void setIncludeMaxLength(java.lang.Boolean value) {
    this.includeMaxLength = value;
  }

  /**
   * Gets the value of the 'minHeight' field.
   * @return The value of the 'minHeight' field.
   */
  public java.lang.Double getMinHeight() {
    return minHeight;
  }

  /**
   * Sets the value of the 'minHeight' field.
   * @param value the value to set.
   */
  public void setMinHeight(java.lang.Double value) {
    this.minHeight = value;
  }

  /**
   * Gets the value of the 'includeMinHeight' field.
   * @return The value of the 'includeMinHeight' field.
   */
  public java.lang.Boolean getIncludeMinHeight() {
    return includeMinHeight;
  }

  /**
   * Sets the value of the 'includeMinHeight' field.
   * @param value the value to set.
   */
  public void setIncludeMinHeight(java.lang.Boolean value) {
    this.includeMinHeight = value;
  }

  /**
   * Gets the value of the 'maxHeight' field.
   * @return The value of the 'maxHeight' field.
   */
  public java.lang.Double getMaxHeight() {
    return maxHeight;
  }

  /**
   * Sets the value of the 'maxHeight' field.
   * @param value the value to set.
   */
  public void setMaxHeight(java.lang.Double value) {
    this.maxHeight = value;
  }

  /**
   * Gets the value of the 'includeMaxHeight' field.
   * @return The value of the 'includeMaxHeight' field.
   */
  public java.lang.Boolean getIncludeMaxHeight() {
    return includeMaxHeight;
  }

  /**
   * Sets the value of the 'includeMaxHeight' field.
   * @param value the value to set.
   */
  public void setIncludeMaxHeight(java.lang.Boolean value) {
    this.includeMaxHeight = value;
  }

  /**
   * Gets the value of the 'bodyTypes' field.
   * @return The value of the 'bodyTypes' field.
   */
  public java.util.List<java.lang.String> getBodyTypes() {
    return bodyTypes;
  }

  /**
   * Sets the value of the 'bodyTypes' field.
   * @param value the value to set.
   */
  public void setBodyTypes(java.util.List<java.lang.String> value) {
    this.bodyTypes = value;
  }

  /**
   * Gets the value of the 'chassisTypes' field.
   * @return The value of the 'chassisTypes' field.
   */
  public java.util.List<java.lang.String> getChassisTypes() {
    return chassisTypes;
  }

  /**
   * Sets the value of the 'chassisTypes' field.
   * @param value the value to set.
   */
  public void setChassisTypes(java.util.List<java.lang.String> value) {
    this.chassisTypes = value;
  }

  /**
   * Creates a new LoadType RecordBuilder.
   * @return A new LoadType RecordBuilder
   */
  public static com.fretron.Model.LoadType.Builder newBuilder() {
    return new com.fretron.Model.LoadType.Builder();
  }

  /**
   * Creates a new LoadType RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoadType RecordBuilder
   */
  public static com.fretron.Model.LoadType.Builder newBuilder(com.fretron.Model.LoadType.Builder other) {
    return new com.fretron.Model.LoadType.Builder(other);
  }

  /**
   * Creates a new LoadType RecordBuilder by copying an existing LoadType instance.
   * @param other The existing instance to copy.
   * @return A new LoadType RecordBuilder
   */
  public static com.fretron.Model.LoadType.Builder newBuilder(com.fretron.Model.LoadType other) {
    return new com.fretron.Model.LoadType.Builder(other);
  }

  /**
   * RecordBuilder for LoadType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoadType>
    implements org.apache.avro.data.RecordBuilder<LoadType> {

    private java.lang.String name;
    private java.lang.String uuid;
    private java.lang.String orgId;
    private java.lang.String partnerId;
    private java.lang.String vehicleCategory;
    private java.lang.Integer numberOfWheels;
    private java.lang.Double passingCapacityMT;
    private java.lang.Double passingCapacityCFT;
    private java.lang.String bodyType;
    private java.lang.String chassisType;
    private java.lang.String dimensionString;
    private java.lang.Double minLength;
    private boolean includeMinLength;
    private java.lang.Double maxLength;
    private boolean includeMaxLength;
    private java.lang.Double minHeight;
    private boolean includeMinHeight;
    private java.lang.Double maxHeight;
    private boolean includeMaxHeight;
    private java.util.List<java.lang.String> bodyTypes;
    private java.util.List<java.lang.String> chassisTypes;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.LoadType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uuid)) {
        this.uuid = data().deepCopy(fields()[1].schema(), other.uuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.partnerId)) {
        this.partnerId = data().deepCopy(fields()[3].schema(), other.partnerId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.vehicleCategory)) {
        this.vehicleCategory = data().deepCopy(fields()[4].schema(), other.vehicleCategory);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.numberOfWheels)) {
        this.numberOfWheels = data().deepCopy(fields()[5].schema(), other.numberOfWheels);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.passingCapacityMT)) {
        this.passingCapacityMT = data().deepCopy(fields()[6].schema(), other.passingCapacityMT);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.passingCapacityCFT)) {
        this.passingCapacityCFT = data().deepCopy(fields()[7].schema(), other.passingCapacityCFT);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.bodyType)) {
        this.bodyType = data().deepCopy(fields()[8].schema(), other.bodyType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.chassisType)) {
        this.chassisType = data().deepCopy(fields()[9].schema(), other.chassisType);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.dimensionString)) {
        this.dimensionString = data().deepCopy(fields()[10].schema(), other.dimensionString);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.minLength)) {
        this.minLength = data().deepCopy(fields()[11].schema(), other.minLength);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.includeMinLength)) {
        this.includeMinLength = data().deepCopy(fields()[12].schema(), other.includeMinLength);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.maxLength)) {
        this.maxLength = data().deepCopy(fields()[13].schema(), other.maxLength);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.includeMaxLength)) {
        this.includeMaxLength = data().deepCopy(fields()[14].schema(), other.includeMaxLength);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.minHeight)) {
        this.minHeight = data().deepCopy(fields()[15].schema(), other.minHeight);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.includeMinHeight)) {
        this.includeMinHeight = data().deepCopy(fields()[16].schema(), other.includeMinHeight);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.maxHeight)) {
        this.maxHeight = data().deepCopy(fields()[17].schema(), other.maxHeight);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.includeMaxHeight)) {
        this.includeMaxHeight = data().deepCopy(fields()[18].schema(), other.includeMaxHeight);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.bodyTypes)) {
        this.bodyTypes = data().deepCopy(fields()[19].schema(), other.bodyTypes);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.chassisTypes)) {
        this.chassisTypes = data().deepCopy(fields()[20].schema(), other.chassisTypes);
        fieldSetFlags()[20] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing LoadType instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.LoadType other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uuid)) {
        this.uuid = data().deepCopy(fields()[1].schema(), other.uuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.partnerId)) {
        this.partnerId = data().deepCopy(fields()[3].schema(), other.partnerId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.vehicleCategory)) {
        this.vehicleCategory = data().deepCopy(fields()[4].schema(), other.vehicleCategory);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.numberOfWheels)) {
        this.numberOfWheels = data().deepCopy(fields()[5].schema(), other.numberOfWheels);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.passingCapacityMT)) {
        this.passingCapacityMT = data().deepCopy(fields()[6].schema(), other.passingCapacityMT);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.passingCapacityCFT)) {
        this.passingCapacityCFT = data().deepCopy(fields()[7].schema(), other.passingCapacityCFT);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.bodyType)) {
        this.bodyType = data().deepCopy(fields()[8].schema(), other.bodyType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.chassisType)) {
        this.chassisType = data().deepCopy(fields()[9].schema(), other.chassisType);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.dimensionString)) {
        this.dimensionString = data().deepCopy(fields()[10].schema(), other.dimensionString);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.minLength)) {
        this.minLength = data().deepCopy(fields()[11].schema(), other.minLength);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.includeMinLength)) {
        this.includeMinLength = data().deepCopy(fields()[12].schema(), other.includeMinLength);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.maxLength)) {
        this.maxLength = data().deepCopy(fields()[13].schema(), other.maxLength);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.includeMaxLength)) {
        this.includeMaxLength = data().deepCopy(fields()[14].schema(), other.includeMaxLength);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.minHeight)) {
        this.minHeight = data().deepCopy(fields()[15].schema(), other.minHeight);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.includeMinHeight)) {
        this.includeMinHeight = data().deepCopy(fields()[16].schema(), other.includeMinHeight);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.maxHeight)) {
        this.maxHeight = data().deepCopy(fields()[17].schema(), other.maxHeight);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.includeMaxHeight)) {
        this.includeMaxHeight = data().deepCopy(fields()[18].schema(), other.includeMaxHeight);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.bodyTypes)) {
        this.bodyTypes = data().deepCopy(fields()[19].schema(), other.bodyTypes);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.chassisTypes)) {
        this.chassisTypes = data().deepCopy(fields()[20].schema(), other.chassisTypes);
        fieldSetFlags()[20] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setName(java.lang.String value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setUuid(java.lang.String value) {
      validate(fields()[1], value);
      this.uuid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setOrgId(java.lang.String value) {
      validate(fields()[2], value);
      this.orgId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'partnerId' field.
      * @return The value.
      */
    public java.lang.String getPartnerId() {
      return partnerId;
    }

    /**
      * Sets the value of the 'partnerId' field.
      * @param value The value of 'partnerId'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setPartnerId(java.lang.String value) {
      validate(fields()[3], value);
      this.partnerId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'partnerId' field has been set.
      * @return True if the 'partnerId' field has been set, false otherwise.
      */
    public boolean hasPartnerId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'partnerId' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearPartnerId() {
      partnerId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleCategory' field.
      * @return The value.
      */
    public java.lang.String getVehicleCategory() {
      return vehicleCategory;
    }

    /**
      * Sets the value of the 'vehicleCategory' field.
      * @param value The value of 'vehicleCategory'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setVehicleCategory(java.lang.String value) {
      validate(fields()[4], value);
      this.vehicleCategory = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleCategory' field has been set.
      * @return True if the 'vehicleCategory' field has been set, false otherwise.
      */
    public boolean hasVehicleCategory() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'vehicleCategory' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearVehicleCategory() {
      vehicleCategory = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'numberOfWheels' field.
      * @return The value.
      */
    public java.lang.Integer getNumberOfWheels() {
      return numberOfWheels;
    }

    /**
      * Sets the value of the 'numberOfWheels' field.
      * @param value The value of 'numberOfWheels'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setNumberOfWheels(java.lang.Integer value) {
      validate(fields()[5], value);
      this.numberOfWheels = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'numberOfWheels' field has been set.
      * @return True if the 'numberOfWheels' field has been set, false otherwise.
      */
    public boolean hasNumberOfWheels() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'numberOfWheels' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearNumberOfWheels() {
      numberOfWheels = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'passingCapacityMT' field.
      * @return The value.
      */
    public java.lang.Double getPassingCapacityMT() {
      return passingCapacityMT;
    }

    /**
      * Sets the value of the 'passingCapacityMT' field.
      * @param value The value of 'passingCapacityMT'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setPassingCapacityMT(java.lang.Double value) {
      validate(fields()[6], value);
      this.passingCapacityMT = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'passingCapacityMT' field has been set.
      * @return True if the 'passingCapacityMT' field has been set, false otherwise.
      */
    public boolean hasPassingCapacityMT() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'passingCapacityMT' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearPassingCapacityMT() {
      passingCapacityMT = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'passingCapacityCFT' field.
      * @return The value.
      */
    public java.lang.Double getPassingCapacityCFT() {
      return passingCapacityCFT;
    }

    /**
      * Sets the value of the 'passingCapacityCFT' field.
      * @param value The value of 'passingCapacityCFT'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setPassingCapacityCFT(java.lang.Double value) {
      validate(fields()[7], value);
      this.passingCapacityCFT = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'passingCapacityCFT' field has been set.
      * @return True if the 'passingCapacityCFT' field has been set, false otherwise.
      */
    public boolean hasPassingCapacityCFT() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'passingCapacityCFT' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearPassingCapacityCFT() {
      passingCapacityCFT = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'bodyType' field.
      * @return The value.
      */
    public java.lang.String getBodyType() {
      return bodyType;
    }

    /**
      * Sets the value of the 'bodyType' field.
      * @param value The value of 'bodyType'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setBodyType(java.lang.String value) {
      validate(fields()[8], value);
      this.bodyType = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'bodyType' field has been set.
      * @return True if the 'bodyType' field has been set, false otherwise.
      */
    public boolean hasBodyType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'bodyType' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearBodyType() {
      bodyType = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'chassisType' field.
      * @return The value.
      */
    public java.lang.String getChassisType() {
      return chassisType;
    }

    /**
      * Sets the value of the 'chassisType' field.
      * @param value The value of 'chassisType'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setChassisType(java.lang.String value) {
      validate(fields()[9], value);
      this.chassisType = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'chassisType' field has been set.
      * @return True if the 'chassisType' field has been set, false otherwise.
      */
    public boolean hasChassisType() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'chassisType' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearChassisType() {
      chassisType = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'dimensionString' field.
      * @return The value.
      */
    public java.lang.String getDimensionString() {
      return dimensionString;
    }

    /**
      * Sets the value of the 'dimensionString' field.
      * @param value The value of 'dimensionString'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setDimensionString(java.lang.String value) {
      validate(fields()[10], value);
      this.dimensionString = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'dimensionString' field has been set.
      * @return True if the 'dimensionString' field has been set, false otherwise.
      */
    public boolean hasDimensionString() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'dimensionString' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearDimensionString() {
      dimensionString = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'minLength' field.
      * @return The value.
      */
    public java.lang.Double getMinLength() {
      return minLength;
    }

    /**
      * Sets the value of the 'minLength' field.
      * @param value The value of 'minLength'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setMinLength(java.lang.Double value) {
      validate(fields()[11], value);
      this.minLength = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'minLength' field has been set.
      * @return True if the 'minLength' field has been set, false otherwise.
      */
    public boolean hasMinLength() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'minLength' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearMinLength() {
      minLength = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'includeMinLength' field.
      * @return The value.
      */
    public java.lang.Boolean getIncludeMinLength() {
      return includeMinLength;
    }

    /**
      * Sets the value of the 'includeMinLength' field.
      * @param value The value of 'includeMinLength'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setIncludeMinLength(boolean value) {
      validate(fields()[12], value);
      this.includeMinLength = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'includeMinLength' field has been set.
      * @return True if the 'includeMinLength' field has been set, false otherwise.
      */
    public boolean hasIncludeMinLength() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'includeMinLength' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearIncludeMinLength() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxLength' field.
      * @return The value.
      */
    public java.lang.Double getMaxLength() {
      return maxLength;
    }

    /**
      * Sets the value of the 'maxLength' field.
      * @param value The value of 'maxLength'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setMaxLength(java.lang.Double value) {
      validate(fields()[13], value);
      this.maxLength = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'maxLength' field has been set.
      * @return True if the 'maxLength' field has been set, false otherwise.
      */
    public boolean hasMaxLength() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'maxLength' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearMaxLength() {
      maxLength = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'includeMaxLength' field.
      * @return The value.
      */
    public java.lang.Boolean getIncludeMaxLength() {
      return includeMaxLength;
    }

    /**
      * Sets the value of the 'includeMaxLength' field.
      * @param value The value of 'includeMaxLength'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setIncludeMaxLength(boolean value) {
      validate(fields()[14], value);
      this.includeMaxLength = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'includeMaxLength' field has been set.
      * @return True if the 'includeMaxLength' field has been set, false otherwise.
      */
    public boolean hasIncludeMaxLength() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'includeMaxLength' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearIncludeMaxLength() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'minHeight' field.
      * @return The value.
      */
    public java.lang.Double getMinHeight() {
      return minHeight;
    }

    /**
      * Sets the value of the 'minHeight' field.
      * @param value The value of 'minHeight'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setMinHeight(java.lang.Double value) {
      validate(fields()[15], value);
      this.minHeight = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'minHeight' field has been set.
      * @return True if the 'minHeight' field has been set, false otherwise.
      */
    public boolean hasMinHeight() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'minHeight' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearMinHeight() {
      minHeight = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'includeMinHeight' field.
      * @return The value.
      */
    public java.lang.Boolean getIncludeMinHeight() {
      return includeMinHeight;
    }

    /**
      * Sets the value of the 'includeMinHeight' field.
      * @param value The value of 'includeMinHeight'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setIncludeMinHeight(boolean value) {
      validate(fields()[16], value);
      this.includeMinHeight = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'includeMinHeight' field has been set.
      * @return True if the 'includeMinHeight' field has been set, false otherwise.
      */
    public boolean hasIncludeMinHeight() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'includeMinHeight' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearIncludeMinHeight() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxHeight' field.
      * @return The value.
      */
    public java.lang.Double getMaxHeight() {
      return maxHeight;
    }

    /**
      * Sets the value of the 'maxHeight' field.
      * @param value The value of 'maxHeight'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setMaxHeight(java.lang.Double value) {
      validate(fields()[17], value);
      this.maxHeight = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'maxHeight' field has been set.
      * @return True if the 'maxHeight' field has been set, false otherwise.
      */
    public boolean hasMaxHeight() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'maxHeight' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearMaxHeight() {
      maxHeight = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'includeMaxHeight' field.
      * @return The value.
      */
    public java.lang.Boolean getIncludeMaxHeight() {
      return includeMaxHeight;
    }

    /**
      * Sets the value of the 'includeMaxHeight' field.
      * @param value The value of 'includeMaxHeight'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setIncludeMaxHeight(boolean value) {
      validate(fields()[18], value);
      this.includeMaxHeight = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'includeMaxHeight' field has been set.
      * @return True if the 'includeMaxHeight' field has been set, false otherwise.
      */
    public boolean hasIncludeMaxHeight() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'includeMaxHeight' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearIncludeMaxHeight() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'bodyTypes' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getBodyTypes() {
      return bodyTypes;
    }

    /**
      * Sets the value of the 'bodyTypes' field.
      * @param value The value of 'bodyTypes'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setBodyTypes(java.util.List<java.lang.String> value) {
      validate(fields()[19], value);
      this.bodyTypes = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'bodyTypes' field has been set.
      * @return True if the 'bodyTypes' field has been set, false otherwise.
      */
    public boolean hasBodyTypes() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'bodyTypes' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearBodyTypes() {
      bodyTypes = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'chassisTypes' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getChassisTypes() {
      return chassisTypes;
    }

    /**
      * Sets the value of the 'chassisTypes' field.
      * @param value The value of 'chassisTypes'.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder setChassisTypes(java.util.List<java.lang.String> value) {
      validate(fields()[20], value);
      this.chassisTypes = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'chassisTypes' field has been set.
      * @return True if the 'chassisTypes' field has been set, false otherwise.
      */
    public boolean hasChassisTypes() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'chassisTypes' field.
      * @return This builder.
      */
    public com.fretron.Model.LoadType.Builder clearChassisTypes() {
      chassisTypes = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    public LoadType build() {
      try {
        LoadType record = new LoadType();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.String) defaultValue(fields()[0]);
        record.uuid = fieldSetFlags()[1] ? this.uuid : (java.lang.String) defaultValue(fields()[1]);
        record.orgId = fieldSetFlags()[2] ? this.orgId : (java.lang.String) defaultValue(fields()[2]);
        record.partnerId = fieldSetFlags()[3] ? this.partnerId : (java.lang.String) defaultValue(fields()[3]);
        record.vehicleCategory = fieldSetFlags()[4] ? this.vehicleCategory : (java.lang.String) defaultValue(fields()[4]);
        record.numberOfWheels = fieldSetFlags()[5] ? this.numberOfWheels : (java.lang.Integer) defaultValue(fields()[5]);
        record.passingCapacityMT = fieldSetFlags()[6] ? this.passingCapacityMT : (java.lang.Double) defaultValue(fields()[6]);
        record.passingCapacityCFT = fieldSetFlags()[7] ? this.passingCapacityCFT : (java.lang.Double) defaultValue(fields()[7]);
        record.bodyType = fieldSetFlags()[8] ? this.bodyType : (java.lang.String) defaultValue(fields()[8]);
        record.chassisType = fieldSetFlags()[9] ? this.chassisType : (java.lang.String) defaultValue(fields()[9]);
        record.dimensionString = fieldSetFlags()[10] ? this.dimensionString : (java.lang.String) defaultValue(fields()[10]);
        record.minLength = fieldSetFlags()[11] ? this.minLength : (java.lang.Double) defaultValue(fields()[11]);
        record.includeMinLength = fieldSetFlags()[12] ? this.includeMinLength : (java.lang.Boolean) defaultValue(fields()[12]);
        record.maxLength = fieldSetFlags()[13] ? this.maxLength : (java.lang.Double) defaultValue(fields()[13]);
        record.includeMaxLength = fieldSetFlags()[14] ? this.includeMaxLength : (java.lang.Boolean) defaultValue(fields()[14]);
        record.minHeight = fieldSetFlags()[15] ? this.minHeight : (java.lang.Double) defaultValue(fields()[15]);
        record.includeMinHeight = fieldSetFlags()[16] ? this.includeMinHeight : (java.lang.Boolean) defaultValue(fields()[16]);
        record.maxHeight = fieldSetFlags()[17] ? this.maxHeight : (java.lang.Double) defaultValue(fields()[17]);
        record.includeMaxHeight = fieldSetFlags()[18] ? this.includeMaxHeight : (java.lang.Boolean) defaultValue(fields()[18]);
        record.bodyTypes = fieldSetFlags()[19] ? this.bodyTypes : (java.util.List<java.lang.String>) defaultValue(fields()[19]);
        record.chassisTypes = fieldSetFlags()[20] ? this.chassisTypes : (java.util.List<java.lang.String>) defaultValue(fields()[20]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

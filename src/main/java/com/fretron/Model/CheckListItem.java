/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CheckListItem extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3278029452066807561L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CheckListItem\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"actionName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isApplicable\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isCompleted\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isSystemGenerated\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isMandatoryOnVerification\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String actionName;
  @Deprecated public java.lang.Boolean isApplicable;
  @Deprecated public java.lang.Boolean isCompleted;
  @Deprecated public java.lang.Boolean isSystemGenerated;
  @Deprecated public java.lang.Boolean isMandatoryOnVerification;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CheckListItem() {}

  /**
   * All-args constructor.
   * @param actionName The new value for actionName
   * @param isApplicable The new value for isApplicable
   * @param isCompleted The new value for isCompleted
   * @param isSystemGenerated The new value for isSystemGenerated
   * @param isMandatoryOnVerification The new value for isMandatoryOnVerification
   */
  public CheckListItem(java.lang.String actionName, java.lang.Boolean isApplicable, java.lang.Boolean isCompleted, java.lang.Boolean isSystemGenerated, java.lang.Boolean isMandatoryOnVerification) {
    this.actionName = actionName;
    this.isApplicable = isApplicable;
    this.isCompleted = isCompleted;
    this.isSystemGenerated = isSystemGenerated;
    this.isMandatoryOnVerification = isMandatoryOnVerification;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return actionName;
    case 1: return isApplicable;
    case 2: return isCompleted;
    case 3: return isSystemGenerated;
    case 4: return isMandatoryOnVerification;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: actionName = (java.lang.String)value$; break;
    case 1: isApplicable = (java.lang.Boolean)value$; break;
    case 2: isCompleted = (java.lang.Boolean)value$; break;
    case 3: isSystemGenerated = (java.lang.Boolean)value$; break;
    case 4: isMandatoryOnVerification = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'actionName' field.
   * @return The value of the 'actionName' field.
   */
  public java.lang.String getActionName() {
    return actionName;
  }

  /**
   * Sets the value of the 'actionName' field.
   * @param value the value to set.
   */
  public void setActionName(java.lang.String value) {
    this.actionName = value;
  }

  /**
   * Gets the value of the 'isApplicable' field.
   * @return The value of the 'isApplicable' field.
   */
  public java.lang.Boolean getIsApplicable() {
    return isApplicable;
  }

  /**
   * Sets the value of the 'isApplicable' field.
   * @param value the value to set.
   */
  public void setIsApplicable(java.lang.Boolean value) {
    this.isApplicable = value;
  }

  /**
   * Gets the value of the 'isCompleted' field.
   * @return The value of the 'isCompleted' field.
   */
  public java.lang.Boolean getIsCompleted() {
    return isCompleted;
  }

  /**
   * Sets the value of the 'isCompleted' field.
   * @param value the value to set.
   */
  public void setIsCompleted(java.lang.Boolean value) {
    this.isCompleted = value;
  }

  /**
   * Gets the value of the 'isSystemGenerated' field.
   * @return The value of the 'isSystemGenerated' field.
   */
  public java.lang.Boolean getIsSystemGenerated() {
    return isSystemGenerated;
  }

  /**
   * Sets the value of the 'isSystemGenerated' field.
   * @param value the value to set.
   */
  public void setIsSystemGenerated(java.lang.Boolean value) {
    this.isSystemGenerated = value;
  }

  /**
   * Gets the value of the 'isMandatoryOnVerification' field.
   * @return The value of the 'isMandatoryOnVerification' field.
   */
  public java.lang.Boolean getIsMandatoryOnVerification() {
    return isMandatoryOnVerification;
  }

  /**
   * Sets the value of the 'isMandatoryOnVerification' field.
   * @param value the value to set.
   */
  public void setIsMandatoryOnVerification(java.lang.Boolean value) {
    this.isMandatoryOnVerification = value;
  }

  /**
   * Creates a new CheckListItem RecordBuilder.
   * @return A new CheckListItem RecordBuilder
   */
  public static com.fretron.Model.CheckListItem.Builder newBuilder() {
    return new com.fretron.Model.CheckListItem.Builder();
  }

  /**
   * Creates a new CheckListItem RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CheckListItem RecordBuilder
   */
  public static com.fretron.Model.CheckListItem.Builder newBuilder(com.fretron.Model.CheckListItem.Builder other) {
    return new com.fretron.Model.CheckListItem.Builder(other);
  }

  /**
   * Creates a new CheckListItem RecordBuilder by copying an existing CheckListItem instance.
   * @param other The existing instance to copy.
   * @return A new CheckListItem RecordBuilder
   */
  public static com.fretron.Model.CheckListItem.Builder newBuilder(com.fretron.Model.CheckListItem other) {
    return new com.fretron.Model.CheckListItem.Builder(other);
  }

  /**
   * RecordBuilder for CheckListItem instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CheckListItem>
    implements org.apache.avro.data.RecordBuilder<CheckListItem> {

    private java.lang.String actionName;
    private java.lang.Boolean isApplicable;
    private java.lang.Boolean isCompleted;
    private java.lang.Boolean isSystemGenerated;
    private java.lang.Boolean isMandatoryOnVerification;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.CheckListItem.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.actionName)) {
        this.actionName = data().deepCopy(fields()[0].schema(), other.actionName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.isApplicable)) {
        this.isApplicable = data().deepCopy(fields()[1].schema(), other.isApplicable);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.isCompleted)) {
        this.isCompleted = data().deepCopy(fields()[2].schema(), other.isCompleted);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isSystemGenerated)) {
        this.isSystemGenerated = data().deepCopy(fields()[3].schema(), other.isSystemGenerated);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.isMandatoryOnVerification)) {
        this.isMandatoryOnVerification = data().deepCopy(fields()[4].schema(), other.isMandatoryOnVerification);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CheckListItem instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.CheckListItem other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.actionName)) {
        this.actionName = data().deepCopy(fields()[0].schema(), other.actionName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.isApplicable)) {
        this.isApplicable = data().deepCopy(fields()[1].schema(), other.isApplicable);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.isCompleted)) {
        this.isCompleted = data().deepCopy(fields()[2].schema(), other.isCompleted);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isSystemGenerated)) {
        this.isSystemGenerated = data().deepCopy(fields()[3].schema(), other.isSystemGenerated);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.isMandatoryOnVerification)) {
        this.isMandatoryOnVerification = data().deepCopy(fields()[4].schema(), other.isMandatoryOnVerification);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'actionName' field.
      * @return The value.
      */
    public java.lang.String getActionName() {
      return actionName;
    }

    /**
      * Sets the value of the 'actionName' field.
      * @param value The value of 'actionName'.
      * @return This builder.
      */
    public com.fretron.Model.CheckListItem.Builder setActionName(java.lang.String value) {
      validate(fields()[0], value);
      this.actionName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'actionName' field has been set.
      * @return True if the 'actionName' field has been set, false otherwise.
      */
    public boolean hasActionName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'actionName' field.
      * @return This builder.
      */
    public com.fretron.Model.CheckListItem.Builder clearActionName() {
      actionName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'isApplicable' field.
      * @return The value.
      */
    public java.lang.Boolean getIsApplicable() {
      return isApplicable;
    }

    /**
      * Sets the value of the 'isApplicable' field.
      * @param value The value of 'isApplicable'.
      * @return This builder.
      */
    public com.fretron.Model.CheckListItem.Builder setIsApplicable(java.lang.Boolean value) {
      validate(fields()[1], value);
      this.isApplicable = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'isApplicable' field has been set.
      * @return True if the 'isApplicable' field has been set, false otherwise.
      */
    public boolean hasIsApplicable() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'isApplicable' field.
      * @return This builder.
      */
    public com.fretron.Model.CheckListItem.Builder clearIsApplicable() {
      isApplicable = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'isCompleted' field.
      * @return The value.
      */
    public java.lang.Boolean getIsCompleted() {
      return isCompleted;
    }

    /**
      * Sets the value of the 'isCompleted' field.
      * @param value The value of 'isCompleted'.
      * @return This builder.
      */
    public com.fretron.Model.CheckListItem.Builder setIsCompleted(java.lang.Boolean value) {
      validate(fields()[2], value);
      this.isCompleted = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'isCompleted' field has been set.
      * @return True if the 'isCompleted' field has been set, false otherwise.
      */
    public boolean hasIsCompleted() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'isCompleted' field.
      * @return This builder.
      */
    public com.fretron.Model.CheckListItem.Builder clearIsCompleted() {
      isCompleted = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'isSystemGenerated' field.
      * @return The value.
      */
    public java.lang.Boolean getIsSystemGenerated() {
      return isSystemGenerated;
    }

    /**
      * Sets the value of the 'isSystemGenerated' field.
      * @param value The value of 'isSystemGenerated'.
      * @return This builder.
      */
    public com.fretron.Model.CheckListItem.Builder setIsSystemGenerated(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.isSystemGenerated = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'isSystemGenerated' field has been set.
      * @return True if the 'isSystemGenerated' field has been set, false otherwise.
      */
    public boolean hasIsSystemGenerated() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'isSystemGenerated' field.
      * @return This builder.
      */
    public com.fretron.Model.CheckListItem.Builder clearIsSystemGenerated() {
      isSystemGenerated = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'isMandatoryOnVerification' field.
      * @return The value.
      */
    public java.lang.Boolean getIsMandatoryOnVerification() {
      return isMandatoryOnVerification;
    }

    /**
      * Sets the value of the 'isMandatoryOnVerification' field.
      * @param value The value of 'isMandatoryOnVerification'.
      * @return This builder.
      */
    public com.fretron.Model.CheckListItem.Builder setIsMandatoryOnVerification(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.isMandatoryOnVerification = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'isMandatoryOnVerification' field has been set.
      * @return True if the 'isMandatoryOnVerification' field has been set, false otherwise.
      */
    public boolean hasIsMandatoryOnVerification() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'isMandatoryOnVerification' field.
      * @return This builder.
      */
    public com.fretron.Model.CheckListItem.Builder clearIsMandatoryOnVerification() {
      isMandatoryOnVerification = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public CheckListItem build() {
      try {
        CheckListItem record = new CheckListItem();
        record.actionName = fieldSetFlags()[0] ? this.actionName : (java.lang.String) defaultValue(fields()[0]);
        record.isApplicable = fieldSetFlags()[1] ? this.isApplicable : (java.lang.Boolean) defaultValue(fields()[1]);
        record.isCompleted = fieldSetFlags()[2] ? this.isCompleted : (java.lang.Boolean) defaultValue(fields()[2]);
        record.isSystemGenerated = fieldSetFlags()[3] ? this.isSystemGenerated : (java.lang.Boolean) defaultValue(fields()[3]);
        record.isMandatoryOnVerification = fieldSetFlags()[4] ? this.isMandatoryOnVerification : (java.lang.Boolean) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

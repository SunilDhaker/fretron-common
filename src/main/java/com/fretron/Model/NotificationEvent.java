/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class NotificationEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4894612008600282144L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NotificationEvent\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subscriber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"scope\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"module\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"channels\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceIdentifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"content\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"htmlContent\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pushACKId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"redirectURL\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"mailACKIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"createdOn\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"readOn\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"isRead\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"mailThreadId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"debounced\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"commandId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"processed\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String subscriber;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.String type;
  @Deprecated public java.lang.String scope;
  @Deprecated public java.lang.String email;
  @Deprecated public java.lang.String mobileNumber;
  @Deprecated public java.lang.String module;
  @Deprecated public java.util.List<java.lang.String> channels;
  @Deprecated public java.lang.String resourceId;
  @Deprecated public java.lang.String resourceIdentifier;
  @Deprecated public java.lang.String resourceType;
  @Deprecated public java.lang.String eventName;
  @Deprecated public java.lang.String title;
  @Deprecated public java.lang.String content;
  @Deprecated public java.lang.String htmlContent;
  @Deprecated public java.lang.String pushACKId;
  @Deprecated public java.lang.String redirectURL;
  @Deprecated public java.util.List<java.lang.String> mailACKIds;
  @Deprecated public java.lang.Long createdOn;
  @Deprecated public java.lang.Long readOn;
  @Deprecated public java.lang.Boolean isRead;
  @Deprecated public java.lang.String mailThreadId;
  @Deprecated public java.lang.Boolean debounced;
  @Deprecated public java.lang.String commandId;
  @Deprecated public java.lang.Boolean processed;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public NotificationEvent() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param subscriber The new value for subscriber
   * @param orgId The new value for orgId
   * @param type The new value for type
   * @param scope The new value for scope
   * @param email The new value for email
   * @param mobileNumber The new value for mobileNumber
   * @param module The new value for module
   * @param channels The new value for channels
   * @param resourceId The new value for resourceId
   * @param resourceIdentifier The new value for resourceIdentifier
   * @param resourceType The new value for resourceType
   * @param eventName The new value for eventName
   * @param title The new value for title
   * @param content The new value for content
   * @param htmlContent The new value for htmlContent
   * @param pushACKId The new value for pushACKId
   * @param redirectURL The new value for redirectURL
   * @param mailACKIds The new value for mailACKIds
   * @param createdOn The new value for createdOn
   * @param readOn The new value for readOn
   * @param isRead The new value for isRead
   * @param mailThreadId The new value for mailThreadId
   * @param debounced The new value for debounced
   * @param commandId The new value for commandId
   * @param processed The new value for processed
   */
  public NotificationEvent(java.lang.String uuid, java.lang.String subscriber, java.lang.String orgId, java.lang.String type, java.lang.String scope, java.lang.String email, java.lang.String mobileNumber, java.lang.String module, java.util.List<java.lang.String> channels, java.lang.String resourceId, java.lang.String resourceIdentifier, java.lang.String resourceType, java.lang.String eventName, java.lang.String title, java.lang.String content, java.lang.String htmlContent, java.lang.String pushACKId, java.lang.String redirectURL, java.util.List<java.lang.String> mailACKIds, java.lang.Long createdOn, java.lang.Long readOn, java.lang.Boolean isRead, java.lang.String mailThreadId, java.lang.Boolean debounced, java.lang.String commandId, java.lang.Boolean processed) {
    this.uuid = uuid;
    this.subscriber = subscriber;
    this.orgId = orgId;
    this.type = type;
    this.scope = scope;
    this.email = email;
    this.mobileNumber = mobileNumber;
    this.module = module;
    this.channels = channels;
    this.resourceId = resourceId;
    this.resourceIdentifier = resourceIdentifier;
    this.resourceType = resourceType;
    this.eventName = eventName;
    this.title = title;
    this.content = content;
    this.htmlContent = htmlContent;
    this.pushACKId = pushACKId;
    this.redirectURL = redirectURL;
    this.mailACKIds = mailACKIds;
    this.createdOn = createdOn;
    this.readOn = readOn;
    this.isRead = isRead;
    this.mailThreadId = mailThreadId;
    this.debounced = debounced;
    this.commandId = commandId;
    this.processed = processed;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return subscriber;
    case 2: return orgId;
    case 3: return type;
    case 4: return scope;
    case 5: return email;
    case 6: return mobileNumber;
    case 7: return module;
    case 8: return channels;
    case 9: return resourceId;
    case 10: return resourceIdentifier;
    case 11: return resourceType;
    case 12: return eventName;
    case 13: return title;
    case 14: return content;
    case 15: return htmlContent;
    case 16: return pushACKId;
    case 17: return redirectURL;
    case 18: return mailACKIds;
    case 19: return createdOn;
    case 20: return readOn;
    case 21: return isRead;
    case 22: return mailThreadId;
    case 23: return debounced;
    case 24: return commandId;
    case 25: return processed;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: subscriber = (java.lang.String)value$; break;
    case 2: orgId = (java.lang.String)value$; break;
    case 3: type = (java.lang.String)value$; break;
    case 4: scope = (java.lang.String)value$; break;
    case 5: email = (java.lang.String)value$; break;
    case 6: mobileNumber = (java.lang.String)value$; break;
    case 7: module = (java.lang.String)value$; break;
    case 8: channels = (java.util.List<java.lang.String>)value$; break;
    case 9: resourceId = (java.lang.String)value$; break;
    case 10: resourceIdentifier = (java.lang.String)value$; break;
    case 11: resourceType = (java.lang.String)value$; break;
    case 12: eventName = (java.lang.String)value$; break;
    case 13: title = (java.lang.String)value$; break;
    case 14: content = (java.lang.String)value$; break;
    case 15: htmlContent = (java.lang.String)value$; break;
    case 16: pushACKId = (java.lang.String)value$; break;
    case 17: redirectURL = (java.lang.String)value$; break;
    case 18: mailACKIds = (java.util.List<java.lang.String>)value$; break;
    case 19: createdOn = (java.lang.Long)value$; break;
    case 20: readOn = (java.lang.Long)value$; break;
    case 21: isRead = (java.lang.Boolean)value$; break;
    case 22: mailThreadId = (java.lang.String)value$; break;
    case 23: debounced = (java.lang.Boolean)value$; break;
    case 24: commandId = (java.lang.String)value$; break;
    case 25: processed = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'subscriber' field.
   * @return The value of the 'subscriber' field.
   */
  public java.lang.String getSubscriber() {
    return subscriber;
  }

  /**
   * Sets the value of the 'subscriber' field.
   * @param value the value to set.
   */
  public void setSubscriber(java.lang.String value) {
    this.subscriber = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'scope' field.
   * @return The value of the 'scope' field.
   */
  public java.lang.String getScope() {
    return scope;
  }

  /**
   * Sets the value of the 'scope' field.
   * @param value the value to set.
   */
  public void setScope(java.lang.String value) {
    this.scope = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'mobileNumber' field.
   * @return The value of the 'mobileNumber' field.
   */
  public java.lang.String getMobileNumber() {
    return mobileNumber;
  }

  /**
   * Sets the value of the 'mobileNumber' field.
   * @param value the value to set.
   */
  public void setMobileNumber(java.lang.String value) {
    this.mobileNumber = value;
  }

  /**
   * Gets the value of the 'module' field.
   * @return The value of the 'module' field.
   */
  public java.lang.String getModule() {
    return module;
  }

  /**
   * Sets the value of the 'module' field.
   * @param value the value to set.
   */
  public void setModule(java.lang.String value) {
    this.module = value;
  }

  /**
   * Gets the value of the 'channels' field.
   * @return The value of the 'channels' field.
   */
  public java.util.List<java.lang.String> getChannels() {
    return channels;
  }

  /**
   * Sets the value of the 'channels' field.
   * @param value the value to set.
   */
  public void setChannels(java.util.List<java.lang.String> value) {
    this.channels = value;
  }

  /**
   * Gets the value of the 'resourceId' field.
   * @return The value of the 'resourceId' field.
   */
  public java.lang.String getResourceId() {
    return resourceId;
  }

  /**
   * Sets the value of the 'resourceId' field.
   * @param value the value to set.
   */
  public void setResourceId(java.lang.String value) {
    this.resourceId = value;
  }

  /**
   * Gets the value of the 'resourceIdentifier' field.
   * @return The value of the 'resourceIdentifier' field.
   */
  public java.lang.String getResourceIdentifier() {
    return resourceIdentifier;
  }

  /**
   * Sets the value of the 'resourceIdentifier' field.
   * @param value the value to set.
   */
  public void setResourceIdentifier(java.lang.String value) {
    this.resourceIdentifier = value;
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.String getResourceType() {
    return resourceType;
  }

  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.String value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'eventName' field.
   * @return The value of the 'eventName' field.
   */
  public java.lang.String getEventName() {
    return eventName;
  }

  /**
   * Sets the value of the 'eventName' field.
   * @param value the value to set.
   */
  public void setEventName(java.lang.String value) {
    this.eventName = value;
  }

  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'content' field.
   * @return The value of the 'content' field.
   */
  public java.lang.String getContent() {
    return content;
  }

  /**
   * Sets the value of the 'content' field.
   * @param value the value to set.
   */
  public void setContent(java.lang.String value) {
    this.content = value;
  }

  /**
   * Gets the value of the 'htmlContent' field.
   * @return The value of the 'htmlContent' field.
   */
  public java.lang.String getHtmlContent() {
    return htmlContent;
  }

  /**
   * Sets the value of the 'htmlContent' field.
   * @param value the value to set.
   */
  public void setHtmlContent(java.lang.String value) {
    this.htmlContent = value;
  }

  /**
   * Gets the value of the 'pushACKId' field.
   * @return The value of the 'pushACKId' field.
   */
  public java.lang.String getPushACKId() {
    return pushACKId;
  }

  /**
   * Sets the value of the 'pushACKId' field.
   * @param value the value to set.
   */
  public void setPushACKId(java.lang.String value) {
    this.pushACKId = value;
  }

  /**
   * Gets the value of the 'redirectURL' field.
   * @return The value of the 'redirectURL' field.
   */
  public java.lang.String getRedirectURL() {
    return redirectURL;
  }

  /**
   * Sets the value of the 'redirectURL' field.
   * @param value the value to set.
   */
  public void setRedirectURL(java.lang.String value) {
    this.redirectURL = value;
  }

  /**
   * Gets the value of the 'mailACKIds' field.
   * @return The value of the 'mailACKIds' field.
   */
  public java.util.List<java.lang.String> getMailACKIds() {
    return mailACKIds;
  }

  /**
   * Sets the value of the 'mailACKIds' field.
   * @param value the value to set.
   */
  public void setMailACKIds(java.util.List<java.lang.String> value) {
    this.mailACKIds = value;
  }

  /**
   * Gets the value of the 'createdOn' field.
   * @return The value of the 'createdOn' field.
   */
  public java.lang.Long getCreatedOn() {
    return createdOn;
  }

  /**
   * Sets the value of the 'createdOn' field.
   * @param value the value to set.
   */
  public void setCreatedOn(java.lang.Long value) {
    this.createdOn = value;
  }

  /**
   * Gets the value of the 'readOn' field.
   * @return The value of the 'readOn' field.
   */
  public java.lang.Long getReadOn() {
    return readOn;
  }

  /**
   * Sets the value of the 'readOn' field.
   * @param value the value to set.
   */
  public void setReadOn(java.lang.Long value) {
    this.readOn = value;
  }

  /**
   * Gets the value of the 'isRead' field.
   * @return The value of the 'isRead' field.
   */
  public java.lang.Boolean getIsRead() {
    return isRead;
  }

  /**
   * Sets the value of the 'isRead' field.
   * @param value the value to set.
   */
  public void setIsRead(java.lang.Boolean value) {
    this.isRead = value;
  }

  /**
   * Gets the value of the 'mailThreadId' field.
   * @return The value of the 'mailThreadId' field.
   */
  public java.lang.String getMailThreadId() {
    return mailThreadId;
  }

  /**
   * Sets the value of the 'mailThreadId' field.
   * @param value the value to set.
   */
  public void setMailThreadId(java.lang.String value) {
    this.mailThreadId = value;
  }

  /**
   * Gets the value of the 'debounced' field.
   * @return The value of the 'debounced' field.
   */
  public java.lang.Boolean getDebounced() {
    return debounced;
  }

  /**
   * Sets the value of the 'debounced' field.
   * @param value the value to set.
   */
  public void setDebounced(java.lang.Boolean value) {
    this.debounced = value;
  }

  /**
   * Gets the value of the 'commandId' field.
   * @return The value of the 'commandId' field.
   */
  public java.lang.String getCommandId() {
    return commandId;
  }

  /**
   * Sets the value of the 'commandId' field.
   * @param value the value to set.
   */
  public void setCommandId(java.lang.String value) {
    this.commandId = value;
  }

  /**
   * Gets the value of the 'processed' field.
   * @return The value of the 'processed' field.
   */
  public java.lang.Boolean getProcessed() {
    return processed;
  }

  /**
   * Sets the value of the 'processed' field.
   * @param value the value to set.
   */
  public void setProcessed(java.lang.Boolean value) {
    this.processed = value;
  }

  /**
   * Creates a new NotificationEvent RecordBuilder.
   * @return A new NotificationEvent RecordBuilder
   */
  public static com.fretron.Model.NotificationEvent.Builder newBuilder() {
    return new com.fretron.Model.NotificationEvent.Builder();
  }

  /**
   * Creates a new NotificationEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new NotificationEvent RecordBuilder
   */
  public static com.fretron.Model.NotificationEvent.Builder newBuilder(com.fretron.Model.NotificationEvent.Builder other) {
    return new com.fretron.Model.NotificationEvent.Builder(other);
  }

  /**
   * Creates a new NotificationEvent RecordBuilder by copying an existing NotificationEvent instance.
   * @param other The existing instance to copy.
   * @return A new NotificationEvent RecordBuilder
   */
  public static com.fretron.Model.NotificationEvent.Builder newBuilder(com.fretron.Model.NotificationEvent other) {
    return new com.fretron.Model.NotificationEvent.Builder(other);
  }

  /**
   * RecordBuilder for NotificationEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NotificationEvent>
    implements org.apache.avro.data.RecordBuilder<NotificationEvent> {

    private java.lang.String uuid;
    private java.lang.String subscriber;
    private java.lang.String orgId;
    private java.lang.String type;
    private java.lang.String scope;
    private java.lang.String email;
    private java.lang.String mobileNumber;
    private java.lang.String module;
    private java.util.List<java.lang.String> channels;
    private java.lang.String resourceId;
    private java.lang.String resourceIdentifier;
    private java.lang.String resourceType;
    private java.lang.String eventName;
    private java.lang.String title;
    private java.lang.String content;
    private java.lang.String htmlContent;
    private java.lang.String pushACKId;
    private java.lang.String redirectURL;
    private java.util.List<java.lang.String> mailACKIds;
    private java.lang.Long createdOn;
    private java.lang.Long readOn;
    private java.lang.Boolean isRead;
    private java.lang.String mailThreadId;
    private java.lang.Boolean debounced;
    private java.lang.String commandId;
    private java.lang.Boolean processed;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.NotificationEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.subscriber)) {
        this.subscriber = data().deepCopy(fields()[1].schema(), other.subscriber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.scope)) {
        this.scope = data().deepCopy(fields()[4].schema(), other.scope);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.email)) {
        this.email = data().deepCopy(fields()[5].schema(), other.email);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.mobileNumber)) {
        this.mobileNumber = data().deepCopy(fields()[6].schema(), other.mobileNumber);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.module)) {
        this.module = data().deepCopy(fields()[7].schema(), other.module);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.channels)) {
        this.channels = data().deepCopy(fields()[8].schema(), other.channels);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.resourceId)) {
        this.resourceId = data().deepCopy(fields()[9].schema(), other.resourceId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.resourceIdentifier)) {
        this.resourceIdentifier = data().deepCopy(fields()[10].schema(), other.resourceIdentifier);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[11].schema(), other.resourceType);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.eventName)) {
        this.eventName = data().deepCopy(fields()[12].schema(), other.eventName);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.title)) {
        this.title = data().deepCopy(fields()[13].schema(), other.title);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.content)) {
        this.content = data().deepCopy(fields()[14].schema(), other.content);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.htmlContent)) {
        this.htmlContent = data().deepCopy(fields()[15].schema(), other.htmlContent);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.pushACKId)) {
        this.pushACKId = data().deepCopy(fields()[16].schema(), other.pushACKId);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.redirectURL)) {
        this.redirectURL = data().deepCopy(fields()[17].schema(), other.redirectURL);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.mailACKIds)) {
        this.mailACKIds = data().deepCopy(fields()[18].schema(), other.mailACKIds);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.createdOn)) {
        this.createdOn = data().deepCopy(fields()[19].schema(), other.createdOn);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.readOn)) {
        this.readOn = data().deepCopy(fields()[20].schema(), other.readOn);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.isRead)) {
        this.isRead = data().deepCopy(fields()[21].schema(), other.isRead);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.mailThreadId)) {
        this.mailThreadId = data().deepCopy(fields()[22].schema(), other.mailThreadId);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.debounced)) {
        this.debounced = data().deepCopy(fields()[23].schema(), other.debounced);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.commandId)) {
        this.commandId = data().deepCopy(fields()[24].schema(), other.commandId);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.processed)) {
        this.processed = data().deepCopy(fields()[25].schema(), other.processed);
        fieldSetFlags()[25] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing NotificationEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.NotificationEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.subscriber)) {
        this.subscriber = data().deepCopy(fields()[1].schema(), other.subscriber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orgId)) {
        this.orgId = data().deepCopy(fields()[2].schema(), other.orgId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.scope)) {
        this.scope = data().deepCopy(fields()[4].schema(), other.scope);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.email)) {
        this.email = data().deepCopy(fields()[5].schema(), other.email);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.mobileNumber)) {
        this.mobileNumber = data().deepCopy(fields()[6].schema(), other.mobileNumber);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.module)) {
        this.module = data().deepCopy(fields()[7].schema(), other.module);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.channels)) {
        this.channels = data().deepCopy(fields()[8].schema(), other.channels);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.resourceId)) {
        this.resourceId = data().deepCopy(fields()[9].schema(), other.resourceId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.resourceIdentifier)) {
        this.resourceIdentifier = data().deepCopy(fields()[10].schema(), other.resourceIdentifier);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[11].schema(), other.resourceType);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.eventName)) {
        this.eventName = data().deepCopy(fields()[12].schema(), other.eventName);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.title)) {
        this.title = data().deepCopy(fields()[13].schema(), other.title);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.content)) {
        this.content = data().deepCopy(fields()[14].schema(), other.content);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.htmlContent)) {
        this.htmlContent = data().deepCopy(fields()[15].schema(), other.htmlContent);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.pushACKId)) {
        this.pushACKId = data().deepCopy(fields()[16].schema(), other.pushACKId);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.redirectURL)) {
        this.redirectURL = data().deepCopy(fields()[17].schema(), other.redirectURL);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.mailACKIds)) {
        this.mailACKIds = data().deepCopy(fields()[18].schema(), other.mailACKIds);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.createdOn)) {
        this.createdOn = data().deepCopy(fields()[19].schema(), other.createdOn);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.readOn)) {
        this.readOn = data().deepCopy(fields()[20].schema(), other.readOn);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.isRead)) {
        this.isRead = data().deepCopy(fields()[21].schema(), other.isRead);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.mailThreadId)) {
        this.mailThreadId = data().deepCopy(fields()[22].schema(), other.mailThreadId);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.debounced)) {
        this.debounced = data().deepCopy(fields()[23].schema(), other.debounced);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.commandId)) {
        this.commandId = data().deepCopy(fields()[24].schema(), other.commandId);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.processed)) {
        this.processed = data().deepCopy(fields()[25].schema(), other.processed);
        fieldSetFlags()[25] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'subscriber' field.
      * @return The value.
      */
    public java.lang.String getSubscriber() {
      return subscriber;
    }

    /**
      * Sets the value of the 'subscriber' field.
      * @param value The value of 'subscriber'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setSubscriber(java.lang.String value) {
      validate(fields()[1], value);
      this.subscriber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'subscriber' field has been set.
      * @return True if the 'subscriber' field has been set, false otherwise.
      */
    public boolean hasSubscriber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'subscriber' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearSubscriber() {
      subscriber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setOrgId(java.lang.String value) {
      validate(fields()[2], value);
      this.orgId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setType(java.lang.String value) {
      validate(fields()[3], value);
      this.type = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearType() {
      type = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'scope' field.
      * @return The value.
      */
    public java.lang.String getScope() {
      return scope;
    }

    /**
      * Sets the value of the 'scope' field.
      * @param value The value of 'scope'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setScope(java.lang.String value) {
      validate(fields()[4], value);
      this.scope = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'scope' field has been set.
      * @return True if the 'scope' field has been set, false otherwise.
      */
    public boolean hasScope() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'scope' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearScope() {
      scope = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setEmail(java.lang.String value) {
      validate(fields()[5], value);
      this.email = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearEmail() {
      email = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'mobileNumber' field.
      * @return The value.
      */
    public java.lang.String getMobileNumber() {
      return mobileNumber;
    }

    /**
      * Sets the value of the 'mobileNumber' field.
      * @param value The value of 'mobileNumber'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setMobileNumber(java.lang.String value) {
      validate(fields()[6], value);
      this.mobileNumber = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'mobileNumber' field has been set.
      * @return True if the 'mobileNumber' field has been set, false otherwise.
      */
    public boolean hasMobileNumber() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'mobileNumber' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearMobileNumber() {
      mobileNumber = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'module' field.
      * @return The value.
      */
    public java.lang.String getModule() {
      return module;
    }

    /**
      * Sets the value of the 'module' field.
      * @param value The value of 'module'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setModule(java.lang.String value) {
      validate(fields()[7], value);
      this.module = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'module' field has been set.
      * @return True if the 'module' field has been set, false otherwise.
      */
    public boolean hasModule() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'module' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearModule() {
      module = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'channels' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getChannels() {
      return channels;
    }

    /**
      * Sets the value of the 'channels' field.
      * @param value The value of 'channels'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setChannels(java.util.List<java.lang.String> value) {
      validate(fields()[8], value);
      this.channels = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'channels' field has been set.
      * @return True if the 'channels' field has been set, false otherwise.
      */
    public boolean hasChannels() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'channels' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearChannels() {
      channels = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'resourceId' field.
      * @return The value.
      */
    public java.lang.String getResourceId() {
      return resourceId;
    }

    /**
      * Sets the value of the 'resourceId' field.
      * @param value The value of 'resourceId'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setResourceId(java.lang.String value) {
      validate(fields()[9], value);
      this.resourceId = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceId' field has been set.
      * @return True if the 'resourceId' field has been set, false otherwise.
      */
    public boolean hasResourceId() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'resourceId' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearResourceId() {
      resourceId = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'resourceIdentifier' field.
      * @return The value.
      */
    public java.lang.String getResourceIdentifier() {
      return resourceIdentifier;
    }

    /**
      * Sets the value of the 'resourceIdentifier' field.
      * @param value The value of 'resourceIdentifier'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setResourceIdentifier(java.lang.String value) {
      validate(fields()[10], value);
      this.resourceIdentifier = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceIdentifier' field has been set.
      * @return True if the 'resourceIdentifier' field has been set, false otherwise.
      */
    public boolean hasResourceIdentifier() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'resourceIdentifier' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearResourceIdentifier() {
      resourceIdentifier = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.String getResourceType() {
      return resourceType;
    }

    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setResourceType(java.lang.String value) {
      validate(fields()[11], value);
      this.resourceType = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventName' field.
      * @return The value.
      */
    public java.lang.String getEventName() {
      return eventName;
    }

    /**
      * Sets the value of the 'eventName' field.
      * @param value The value of 'eventName'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setEventName(java.lang.String value) {
      validate(fields()[12], value);
      this.eventName = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'eventName' field has been set.
      * @return True if the 'eventName' field has been set, false otherwise.
      */
    public boolean hasEventName() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'eventName' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearEventName() {
      eventName = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public java.lang.String getTitle() {
      return title;
    }

    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setTitle(java.lang.String value) {
      validate(fields()[13], value);
      this.title = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearTitle() {
      title = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'content' field.
      * @return The value.
      */
    public java.lang.String getContent() {
      return content;
    }

    /**
      * Sets the value of the 'content' field.
      * @param value The value of 'content'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setContent(java.lang.String value) {
      validate(fields()[14], value);
      this.content = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'content' field has been set.
      * @return True if the 'content' field has been set, false otherwise.
      */
    public boolean hasContent() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'content' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearContent() {
      content = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'htmlContent' field.
      * @return The value.
      */
    public java.lang.String getHtmlContent() {
      return htmlContent;
    }

    /**
      * Sets the value of the 'htmlContent' field.
      * @param value The value of 'htmlContent'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setHtmlContent(java.lang.String value) {
      validate(fields()[15], value);
      this.htmlContent = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'htmlContent' field has been set.
      * @return True if the 'htmlContent' field has been set, false otherwise.
      */
    public boolean hasHtmlContent() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'htmlContent' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearHtmlContent() {
      htmlContent = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'pushACKId' field.
      * @return The value.
      */
    public java.lang.String getPushACKId() {
      return pushACKId;
    }

    /**
      * Sets the value of the 'pushACKId' field.
      * @param value The value of 'pushACKId'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setPushACKId(java.lang.String value) {
      validate(fields()[16], value);
      this.pushACKId = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'pushACKId' field has been set.
      * @return True if the 'pushACKId' field has been set, false otherwise.
      */
    public boolean hasPushACKId() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'pushACKId' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearPushACKId() {
      pushACKId = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'redirectURL' field.
      * @return The value.
      */
    public java.lang.String getRedirectURL() {
      return redirectURL;
    }

    /**
      * Sets the value of the 'redirectURL' field.
      * @param value The value of 'redirectURL'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setRedirectURL(java.lang.String value) {
      validate(fields()[17], value);
      this.redirectURL = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'redirectURL' field has been set.
      * @return True if the 'redirectURL' field has been set, false otherwise.
      */
    public boolean hasRedirectURL() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'redirectURL' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearRedirectURL() {
      redirectURL = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'mailACKIds' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getMailACKIds() {
      return mailACKIds;
    }

    /**
      * Sets the value of the 'mailACKIds' field.
      * @param value The value of 'mailACKIds'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setMailACKIds(java.util.List<java.lang.String> value) {
      validate(fields()[18], value);
      this.mailACKIds = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'mailACKIds' field has been set.
      * @return True if the 'mailACKIds' field has been set, false otherwise.
      */
    public boolean hasMailACKIds() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'mailACKIds' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearMailACKIds() {
      mailACKIds = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdOn' field.
      * @return The value.
      */
    public java.lang.Long getCreatedOn() {
      return createdOn;
    }

    /**
      * Sets the value of the 'createdOn' field.
      * @param value The value of 'createdOn'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setCreatedOn(java.lang.Long value) {
      validate(fields()[19], value);
      this.createdOn = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'createdOn' field has been set.
      * @return True if the 'createdOn' field has been set, false otherwise.
      */
    public boolean hasCreatedOn() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'createdOn' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearCreatedOn() {
      createdOn = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'readOn' field.
      * @return The value.
      */
    public java.lang.Long getReadOn() {
      return readOn;
    }

    /**
      * Sets the value of the 'readOn' field.
      * @param value The value of 'readOn'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setReadOn(java.lang.Long value) {
      validate(fields()[20], value);
      this.readOn = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'readOn' field has been set.
      * @return True if the 'readOn' field has been set, false otherwise.
      */
    public boolean hasReadOn() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'readOn' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearReadOn() {
      readOn = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'isRead' field.
      * @return The value.
      */
    public java.lang.Boolean getIsRead() {
      return isRead;
    }

    /**
      * Sets the value of the 'isRead' field.
      * @param value The value of 'isRead'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setIsRead(java.lang.Boolean value) {
      validate(fields()[21], value);
      this.isRead = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'isRead' field has been set.
      * @return True if the 'isRead' field has been set, false otherwise.
      */
    public boolean hasIsRead() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'isRead' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearIsRead() {
      isRead = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'mailThreadId' field.
      * @return The value.
      */
    public java.lang.String getMailThreadId() {
      return mailThreadId;
    }

    /**
      * Sets the value of the 'mailThreadId' field.
      * @param value The value of 'mailThreadId'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setMailThreadId(java.lang.String value) {
      validate(fields()[22], value);
      this.mailThreadId = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'mailThreadId' field has been set.
      * @return True if the 'mailThreadId' field has been set, false otherwise.
      */
    public boolean hasMailThreadId() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'mailThreadId' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearMailThreadId() {
      mailThreadId = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'debounced' field.
      * @return The value.
      */
    public java.lang.Boolean getDebounced() {
      return debounced;
    }

    /**
      * Sets the value of the 'debounced' field.
      * @param value The value of 'debounced'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setDebounced(java.lang.Boolean value) {
      validate(fields()[23], value);
      this.debounced = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'debounced' field has been set.
      * @return True if the 'debounced' field has been set, false otherwise.
      */
    public boolean hasDebounced() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'debounced' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearDebounced() {
      debounced = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'commandId' field.
      * @return The value.
      */
    public java.lang.String getCommandId() {
      return commandId;
    }

    /**
      * Sets the value of the 'commandId' field.
      * @param value The value of 'commandId'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setCommandId(java.lang.String value) {
      validate(fields()[24], value);
      this.commandId = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'commandId' field has been set.
      * @return True if the 'commandId' field has been set, false otherwise.
      */
    public boolean hasCommandId() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'commandId' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearCommandId() {
      commandId = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'processed' field.
      * @return The value.
      */
    public java.lang.Boolean getProcessed() {
      return processed;
    }

    /**
      * Sets the value of the 'processed' field.
      * @param value The value of 'processed'.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder setProcessed(java.lang.Boolean value) {
      validate(fields()[25], value);
      this.processed = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'processed' field has been set.
      * @return True if the 'processed' field has been set, false otherwise.
      */
    public boolean hasProcessed() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'processed' field.
      * @return This builder.
      */
    public com.fretron.Model.NotificationEvent.Builder clearProcessed() {
      processed = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    @Override
    public NotificationEvent build() {
      try {
        NotificationEvent record = new NotificationEvent();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.subscriber = fieldSetFlags()[1] ? this.subscriber : (java.lang.String) defaultValue(fields()[1]);
        record.orgId = fieldSetFlags()[2] ? this.orgId : (java.lang.String) defaultValue(fields()[2]);
        record.type = fieldSetFlags()[3] ? this.type : (java.lang.String) defaultValue(fields()[3]);
        record.scope = fieldSetFlags()[4] ? this.scope : (java.lang.String) defaultValue(fields()[4]);
        record.email = fieldSetFlags()[5] ? this.email : (java.lang.String) defaultValue(fields()[5]);
        record.mobileNumber = fieldSetFlags()[6] ? this.mobileNumber : (java.lang.String) defaultValue(fields()[6]);
        record.module = fieldSetFlags()[7] ? this.module : (java.lang.String) defaultValue(fields()[7]);
        record.channels = fieldSetFlags()[8] ? this.channels : (java.util.List<java.lang.String>) defaultValue(fields()[8]);
        record.resourceId = fieldSetFlags()[9] ? this.resourceId : (java.lang.String) defaultValue(fields()[9]);
        record.resourceIdentifier = fieldSetFlags()[10] ? this.resourceIdentifier : (java.lang.String) defaultValue(fields()[10]);
        record.resourceType = fieldSetFlags()[11] ? this.resourceType : (java.lang.String) defaultValue(fields()[11]);
        record.eventName = fieldSetFlags()[12] ? this.eventName : (java.lang.String) defaultValue(fields()[12]);
        record.title = fieldSetFlags()[13] ? this.title : (java.lang.String) defaultValue(fields()[13]);
        record.content = fieldSetFlags()[14] ? this.content : (java.lang.String) defaultValue(fields()[14]);
        record.htmlContent = fieldSetFlags()[15] ? this.htmlContent : (java.lang.String) defaultValue(fields()[15]);
        record.pushACKId = fieldSetFlags()[16] ? this.pushACKId : (java.lang.String) defaultValue(fields()[16]);
        record.redirectURL = fieldSetFlags()[17] ? this.redirectURL : (java.lang.String) defaultValue(fields()[17]);
        record.mailACKIds = fieldSetFlags()[18] ? this.mailACKIds : (java.util.List<java.lang.String>) defaultValue(fields()[18]);
        record.createdOn = fieldSetFlags()[19] ? this.createdOn : (java.lang.Long) defaultValue(fields()[19]);
        record.readOn = fieldSetFlags()[20] ? this.readOn : (java.lang.Long) defaultValue(fields()[20]);
        record.isRead = fieldSetFlags()[21] ? this.isRead : (java.lang.Boolean) defaultValue(fields()[21]);
        record.mailThreadId = fieldSetFlags()[22] ? this.mailThreadId : (java.lang.String) defaultValue(fields()[22]);
        record.debounced = fieldSetFlags()[23] ? this.debounced : (java.lang.Boolean) defaultValue(fields()[23]);
        record.commandId = fieldSetFlags()[24] ? this.commandId : (java.lang.String) defaultValue(fields()[24]);
        record.processed = fieldSetFlags()[25] ? this.processed : (java.lang.Boolean) defaultValue(fields()[25]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Attributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2462590677848869091L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Attributes\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"battery\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"alarm\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ip\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"distance\",\"type\":[\"null\",\"double\"]},{\"name\":\"totalDistance\",\"type\":[\"null\",\"double\"]},{\"name\":\"isCharge\",\"type\":\"boolean\",\"default\":false},{\"name\":\"chargingValue\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"ignition\",\"type\":\"boolean\",\"default\":false},{\"name\":\"ignitionValue\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"isOilElectricityConnected\",\"type\":\"boolean\",\"default\":false},{\"name\":\"oilElectricityValue\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"isGpsTrackingOn\",\"type\":\"boolean\",\"default\":false},{\"name\":\"acc\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"satellitesGpsQualityInfo\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"uploadReason\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uploadMode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"signalStrength\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"commandResult\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"serialNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"sleepMode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"gpsStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String battery;
  @Deprecated public java.lang.String alarm;
  @Deprecated public java.lang.String ip;
  @Deprecated public java.lang.Double distance;
  @Deprecated public java.lang.Double totalDistance;
  @Deprecated public boolean isCharge;
  @Deprecated public java.lang.Integer chargingValue;
  @Deprecated public boolean ignition;
  @Deprecated public java.lang.Integer ignitionValue;
  @Deprecated public boolean isOilElectricityConnected;
  @Deprecated public java.lang.Integer oilElectricityValue;
  @Deprecated public boolean isGpsTrackingOn;
  @Deprecated public java.lang.Integer acc;
  @Deprecated public java.lang.Integer satellitesGpsQualityInfo;
  @Deprecated public java.lang.String uploadReason;
  @Deprecated public java.lang.String uploadMode;
  @Deprecated public java.lang.String signalStrength;
  @Deprecated public java.lang.String commandResult;
  @Deprecated public java.lang.Integer serialNumber;
  @Deprecated public java.lang.String sleepMode;
  @Deprecated public java.lang.String gpsStatus;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Attributes() {}

  /**
   * All-args constructor.
   * @param battery The new value for battery
   * @param alarm The new value for alarm
   * @param ip The new value for ip
   * @param distance The new value for distance
   * @param totalDistance The new value for totalDistance
   * @param isCharge The new value for isCharge
   * @param chargingValue The new value for chargingValue
   * @param ignition The new value for ignition
   * @param ignitionValue The new value for ignitionValue
   * @param isOilElectricityConnected The new value for isOilElectricityConnected
   * @param oilElectricityValue The new value for oilElectricityValue
   * @param isGpsTrackingOn The new value for isGpsTrackingOn
   * @param acc The new value for acc
   * @param satellitesGpsQualityInfo The new value for satellitesGpsQualityInfo
   * @param uploadReason The new value for uploadReason
   * @param uploadMode The new value for uploadMode
   * @param signalStrength The new value for signalStrength
   * @param commandResult The new value for commandResult
   * @param serialNumber The new value for serialNumber
   * @param sleepMode The new value for sleepMode
   * @param gpsStatus The new value for gpsStatus
   */
  public Attributes(java.lang.String battery, java.lang.String alarm, java.lang.String ip, java.lang.Double distance, java.lang.Double totalDistance, java.lang.Boolean isCharge, java.lang.Integer chargingValue, java.lang.Boolean ignition, java.lang.Integer ignitionValue, java.lang.Boolean isOilElectricityConnected, java.lang.Integer oilElectricityValue, java.lang.Boolean isGpsTrackingOn, java.lang.Integer acc, java.lang.Integer satellitesGpsQualityInfo, java.lang.String uploadReason, java.lang.String uploadMode, java.lang.String signalStrength, java.lang.String commandResult, java.lang.Integer serialNumber, java.lang.String sleepMode, java.lang.String gpsStatus) {
    this.battery = battery;
    this.alarm = alarm;
    this.ip = ip;
    this.distance = distance;
    this.totalDistance = totalDistance;
    this.isCharge = isCharge;
    this.chargingValue = chargingValue;
    this.ignition = ignition;
    this.ignitionValue = ignitionValue;
    this.isOilElectricityConnected = isOilElectricityConnected;
    this.oilElectricityValue = oilElectricityValue;
    this.isGpsTrackingOn = isGpsTrackingOn;
    this.acc = acc;
    this.satellitesGpsQualityInfo = satellitesGpsQualityInfo;
    this.uploadReason = uploadReason;
    this.uploadMode = uploadMode;
    this.signalStrength = signalStrength;
    this.commandResult = commandResult;
    this.serialNumber = serialNumber;
    this.sleepMode = sleepMode;
    this.gpsStatus = gpsStatus;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return battery;
    case 1: return alarm;
    case 2: return ip;
    case 3: return distance;
    case 4: return totalDistance;
    case 5: return isCharge;
    case 6: return chargingValue;
    case 7: return ignition;
    case 8: return ignitionValue;
    case 9: return isOilElectricityConnected;
    case 10: return oilElectricityValue;
    case 11: return isGpsTrackingOn;
    case 12: return acc;
    case 13: return satellitesGpsQualityInfo;
    case 14: return uploadReason;
    case 15: return uploadMode;
    case 16: return signalStrength;
    case 17: return commandResult;
    case 18: return serialNumber;
    case 19: return sleepMode;
    case 20: return gpsStatus;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: battery = (java.lang.String)value$; break;
    case 1: alarm = (java.lang.String)value$; break;
    case 2: ip = (java.lang.String)value$; break;
    case 3: distance = (java.lang.Double)value$; break;
    case 4: totalDistance = (java.lang.Double)value$; break;
    case 5: isCharge = (java.lang.Boolean)value$; break;
    case 6: chargingValue = (java.lang.Integer)value$; break;
    case 7: ignition = (java.lang.Boolean)value$; break;
    case 8: ignitionValue = (java.lang.Integer)value$; break;
    case 9: isOilElectricityConnected = (java.lang.Boolean)value$; break;
    case 10: oilElectricityValue = (java.lang.Integer)value$; break;
    case 11: isGpsTrackingOn = (java.lang.Boolean)value$; break;
    case 12: acc = (java.lang.Integer)value$; break;
    case 13: satellitesGpsQualityInfo = (java.lang.Integer)value$; break;
    case 14: uploadReason = (java.lang.String)value$; break;
    case 15: uploadMode = (java.lang.String)value$; break;
    case 16: signalStrength = (java.lang.String)value$; break;
    case 17: commandResult = (java.lang.String)value$; break;
    case 18: serialNumber = (java.lang.Integer)value$; break;
    case 19: sleepMode = (java.lang.String)value$; break;
    case 20: gpsStatus = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'battery' field.
   * @return The value of the 'battery' field.
   */
  public java.lang.String getBattery() {
    return battery;
  }

  /**
   * Sets the value of the 'battery' field.
   * @param value the value to set.
   */
  public void setBattery(java.lang.String value) {
    this.battery = value;
  }

  /**
   * Gets the value of the 'alarm' field.
   * @return The value of the 'alarm' field.
   */
  public java.lang.String getAlarm() {
    return alarm;
  }

  /**
   * Sets the value of the 'alarm' field.
   * @param value the value to set.
   */
  public void setAlarm(java.lang.String value) {
    this.alarm = value;
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public java.lang.String getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(java.lang.String value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'distance' field.
   * @return The value of the 'distance' field.
   */
  public java.lang.Double getDistance() {
    return distance;
  }

  /**
   * Sets the value of the 'distance' field.
   * @param value the value to set.
   */
  public void setDistance(java.lang.Double value) {
    this.distance = value;
  }

  /**
   * Gets the value of the 'totalDistance' field.
   * @return The value of the 'totalDistance' field.
   */
  public java.lang.Double getTotalDistance() {
    return totalDistance;
  }

  /**
   * Sets the value of the 'totalDistance' field.
   * @param value the value to set.
   */
  public void setTotalDistance(java.lang.Double value) {
    this.totalDistance = value;
  }

  /**
   * Gets the value of the 'isCharge' field.
   * @return The value of the 'isCharge' field.
   */
  public java.lang.Boolean getIsCharge() {
    return isCharge;
  }

  /**
   * Sets the value of the 'isCharge' field.
   * @param value the value to set.
   */
  public void setIsCharge(java.lang.Boolean value) {
    this.isCharge = value;
  }

  /**
   * Gets the value of the 'chargingValue' field.
   * @return The value of the 'chargingValue' field.
   */
  public java.lang.Integer getChargingValue() {
    return chargingValue;
  }

  /**
   * Sets the value of the 'chargingValue' field.
   * @param value the value to set.
   */
  public void setChargingValue(java.lang.Integer value) {
    this.chargingValue = value;
  }

  /**
   * Gets the value of the 'ignition' field.
   * @return The value of the 'ignition' field.
   */
  public java.lang.Boolean getIgnition() {
    return ignition;
  }

  /**
   * Sets the value of the 'ignition' field.
   * @param value the value to set.
   */
  public void setIgnition(java.lang.Boolean value) {
    this.ignition = value;
  }

  /**
   * Gets the value of the 'ignitionValue' field.
   * @return The value of the 'ignitionValue' field.
   */
  public java.lang.Integer getIgnitionValue() {
    return ignitionValue;
  }

  /**
   * Sets the value of the 'ignitionValue' field.
   * @param value the value to set.
   */
  public void setIgnitionValue(java.lang.Integer value) {
    this.ignitionValue = value;
  }

  /**
   * Gets the value of the 'isOilElectricityConnected' field.
   * @return The value of the 'isOilElectricityConnected' field.
   */
  public java.lang.Boolean getIsOilElectricityConnected() {
    return isOilElectricityConnected;
  }

  /**
   * Sets the value of the 'isOilElectricityConnected' field.
   * @param value the value to set.
   */
  public void setIsOilElectricityConnected(java.lang.Boolean value) {
    this.isOilElectricityConnected = value;
  }

  /**
   * Gets the value of the 'oilElectricityValue' field.
   * @return The value of the 'oilElectricityValue' field.
   */
  public java.lang.Integer getOilElectricityValue() {
    return oilElectricityValue;
  }

  /**
   * Sets the value of the 'oilElectricityValue' field.
   * @param value the value to set.
   */
  public void setOilElectricityValue(java.lang.Integer value) {
    this.oilElectricityValue = value;
  }

  /**
   * Gets the value of the 'isGpsTrackingOn' field.
   * @return The value of the 'isGpsTrackingOn' field.
   */
  public java.lang.Boolean getIsGpsTrackingOn() {
    return isGpsTrackingOn;
  }

  /**
   * Sets the value of the 'isGpsTrackingOn' field.
   * @param value the value to set.
   */
  public void setIsGpsTrackingOn(java.lang.Boolean value) {
    this.isGpsTrackingOn = value;
  }

  /**
   * Gets the value of the 'acc' field.
   * @return The value of the 'acc' field.
   */
  public java.lang.Integer getAcc() {
    return acc;
  }

  /**
   * Sets the value of the 'acc' field.
   * @param value the value to set.
   */
  public void setAcc(java.lang.Integer value) {
    this.acc = value;
  }

  /**
   * Gets the value of the 'satellitesGpsQualityInfo' field.
   * @return The value of the 'satellitesGpsQualityInfo' field.
   */
  public java.lang.Integer getSatellitesGpsQualityInfo() {
    return satellitesGpsQualityInfo;
  }

  /**
   * Sets the value of the 'satellitesGpsQualityInfo' field.
   * @param value the value to set.
   */
  public void setSatellitesGpsQualityInfo(java.lang.Integer value) {
    this.satellitesGpsQualityInfo = value;
  }

  /**
   * Gets the value of the 'uploadReason' field.
   * @return The value of the 'uploadReason' field.
   */
  public java.lang.String getUploadReason() {
    return uploadReason;
  }

  /**
   * Sets the value of the 'uploadReason' field.
   * @param value the value to set.
   */
  public void setUploadReason(java.lang.String value) {
    this.uploadReason = value;
  }

  /**
   * Gets the value of the 'uploadMode' field.
   * @return The value of the 'uploadMode' field.
   */
  public java.lang.String getUploadMode() {
    return uploadMode;
  }

  /**
   * Sets the value of the 'uploadMode' field.
   * @param value the value to set.
   */
  public void setUploadMode(java.lang.String value) {
    this.uploadMode = value;
  }

  /**
   * Gets the value of the 'signalStrength' field.
   * @return The value of the 'signalStrength' field.
   */
  public java.lang.String getSignalStrength() {
    return signalStrength;
  }

  /**
   * Sets the value of the 'signalStrength' field.
   * @param value the value to set.
   */
  public void setSignalStrength(java.lang.String value) {
    this.signalStrength = value;
  }

  /**
   * Gets the value of the 'commandResult' field.
   * @return The value of the 'commandResult' field.
   */
  public java.lang.String getCommandResult() {
    return commandResult;
  }

  /**
   * Sets the value of the 'commandResult' field.
   * @param value the value to set.
   */
  public void setCommandResult(java.lang.String value) {
    this.commandResult = value;
  }

  /**
   * Gets the value of the 'serialNumber' field.
   * @return The value of the 'serialNumber' field.
   */
  public java.lang.Integer getSerialNumber() {
    return serialNumber;
  }

  /**
   * Sets the value of the 'serialNumber' field.
   * @param value the value to set.
   */
  public void setSerialNumber(java.lang.Integer value) {
    this.serialNumber = value;
  }

  /**
   * Gets the value of the 'sleepMode' field.
   * @return The value of the 'sleepMode' field.
   */
  public java.lang.String getSleepMode() {
    return sleepMode;
  }

  /**
   * Sets the value of the 'sleepMode' field.
   * @param value the value to set.
   */
  public void setSleepMode(java.lang.String value) {
    this.sleepMode = value;
  }

  /**
   * Gets the value of the 'gpsStatus' field.
   * @return The value of the 'gpsStatus' field.
   */
  public java.lang.String getGpsStatus() {
    return gpsStatus;
  }

  /**
   * Sets the value of the 'gpsStatus' field.
   * @param value the value to set.
   */
  public void setGpsStatus(java.lang.String value) {
    this.gpsStatus = value;
  }

  /**
   * Creates a new Attributes RecordBuilder.
   * @return A new Attributes RecordBuilder
   */
  public static com.fretron.Model.Attributes.Builder newBuilder() {
    return new com.fretron.Model.Attributes.Builder();
  }

  /**
   * Creates a new Attributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Attributes RecordBuilder
   */
  public static com.fretron.Model.Attributes.Builder newBuilder(com.fretron.Model.Attributes.Builder other) {
    return new com.fretron.Model.Attributes.Builder(other);
  }

  /**
   * Creates a new Attributes RecordBuilder by copying an existing Attributes instance.
   * @param other The existing instance to copy.
   * @return A new Attributes RecordBuilder
   */
  public static com.fretron.Model.Attributes.Builder newBuilder(com.fretron.Model.Attributes other) {
    return new com.fretron.Model.Attributes.Builder(other);
  }

  /**
   * RecordBuilder for Attributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Attributes>
    implements org.apache.avro.data.RecordBuilder<Attributes> {

    private java.lang.String battery;
    private java.lang.String alarm;
    private java.lang.String ip;
    private java.lang.Double distance;
    private java.lang.Double totalDistance;
    private boolean isCharge;
    private java.lang.Integer chargingValue;
    private boolean ignition;
    private java.lang.Integer ignitionValue;
    private boolean isOilElectricityConnected;
    private java.lang.Integer oilElectricityValue;
    private boolean isGpsTrackingOn;
    private java.lang.Integer acc;
    private java.lang.Integer satellitesGpsQualityInfo;
    private java.lang.String uploadReason;
    private java.lang.String uploadMode;
    private java.lang.String signalStrength;
    private java.lang.String commandResult;
    private java.lang.Integer serialNumber;
    private java.lang.String sleepMode;
    private java.lang.String gpsStatus;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.Attributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.battery)) {
        this.battery = data().deepCopy(fields()[0].schema(), other.battery);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.alarm)) {
        this.alarm = data().deepCopy(fields()[1].schema(), other.alarm);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ip)) {
        this.ip = data().deepCopy(fields()[2].schema(), other.ip);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.distance)) {
        this.distance = data().deepCopy(fields()[3].schema(), other.distance);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.totalDistance)) {
        this.totalDistance = data().deepCopy(fields()[4].schema(), other.totalDistance);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.isCharge)) {
        this.isCharge = data().deepCopy(fields()[5].schema(), other.isCharge);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.chargingValue)) {
        this.chargingValue = data().deepCopy(fields()[6].schema(), other.chargingValue);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ignition)) {
        this.ignition = data().deepCopy(fields()[7].schema(), other.ignition);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ignitionValue)) {
        this.ignitionValue = data().deepCopy(fields()[8].schema(), other.ignitionValue);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.isOilElectricityConnected)) {
        this.isOilElectricityConnected = data().deepCopy(fields()[9].schema(), other.isOilElectricityConnected);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.oilElectricityValue)) {
        this.oilElectricityValue = data().deepCopy(fields()[10].schema(), other.oilElectricityValue);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.isGpsTrackingOn)) {
        this.isGpsTrackingOn = data().deepCopy(fields()[11].schema(), other.isGpsTrackingOn);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.acc)) {
        this.acc = data().deepCopy(fields()[12].schema(), other.acc);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.satellitesGpsQualityInfo)) {
        this.satellitesGpsQualityInfo = data().deepCopy(fields()[13].schema(), other.satellitesGpsQualityInfo);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.uploadReason)) {
        this.uploadReason = data().deepCopy(fields()[14].schema(), other.uploadReason);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.uploadMode)) {
        this.uploadMode = data().deepCopy(fields()[15].schema(), other.uploadMode);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.signalStrength)) {
        this.signalStrength = data().deepCopy(fields()[16].schema(), other.signalStrength);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.commandResult)) {
        this.commandResult = data().deepCopy(fields()[17].schema(), other.commandResult);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.serialNumber)) {
        this.serialNumber = data().deepCopy(fields()[18].schema(), other.serialNumber);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.sleepMode)) {
        this.sleepMode = data().deepCopy(fields()[19].schema(), other.sleepMode);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.gpsStatus)) {
        this.gpsStatus = data().deepCopy(fields()[20].schema(), other.gpsStatus);
        fieldSetFlags()[20] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Attributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.Attributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.battery)) {
        this.battery = data().deepCopy(fields()[0].schema(), other.battery);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.alarm)) {
        this.alarm = data().deepCopy(fields()[1].schema(), other.alarm);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ip)) {
        this.ip = data().deepCopy(fields()[2].schema(), other.ip);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.distance)) {
        this.distance = data().deepCopy(fields()[3].schema(), other.distance);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.totalDistance)) {
        this.totalDistance = data().deepCopy(fields()[4].schema(), other.totalDistance);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.isCharge)) {
        this.isCharge = data().deepCopy(fields()[5].schema(), other.isCharge);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.chargingValue)) {
        this.chargingValue = data().deepCopy(fields()[6].schema(), other.chargingValue);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ignition)) {
        this.ignition = data().deepCopy(fields()[7].schema(), other.ignition);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ignitionValue)) {
        this.ignitionValue = data().deepCopy(fields()[8].schema(), other.ignitionValue);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.isOilElectricityConnected)) {
        this.isOilElectricityConnected = data().deepCopy(fields()[9].schema(), other.isOilElectricityConnected);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.oilElectricityValue)) {
        this.oilElectricityValue = data().deepCopy(fields()[10].schema(), other.oilElectricityValue);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.isGpsTrackingOn)) {
        this.isGpsTrackingOn = data().deepCopy(fields()[11].schema(), other.isGpsTrackingOn);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.acc)) {
        this.acc = data().deepCopy(fields()[12].schema(), other.acc);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.satellitesGpsQualityInfo)) {
        this.satellitesGpsQualityInfo = data().deepCopy(fields()[13].schema(), other.satellitesGpsQualityInfo);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.uploadReason)) {
        this.uploadReason = data().deepCopy(fields()[14].schema(), other.uploadReason);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.uploadMode)) {
        this.uploadMode = data().deepCopy(fields()[15].schema(), other.uploadMode);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.signalStrength)) {
        this.signalStrength = data().deepCopy(fields()[16].schema(), other.signalStrength);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.commandResult)) {
        this.commandResult = data().deepCopy(fields()[17].schema(), other.commandResult);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.serialNumber)) {
        this.serialNumber = data().deepCopy(fields()[18].schema(), other.serialNumber);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.sleepMode)) {
        this.sleepMode = data().deepCopy(fields()[19].schema(), other.sleepMode);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.gpsStatus)) {
        this.gpsStatus = data().deepCopy(fields()[20].schema(), other.gpsStatus);
        fieldSetFlags()[20] = true;
      }
    }

    /**
      * Gets the value of the 'battery' field.
      * @return The value.
      */
    public java.lang.String getBattery() {
      return battery;
    }

    /**
      * Sets the value of the 'battery' field.
      * @param value The value of 'battery'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setBattery(java.lang.String value) {
      validate(fields()[0], value);
      this.battery = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'battery' field has been set.
      * @return True if the 'battery' field has been set, false otherwise.
      */
    public boolean hasBattery() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'battery' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearBattery() {
      battery = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'alarm' field.
      * @return The value.
      */
    public java.lang.String getAlarm() {
      return alarm;
    }

    /**
      * Sets the value of the 'alarm' field.
      * @param value The value of 'alarm'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setAlarm(java.lang.String value) {
      validate(fields()[1], value);
      this.alarm = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'alarm' field has been set.
      * @return True if the 'alarm' field has been set, false otherwise.
      */
    public boolean hasAlarm() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'alarm' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearAlarm() {
      alarm = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ip' field.
      * @return The value.
      */
    public java.lang.String getIp() {
      return ip;
    }

    /**
      * Sets the value of the 'ip' field.
      * @param value The value of 'ip'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setIp(java.lang.String value) {
      validate(fields()[2], value);
      this.ip = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ip' field has been set.
      * @return True if the 'ip' field has been set, false otherwise.
      */
    public boolean hasIp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ip' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearIp() {
      ip = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'distance' field.
      * @return The value.
      */
    public java.lang.Double getDistance() {
      return distance;
    }

    /**
      * Sets the value of the 'distance' field.
      * @param value The value of 'distance'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setDistance(java.lang.Double value) {
      validate(fields()[3], value);
      this.distance = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'distance' field has been set.
      * @return True if the 'distance' field has been set, false otherwise.
      */
    public boolean hasDistance() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'distance' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearDistance() {
      distance = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalDistance' field.
      * @return The value.
      */
    public java.lang.Double getTotalDistance() {
      return totalDistance;
    }

    /**
      * Sets the value of the 'totalDistance' field.
      * @param value The value of 'totalDistance'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setTotalDistance(java.lang.Double value) {
      validate(fields()[4], value);
      this.totalDistance = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'totalDistance' field has been set.
      * @return True if the 'totalDistance' field has been set, false otherwise.
      */
    public boolean hasTotalDistance() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'totalDistance' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearTotalDistance() {
      totalDistance = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'isCharge' field.
      * @return The value.
      */
    public java.lang.Boolean getIsCharge() {
      return isCharge;
    }

    /**
      * Sets the value of the 'isCharge' field.
      * @param value The value of 'isCharge'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setIsCharge(boolean value) {
      validate(fields()[5], value);
      this.isCharge = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'isCharge' field has been set.
      * @return True if the 'isCharge' field has been set, false otherwise.
      */
    public boolean hasIsCharge() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'isCharge' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearIsCharge() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargingValue' field.
      * @return The value.
      */
    public java.lang.Integer getChargingValue() {
      return chargingValue;
    }

    /**
      * Sets the value of the 'chargingValue' field.
      * @param value The value of 'chargingValue'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setChargingValue(java.lang.Integer value) {
      validate(fields()[6], value);
      this.chargingValue = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'chargingValue' field has been set.
      * @return True if the 'chargingValue' field has been set, false otherwise.
      */
    public boolean hasChargingValue() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'chargingValue' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearChargingValue() {
      chargingValue = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'ignition' field.
      * @return The value.
      */
    public java.lang.Boolean getIgnition() {
      return ignition;
    }

    /**
      * Sets the value of the 'ignition' field.
      * @param value The value of 'ignition'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setIgnition(boolean value) {
      validate(fields()[7], value);
      this.ignition = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'ignition' field has been set.
      * @return True if the 'ignition' field has been set, false otherwise.
      */
    public boolean hasIgnition() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'ignition' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearIgnition() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'ignitionValue' field.
      * @return The value.
      */
    public java.lang.Integer getIgnitionValue() {
      return ignitionValue;
    }

    /**
      * Sets the value of the 'ignitionValue' field.
      * @param value The value of 'ignitionValue'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setIgnitionValue(java.lang.Integer value) {
      validate(fields()[8], value);
      this.ignitionValue = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'ignitionValue' field has been set.
      * @return True if the 'ignitionValue' field has been set, false otherwise.
      */
    public boolean hasIgnitionValue() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'ignitionValue' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearIgnitionValue() {
      ignitionValue = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'isOilElectricityConnected' field.
      * @return The value.
      */
    public java.lang.Boolean getIsOilElectricityConnected() {
      return isOilElectricityConnected;
    }

    /**
      * Sets the value of the 'isOilElectricityConnected' field.
      * @param value The value of 'isOilElectricityConnected'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setIsOilElectricityConnected(boolean value) {
      validate(fields()[9], value);
      this.isOilElectricityConnected = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'isOilElectricityConnected' field has been set.
      * @return True if the 'isOilElectricityConnected' field has been set, false otherwise.
      */
    public boolean hasIsOilElectricityConnected() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'isOilElectricityConnected' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearIsOilElectricityConnected() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'oilElectricityValue' field.
      * @return The value.
      */
    public java.lang.Integer getOilElectricityValue() {
      return oilElectricityValue;
    }

    /**
      * Sets the value of the 'oilElectricityValue' field.
      * @param value The value of 'oilElectricityValue'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setOilElectricityValue(java.lang.Integer value) {
      validate(fields()[10], value);
      this.oilElectricityValue = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'oilElectricityValue' field has been set.
      * @return True if the 'oilElectricityValue' field has been set, false otherwise.
      */
    public boolean hasOilElectricityValue() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'oilElectricityValue' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearOilElectricityValue() {
      oilElectricityValue = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'isGpsTrackingOn' field.
      * @return The value.
      */
    public java.lang.Boolean getIsGpsTrackingOn() {
      return isGpsTrackingOn;
    }

    /**
      * Sets the value of the 'isGpsTrackingOn' field.
      * @param value The value of 'isGpsTrackingOn'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setIsGpsTrackingOn(boolean value) {
      validate(fields()[11], value);
      this.isGpsTrackingOn = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'isGpsTrackingOn' field has been set.
      * @return True if the 'isGpsTrackingOn' field has been set, false otherwise.
      */
    public boolean hasIsGpsTrackingOn() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'isGpsTrackingOn' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearIsGpsTrackingOn() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'acc' field.
      * @return The value.
      */
    public java.lang.Integer getAcc() {
      return acc;
    }

    /**
      * Sets the value of the 'acc' field.
      * @param value The value of 'acc'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setAcc(java.lang.Integer value) {
      validate(fields()[12], value);
      this.acc = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'acc' field has been set.
      * @return True if the 'acc' field has been set, false otherwise.
      */
    public boolean hasAcc() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'acc' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearAcc() {
      acc = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'satellitesGpsQualityInfo' field.
      * @return The value.
      */
    public java.lang.Integer getSatellitesGpsQualityInfo() {
      return satellitesGpsQualityInfo;
    }

    /**
      * Sets the value of the 'satellitesGpsQualityInfo' field.
      * @param value The value of 'satellitesGpsQualityInfo'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setSatellitesGpsQualityInfo(java.lang.Integer value) {
      validate(fields()[13], value);
      this.satellitesGpsQualityInfo = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'satellitesGpsQualityInfo' field has been set.
      * @return True if the 'satellitesGpsQualityInfo' field has been set, false otherwise.
      */
    public boolean hasSatellitesGpsQualityInfo() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'satellitesGpsQualityInfo' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearSatellitesGpsQualityInfo() {
      satellitesGpsQualityInfo = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'uploadReason' field.
      * @return The value.
      */
    public java.lang.String getUploadReason() {
      return uploadReason;
    }

    /**
      * Sets the value of the 'uploadReason' field.
      * @param value The value of 'uploadReason'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setUploadReason(java.lang.String value) {
      validate(fields()[14], value);
      this.uploadReason = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'uploadReason' field has been set.
      * @return True if the 'uploadReason' field has been set, false otherwise.
      */
    public boolean hasUploadReason() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'uploadReason' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearUploadReason() {
      uploadReason = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'uploadMode' field.
      * @return The value.
      */
    public java.lang.String getUploadMode() {
      return uploadMode;
    }

    /**
      * Sets the value of the 'uploadMode' field.
      * @param value The value of 'uploadMode'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setUploadMode(java.lang.String value) {
      validate(fields()[15], value);
      this.uploadMode = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'uploadMode' field has been set.
      * @return True if the 'uploadMode' field has been set, false otherwise.
      */
    public boolean hasUploadMode() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'uploadMode' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearUploadMode() {
      uploadMode = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'signalStrength' field.
      * @return The value.
      */
    public java.lang.String getSignalStrength() {
      return signalStrength;
    }

    /**
      * Sets the value of the 'signalStrength' field.
      * @param value The value of 'signalStrength'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setSignalStrength(java.lang.String value) {
      validate(fields()[16], value);
      this.signalStrength = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'signalStrength' field has been set.
      * @return True if the 'signalStrength' field has been set, false otherwise.
      */
    public boolean hasSignalStrength() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'signalStrength' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearSignalStrength() {
      signalStrength = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'commandResult' field.
      * @return The value.
      */
    public java.lang.String getCommandResult() {
      return commandResult;
    }

    /**
      * Sets the value of the 'commandResult' field.
      * @param value The value of 'commandResult'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setCommandResult(java.lang.String value) {
      validate(fields()[17], value);
      this.commandResult = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'commandResult' field has been set.
      * @return True if the 'commandResult' field has been set, false otherwise.
      */
    public boolean hasCommandResult() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'commandResult' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearCommandResult() {
      commandResult = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'serialNumber' field.
      * @return The value.
      */
    public java.lang.Integer getSerialNumber() {
      return serialNumber;
    }

    /**
      * Sets the value of the 'serialNumber' field.
      * @param value The value of 'serialNumber'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setSerialNumber(java.lang.Integer value) {
      validate(fields()[18], value);
      this.serialNumber = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'serialNumber' field has been set.
      * @return True if the 'serialNumber' field has been set, false otherwise.
      */
    public boolean hasSerialNumber() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'serialNumber' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearSerialNumber() {
      serialNumber = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'sleepMode' field.
      * @return The value.
      */
    public java.lang.String getSleepMode() {
      return sleepMode;
    }

    /**
      * Sets the value of the 'sleepMode' field.
      * @param value The value of 'sleepMode'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setSleepMode(java.lang.String value) {
      validate(fields()[19], value);
      this.sleepMode = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'sleepMode' field has been set.
      * @return True if the 'sleepMode' field has been set, false otherwise.
      */
    public boolean hasSleepMode() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'sleepMode' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearSleepMode() {
      sleepMode = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'gpsStatus' field.
      * @return The value.
      */
    public java.lang.String getGpsStatus() {
      return gpsStatus;
    }

    /**
      * Sets the value of the 'gpsStatus' field.
      * @param value The value of 'gpsStatus'.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder setGpsStatus(java.lang.String value) {
      validate(fields()[20], value);
      this.gpsStatus = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'gpsStatus' field has been set.
      * @return True if the 'gpsStatus' field has been set, false otherwise.
      */
    public boolean hasGpsStatus() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'gpsStatus' field.
      * @return This builder.
      */
    public com.fretron.Model.Attributes.Builder clearGpsStatus() {
      gpsStatus = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    public Attributes build() {
      try {
        Attributes record = new Attributes();
        record.battery = fieldSetFlags()[0] ? this.battery : (java.lang.String) defaultValue(fields()[0]);
        record.alarm = fieldSetFlags()[1] ? this.alarm : (java.lang.String) defaultValue(fields()[1]);
        record.ip = fieldSetFlags()[2] ? this.ip : (java.lang.String) defaultValue(fields()[2]);
        record.distance = fieldSetFlags()[3] ? this.distance : (java.lang.Double) defaultValue(fields()[3]);
        record.totalDistance = fieldSetFlags()[4] ? this.totalDistance : (java.lang.Double) defaultValue(fields()[4]);
        record.isCharge = fieldSetFlags()[5] ? this.isCharge : (java.lang.Boolean) defaultValue(fields()[5]);
        record.chargingValue = fieldSetFlags()[6] ? this.chargingValue : (java.lang.Integer) defaultValue(fields()[6]);
        record.ignition = fieldSetFlags()[7] ? this.ignition : (java.lang.Boolean) defaultValue(fields()[7]);
        record.ignitionValue = fieldSetFlags()[8] ? this.ignitionValue : (java.lang.Integer) defaultValue(fields()[8]);
        record.isOilElectricityConnected = fieldSetFlags()[9] ? this.isOilElectricityConnected : (java.lang.Boolean) defaultValue(fields()[9]);
        record.oilElectricityValue = fieldSetFlags()[10] ? this.oilElectricityValue : (java.lang.Integer) defaultValue(fields()[10]);
        record.isGpsTrackingOn = fieldSetFlags()[11] ? this.isGpsTrackingOn : (java.lang.Boolean) defaultValue(fields()[11]);
        record.acc = fieldSetFlags()[12] ? this.acc : (java.lang.Integer) defaultValue(fields()[12]);
        record.satellitesGpsQualityInfo = fieldSetFlags()[13] ? this.satellitesGpsQualityInfo : (java.lang.Integer) defaultValue(fields()[13]);
        record.uploadReason = fieldSetFlags()[14] ? this.uploadReason : (java.lang.String) defaultValue(fields()[14]);
        record.uploadMode = fieldSetFlags()[15] ? this.uploadMode : (java.lang.String) defaultValue(fields()[15]);
        record.signalStrength = fieldSetFlags()[16] ? this.signalStrength : (java.lang.String) defaultValue(fields()[16]);
        record.commandResult = fieldSetFlags()[17] ? this.commandResult : (java.lang.String) defaultValue(fields()[17]);
        record.serialNumber = fieldSetFlags()[18] ? this.serialNumber : (java.lang.Integer) defaultValue(fields()[18]);
        record.sleepMode = fieldSetFlags()[19] ? this.sleepMode : (java.lang.String) defaultValue(fields()[19]);
        record.gpsStatus = fieldSetFlags()[20] ? this.gpsStatus : (java.lang.String) defaultValue(fields()[20]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

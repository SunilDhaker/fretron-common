/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ShipmentTrackingState extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3572340293204025120L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShipmentTrackingState\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"shipmentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"deviceImei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"VehicleState\",\"symbols\":[\"WaitingForLoad\",\"EnrouteForPickUp\",\"AtPickUpPoint\",\"EnrouteForDestination\",\"AtDestination\"]}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tripId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"endTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"latitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String shipmentId;
  @Deprecated public java.lang.String deviceImei;
  @Deprecated public com.fretron.Model.VehicleState state;
  @Deprecated public java.lang.String vehicleId;
  @Deprecated public java.lang.String tripId;
  @Deprecated public java.lang.Long startTime;
  @Deprecated public java.lang.Long endTime;
  @Deprecated public java.lang.Double latitude;
  @Deprecated public java.lang.Double longitude;
  @Deprecated public java.lang.String address;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ShipmentTrackingState() {}

  /**
   * All-args constructor.
   * @param shipmentId The new value for shipmentId
   * @param deviceImei The new value for deviceImei
   * @param state The new value for state
   * @param vehicleId The new value for vehicleId
   * @param tripId The new value for tripId
   * @param startTime The new value for startTime
   * @param endTime The new value for endTime
   * @param latitude The new value for latitude
   * @param longitude The new value for longitude
   * @param address The new value for address
   */
  public ShipmentTrackingState(java.lang.String shipmentId, java.lang.String deviceImei, com.fretron.Model.VehicleState state, java.lang.String vehicleId, java.lang.String tripId, java.lang.Long startTime, java.lang.Long endTime, java.lang.Double latitude, java.lang.Double longitude, java.lang.String address) {
    this.shipmentId = shipmentId;
    this.deviceImei = deviceImei;
    this.state = state;
    this.vehicleId = vehicleId;
    this.tripId = tripId;
    this.startTime = startTime;
    this.endTime = endTime;
    this.latitude = latitude;
    this.longitude = longitude;
    this.address = address;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return shipmentId;
    case 1: return deviceImei;
    case 2: return state;
    case 3: return vehicleId;
    case 4: return tripId;
    case 5: return startTime;
    case 6: return endTime;
    case 7: return latitude;
    case 8: return longitude;
    case 9: return address;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: shipmentId = (java.lang.String)value$; break;
    case 1: deviceImei = (java.lang.String)value$; break;
    case 2: state = (com.fretron.Model.VehicleState)value$; break;
    case 3: vehicleId = (java.lang.String)value$; break;
    case 4: tripId = (java.lang.String)value$; break;
    case 5: startTime = (java.lang.Long)value$; break;
    case 6: endTime = (java.lang.Long)value$; break;
    case 7: latitude = (java.lang.Double)value$; break;
    case 8: longitude = (java.lang.Double)value$; break;
    case 9: address = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'shipmentId' field.
   * @return The value of the 'shipmentId' field.
   */
  public java.lang.String getShipmentId() {
    return shipmentId;
  }

  /**
   * Sets the value of the 'shipmentId' field.
   * @param value the value to set.
   */
  public void setShipmentId(java.lang.String value) {
    this.shipmentId = value;
  }

  /**
   * Gets the value of the 'deviceImei' field.
   * @return The value of the 'deviceImei' field.
   */
  public java.lang.String getDeviceImei() {
    return deviceImei;
  }

  /**
   * Sets the value of the 'deviceImei' field.
   * @param value the value to set.
   */
  public void setDeviceImei(java.lang.String value) {
    this.deviceImei = value;
  }

  /**
   * Gets the value of the 'state' field.
   * @return The value of the 'state' field.
   */
  public com.fretron.Model.VehicleState getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(com.fretron.Model.VehicleState value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'vehicleId' field.
   * @return The value of the 'vehicleId' field.
   */
  public java.lang.String getVehicleId() {
    return vehicleId;
  }

  /**
   * Sets the value of the 'vehicleId' field.
   * @param value the value to set.
   */
  public void setVehicleId(java.lang.String value) {
    this.vehicleId = value;
  }

  /**
   * Gets the value of the 'tripId' field.
   * @return The value of the 'tripId' field.
   */
  public java.lang.String getTripId() {
    return tripId;
  }

  /**
   * Sets the value of the 'tripId' field.
   * @param value the value to set.
   */
  public void setTripId(java.lang.String value) {
    this.tripId = value;
  }

  /**
   * Gets the value of the 'startTime' field.
   * @return The value of the 'startTime' field.
   */
  public java.lang.Long getStartTime() {
    return startTime;
  }

  /**
   * Sets the value of the 'startTime' field.
   * @param value the value to set.
   */
  public void setStartTime(java.lang.Long value) {
    this.startTime = value;
  }

  /**
   * Gets the value of the 'endTime' field.
   * @return The value of the 'endTime' field.
   */
  public java.lang.Long getEndTime() {
    return endTime;
  }

  /**
   * Sets the value of the 'endTime' field.
   * @param value the value to set.
   */
  public void setEndTime(java.lang.Long value) {
    this.endTime = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   * @return The value of the 'latitude' field.
   */
  public java.lang.Double getLatitude() {
    return latitude;
  }

  /**
   * Sets the value of the 'latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(java.lang.Double value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   * @return The value of the 'longitude' field.
   */
  public java.lang.Double getLongitude() {
    return longitude;
  }

  /**
   * Sets the value of the 'longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(java.lang.Double value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public java.lang.String getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(java.lang.String value) {
    this.address = value;
  }

  /**
   * Creates a new ShipmentTrackingState RecordBuilder.
   * @return A new ShipmentTrackingState RecordBuilder
   */
  public static com.fretron.Model.ShipmentTrackingState.Builder newBuilder() {
    return new com.fretron.Model.ShipmentTrackingState.Builder();
  }

  /**
   * Creates a new ShipmentTrackingState RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ShipmentTrackingState RecordBuilder
   */
  public static com.fretron.Model.ShipmentTrackingState.Builder newBuilder(com.fretron.Model.ShipmentTrackingState.Builder other) {
    return new com.fretron.Model.ShipmentTrackingState.Builder(other);
  }

  /**
   * Creates a new ShipmentTrackingState RecordBuilder by copying an existing ShipmentTrackingState instance.
   * @param other The existing instance to copy.
   * @return A new ShipmentTrackingState RecordBuilder
   */
  public static com.fretron.Model.ShipmentTrackingState.Builder newBuilder(com.fretron.Model.ShipmentTrackingState other) {
    return new com.fretron.Model.ShipmentTrackingState.Builder(other);
  }

  /**
   * RecordBuilder for ShipmentTrackingState instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShipmentTrackingState>
    implements org.apache.avro.data.RecordBuilder<ShipmentTrackingState> {

    private java.lang.String shipmentId;
    private java.lang.String deviceImei;
    private com.fretron.Model.VehicleState state;
    private java.lang.String vehicleId;
    private java.lang.String tripId;
    private java.lang.Long startTime;
    private java.lang.Long endTime;
    private java.lang.Double latitude;
    private java.lang.Double longitude;
    private java.lang.String address;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.ShipmentTrackingState.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.shipmentId)) {
        this.shipmentId = data().deepCopy(fields()[0].schema(), other.shipmentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deviceImei)) {
        this.deviceImei = data().deepCopy(fields()[1].schema(), other.deviceImei);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.state)) {
        this.state = data().deepCopy(fields()[2].schema(), other.state);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[3].schema(), other.vehicleId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tripId)) {
        this.tripId = data().deepCopy(fields()[4].schema(), other.tripId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.startTime)) {
        this.startTime = data().deepCopy(fields()[5].schema(), other.startTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.endTime)) {
        this.endTime = data().deepCopy(fields()[6].schema(), other.endTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.latitude)) {
        this.latitude = data().deepCopy(fields()[7].schema(), other.latitude);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.longitude)) {
        this.longitude = data().deepCopy(fields()[8].schema(), other.longitude);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.address)) {
        this.address = data().deepCopy(fields()[9].schema(), other.address);
        fieldSetFlags()[9] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ShipmentTrackingState instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.ShipmentTrackingState other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.shipmentId)) {
        this.shipmentId = data().deepCopy(fields()[0].schema(), other.shipmentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deviceImei)) {
        this.deviceImei = data().deepCopy(fields()[1].schema(), other.deviceImei);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.state)) {
        this.state = data().deepCopy(fields()[2].schema(), other.state);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[3].schema(), other.vehicleId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tripId)) {
        this.tripId = data().deepCopy(fields()[4].schema(), other.tripId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.startTime)) {
        this.startTime = data().deepCopy(fields()[5].schema(), other.startTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.endTime)) {
        this.endTime = data().deepCopy(fields()[6].schema(), other.endTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.latitude)) {
        this.latitude = data().deepCopy(fields()[7].schema(), other.latitude);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.longitude)) {
        this.longitude = data().deepCopy(fields()[8].schema(), other.longitude);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.address)) {
        this.address = data().deepCopy(fields()[9].schema(), other.address);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'shipmentId' field.
      * @return The value.
      */
    public java.lang.String getShipmentId() {
      return shipmentId;
    }

    /**
      * Sets the value of the 'shipmentId' field.
      * @param value The value of 'shipmentId'.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder setShipmentId(java.lang.String value) {
      validate(fields()[0], value);
      this.shipmentId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'shipmentId' field has been set.
      * @return True if the 'shipmentId' field has been set, false otherwise.
      */
    public boolean hasShipmentId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'shipmentId' field.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder clearShipmentId() {
      shipmentId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceImei' field.
      * @return The value.
      */
    public java.lang.String getDeviceImei() {
      return deviceImei;
    }

    /**
      * Sets the value of the 'deviceImei' field.
      * @param value The value of 'deviceImei'.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder setDeviceImei(java.lang.String value) {
      validate(fields()[1], value);
      this.deviceImei = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceImei' field has been set.
      * @return True if the 'deviceImei' field has been set, false otherwise.
      */
    public boolean hasDeviceImei() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'deviceImei' field.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder clearDeviceImei() {
      deviceImei = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public com.fretron.Model.VehicleState getState() {
      return state;
    }

    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder setState(com.fretron.Model.VehicleState value) {
      validate(fields()[2], value);
      this.state = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder clearState() {
      state = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleId' field.
      * @return The value.
      */
    public java.lang.String getVehicleId() {
      return vehicleId;
    }

    /**
      * Sets the value of the 'vehicleId' field.
      * @param value The value of 'vehicleId'.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder setVehicleId(java.lang.String value) {
      validate(fields()[3], value);
      this.vehicleId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleId' field has been set.
      * @return True if the 'vehicleId' field has been set, false otherwise.
      */
    public boolean hasVehicleId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'vehicleId' field.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder clearVehicleId() {
      vehicleId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'tripId' field.
      * @return The value.
      */
    public java.lang.String getTripId() {
      return tripId;
    }

    /**
      * Sets the value of the 'tripId' field.
      * @param value The value of 'tripId'.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder setTripId(java.lang.String value) {
      validate(fields()[4], value);
      this.tripId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'tripId' field has been set.
      * @return True if the 'tripId' field has been set, false otherwise.
      */
    public boolean hasTripId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'tripId' field.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder clearTripId() {
      tripId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'startTime' field.
      * @return The value.
      */
    public java.lang.Long getStartTime() {
      return startTime;
    }

    /**
      * Sets the value of the 'startTime' field.
      * @param value The value of 'startTime'.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder setStartTime(java.lang.Long value) {
      validate(fields()[5], value);
      this.startTime = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'startTime' field has been set.
      * @return True if the 'startTime' field has been set, false otherwise.
      */
    public boolean hasStartTime() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'startTime' field.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder clearStartTime() {
      startTime = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'endTime' field.
      * @return The value.
      */
    public java.lang.Long getEndTime() {
      return endTime;
    }

    /**
      * Sets the value of the 'endTime' field.
      * @param value The value of 'endTime'.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder setEndTime(java.lang.Long value) {
      validate(fields()[6], value);
      this.endTime = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'endTime' field has been set.
      * @return True if the 'endTime' field has been set, false otherwise.
      */
    public boolean hasEndTime() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'endTime' field.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder clearEndTime() {
      endTime = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'latitude' field.
      * @return The value.
      */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    /**
      * Sets the value of the 'latitude' field.
      * @param value The value of 'latitude'.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder setLatitude(java.lang.Double value) {
      validate(fields()[7], value);
      this.latitude = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'latitude' field has been set.
      * @return True if the 'latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'latitude' field.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder clearLatitude() {
      latitude = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'longitude' field.
      * @return The value.
      */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    /**
      * Sets the value of the 'longitude' field.
      * @param value The value of 'longitude'.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder setLongitude(java.lang.Double value) {
      validate(fields()[8], value);
      this.longitude = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'longitude' field has been set.
      * @return True if the 'longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'longitude' field.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder clearLongitude() {
      longitude = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public java.lang.String getAddress() {
      return address;
    }

    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder setAddress(java.lang.String value) {
      validate(fields()[9], value);
      this.address = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public com.fretron.Model.ShipmentTrackingState.Builder clearAddress() {
      address = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public ShipmentTrackingState build() {
      try {
        ShipmentTrackingState record = new ShipmentTrackingState();
        record.shipmentId = fieldSetFlags()[0] ? this.shipmentId : (java.lang.String) defaultValue(fields()[0]);
        record.deviceImei = fieldSetFlags()[1] ? this.deviceImei : (java.lang.String) defaultValue(fields()[1]);
        record.state = fieldSetFlags()[2] ? this.state : (com.fretron.Model.VehicleState) defaultValue(fields()[2]);
        record.vehicleId = fieldSetFlags()[3] ? this.vehicleId : (java.lang.String) defaultValue(fields()[3]);
        record.tripId = fieldSetFlags()[4] ? this.tripId : (java.lang.String) defaultValue(fields()[4]);
        record.startTime = fieldSetFlags()[5] ? this.startTime : (java.lang.Long) defaultValue(fields()[5]);
        record.endTime = fieldSetFlags()[6] ? this.endTime : (java.lang.Long) defaultValue(fields()[6]);
        record.latitude = fieldSetFlags()[7] ? this.latitude : (java.lang.Double) defaultValue(fields()[7]);
        record.longitude = fieldSetFlags()[8] ? this.longitude : (java.lang.Double) defaultValue(fields()[8]);
        record.address = fieldSetFlags()[9] ? this.address : (java.lang.String) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UserOrgACL extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1381953023129039233L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserOrgACL\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgUuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userUuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accessLevel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"relationType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"role\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Role\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"permissions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"DomainPermission\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"entity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isFilteredAccess\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"filters\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"permissions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"chooseAtAssignment\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"customFields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CustomFields\",\"fields\":[{\"name\":\"fieldType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldKey\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"multiple\",\"type\":\"boolean\",\"default\":false},{\"name\":\"isRemark\",\"type\":\"boolean\",\"default\":false},{\"name\":\"remark\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"required\",\"type\":\"boolean\",\"default\":false},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"options\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"indexedValue\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"valueType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"input\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"unit\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accessType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Updates\",\"fields\":[{\"name\":\"forwardReasons\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfInformation\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updateType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"forwardedFrom\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"revision\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"traceID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"isDirty\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"roles\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Role\"}],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",\"Updates\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String orgUuid;
  @Deprecated public java.lang.String userUuid;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String email;
  @Deprecated public java.lang.String mobileNumber;
  @Deprecated public java.lang.String externalId;
  @Deprecated public java.lang.String accessLevel;
  @Deprecated public java.lang.String relationType;
  @Deprecated public com.fretron.Model.Role role;
  @Deprecated public java.lang.Boolean isDirty;
  @Deprecated public java.lang.String status;
  @Deprecated public java.util.List<com.fretron.Model.Role> roles;
  @Deprecated public com.fretron.Model.Updates updates;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserOrgACL() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param orgUuid The new value for orgUuid
   * @param userUuid The new value for userUuid
   * @param name The new value for name
   * @param email The new value for email
   * @param mobileNumber The new value for mobileNumber
   * @param externalId The new value for externalId
   * @param accessLevel The new value for accessLevel
   * @param relationType The new value for relationType
   * @param role The new value for role
   * @param isDirty The new value for isDirty
   * @param status The new value for status
   * @param roles The new value for roles
   * @param updates The new value for updates
   */
  public UserOrgACL(java.lang.String uuid, java.lang.String orgUuid, java.lang.String userUuid, java.lang.String name, java.lang.String email, java.lang.String mobileNumber, java.lang.String externalId, java.lang.String accessLevel, java.lang.String relationType, com.fretron.Model.Role role, java.lang.Boolean isDirty, java.lang.String status, java.util.List<com.fretron.Model.Role> roles, com.fretron.Model.Updates updates) {
    this.uuid = uuid;
    this.orgUuid = orgUuid;
    this.userUuid = userUuid;
    this.name = name;
    this.email = email;
    this.mobileNumber = mobileNumber;
    this.externalId = externalId;
    this.accessLevel = accessLevel;
    this.relationType = relationType;
    this.role = role;
    this.isDirty = isDirty;
    this.status = status;
    this.roles = roles;
    this.updates = updates;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return orgUuid;
    case 2: return userUuid;
    case 3: return name;
    case 4: return email;
    case 5: return mobileNumber;
    case 6: return externalId;
    case 7: return accessLevel;
    case 8: return relationType;
    case 9: return role;
    case 10: return isDirty;
    case 11: return status;
    case 12: return roles;
    case 13: return updates;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: orgUuid = (java.lang.String)value$; break;
    case 2: userUuid = (java.lang.String)value$; break;
    case 3: name = (java.lang.String)value$; break;
    case 4: email = (java.lang.String)value$; break;
    case 5: mobileNumber = (java.lang.String)value$; break;
    case 6: externalId = (java.lang.String)value$; break;
    case 7: accessLevel = (java.lang.String)value$; break;
    case 8: relationType = (java.lang.String)value$; break;
    case 9: role = (com.fretron.Model.Role)value$; break;
    case 10: isDirty = (java.lang.Boolean)value$; break;
    case 11: status = (java.lang.String)value$; break;
    case 12: roles = (java.util.List<com.fretron.Model.Role>)value$; break;
    case 13: updates = (com.fretron.Model.Updates)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'orgUuid' field.
   * @return The value of the 'orgUuid' field.
   */
  public java.lang.String getOrgUuid() {
    return orgUuid;
  }

  /**
   * Sets the value of the 'orgUuid' field.
   * @param value the value to set.
   */
  public void setOrgUuid(java.lang.String value) {
    this.orgUuid = value;
  }

  /**
   * Gets the value of the 'userUuid' field.
   * @return The value of the 'userUuid' field.
   */
  public java.lang.String getUserUuid() {
    return userUuid;
  }

  /**
   * Sets the value of the 'userUuid' field.
   * @param value the value to set.
   */
  public void setUserUuid(java.lang.String value) {
    this.userUuid = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'mobileNumber' field.
   * @return The value of the 'mobileNumber' field.
   */
  public java.lang.String getMobileNumber() {
    return mobileNumber;
  }

  /**
   * Sets the value of the 'mobileNumber' field.
   * @param value the value to set.
   */
  public void setMobileNumber(java.lang.String value) {
    this.mobileNumber = value;
  }

  /**
   * Gets the value of the 'externalId' field.
   * @return The value of the 'externalId' field.
   */
  public java.lang.String getExternalId() {
    return externalId;
  }

  /**
   * Sets the value of the 'externalId' field.
   * @param value the value to set.
   */
  public void setExternalId(java.lang.String value) {
    this.externalId = value;
  }

  /**
   * Gets the value of the 'accessLevel' field.
   * @return The value of the 'accessLevel' field.
   */
  public java.lang.String getAccessLevel() {
    return accessLevel;
  }

  /**
   * Sets the value of the 'accessLevel' field.
   * @param value the value to set.
   */
  public void setAccessLevel(java.lang.String value) {
    this.accessLevel = value;
  }

  /**
   * Gets the value of the 'relationType' field.
   * @return The value of the 'relationType' field.
   */
  public java.lang.String getRelationType() {
    return relationType;
  }

  /**
   * Sets the value of the 'relationType' field.
   * @param value the value to set.
   */
  public void setRelationType(java.lang.String value) {
    this.relationType = value;
  }

  /**
   * Gets the value of the 'role' field.
   * @return The value of the 'role' field.
   */
  public com.fretron.Model.Role getRole() {
    return role;
  }

  /**
   * Sets the value of the 'role' field.
   * @param value the value to set.
   */
  public void setRole(com.fretron.Model.Role value) {
    this.role = value;
  }

  /**
   * Gets the value of the 'isDirty' field.
   * @return The value of the 'isDirty' field.
   */
  public java.lang.Boolean getIsDirty() {
    return isDirty;
  }

  /**
   * Sets the value of the 'isDirty' field.
   * @param value the value to set.
   */
  public void setIsDirty(java.lang.Boolean value) {
    this.isDirty = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'roles' field.
   * @return The value of the 'roles' field.
   */
  public java.util.List<com.fretron.Model.Role> getRoles() {
    return roles;
  }

  /**
   * Sets the value of the 'roles' field.
   * @param value the value to set.
   */
  public void setRoles(java.util.List<com.fretron.Model.Role> value) {
    this.roles = value;
  }

  /**
   * Gets the value of the 'updates' field.
   * @return The value of the 'updates' field.
   */
  public com.fretron.Model.Updates getUpdates() {
    return updates;
  }

  /**
   * Sets the value of the 'updates' field.
   * @param value the value to set.
   */
  public void setUpdates(com.fretron.Model.Updates value) {
    this.updates = value;
  }

  /**
   * Creates a new UserOrgACL RecordBuilder.
   * @return A new UserOrgACL RecordBuilder
   */
  public static com.fretron.Model.UserOrgACL.Builder newBuilder() {
    return new com.fretron.Model.UserOrgACL.Builder();
  }

  /**
   * Creates a new UserOrgACL RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserOrgACL RecordBuilder
   */
  public static com.fretron.Model.UserOrgACL.Builder newBuilder(com.fretron.Model.UserOrgACL.Builder other) {
    return new com.fretron.Model.UserOrgACL.Builder(other);
  }

  /**
   * Creates a new UserOrgACL RecordBuilder by copying an existing UserOrgACL instance.
   * @param other The existing instance to copy.
   * @return A new UserOrgACL RecordBuilder
   */
  public static com.fretron.Model.UserOrgACL.Builder newBuilder(com.fretron.Model.UserOrgACL other) {
    return new com.fretron.Model.UserOrgACL.Builder(other);
  }

  /**
   * RecordBuilder for UserOrgACL instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserOrgACL>
    implements org.apache.avro.data.RecordBuilder<UserOrgACL> {

    private java.lang.String uuid;
    private java.lang.String orgUuid;
    private java.lang.String userUuid;
    private java.lang.String name;
    private java.lang.String email;
    private java.lang.String mobileNumber;
    private java.lang.String externalId;
    private java.lang.String accessLevel;
    private java.lang.String relationType;
    private com.fretron.Model.Role role;
    private com.fretron.Model.Role.Builder roleBuilder;
    private java.lang.Boolean isDirty;
    private java.lang.String status;
    private java.util.List<com.fretron.Model.Role> roles;
    private com.fretron.Model.Updates updates;
    private com.fretron.Model.Updates.Builder updatesBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.UserOrgACL.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgUuid)) {
        this.orgUuid = data().deepCopy(fields()[1].schema(), other.orgUuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userUuid)) {
        this.userUuid = data().deepCopy(fields()[2].schema(), other.userUuid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.email)) {
        this.email = data().deepCopy(fields()[4].schema(), other.email);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.mobileNumber)) {
        this.mobileNumber = data().deepCopy(fields()[5].schema(), other.mobileNumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.externalId)) {
        this.externalId = data().deepCopy(fields()[6].schema(), other.externalId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.accessLevel)) {
        this.accessLevel = data().deepCopy(fields()[7].schema(), other.accessLevel);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.relationType)) {
        this.relationType = data().deepCopy(fields()[8].schema(), other.relationType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.role)) {
        this.role = data().deepCopy(fields()[9].schema(), other.role);
        fieldSetFlags()[9] = true;
      }
      if (other.hasRoleBuilder()) {
        this.roleBuilder = com.fretron.Model.Role.newBuilder(other.getRoleBuilder());
      }
      if (isValidValue(fields()[10], other.isDirty)) {
        this.isDirty = data().deepCopy(fields()[10].schema(), other.isDirty);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.roles)) {
        this.roles = data().deepCopy(fields()[12].schema(), other.roles);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.updates)) {
        this.updates = data().deepCopy(fields()[13].schema(), other.updates);
        fieldSetFlags()[13] = true;
      }
      if (other.hasUpdatesBuilder()) {
        this.updatesBuilder = com.fretron.Model.Updates.newBuilder(other.getUpdatesBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing UserOrgACL instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.UserOrgACL other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgUuid)) {
        this.orgUuid = data().deepCopy(fields()[1].schema(), other.orgUuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userUuid)) {
        this.userUuid = data().deepCopy(fields()[2].schema(), other.userUuid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.email)) {
        this.email = data().deepCopy(fields()[4].schema(), other.email);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.mobileNumber)) {
        this.mobileNumber = data().deepCopy(fields()[5].schema(), other.mobileNumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.externalId)) {
        this.externalId = data().deepCopy(fields()[6].schema(), other.externalId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.accessLevel)) {
        this.accessLevel = data().deepCopy(fields()[7].schema(), other.accessLevel);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.relationType)) {
        this.relationType = data().deepCopy(fields()[8].schema(), other.relationType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.role)) {
        this.role = data().deepCopy(fields()[9].schema(), other.role);
        fieldSetFlags()[9] = true;
      }
      this.roleBuilder = null;
      if (isValidValue(fields()[10], other.isDirty)) {
        this.isDirty = data().deepCopy(fields()[10].schema(), other.isDirty);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.roles)) {
        this.roles = data().deepCopy(fields()[12].schema(), other.roles);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.updates)) {
        this.updates = data().deepCopy(fields()[13].schema(), other.updates);
        fieldSetFlags()[13] = true;
      }
      this.updatesBuilder = null;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgUuid' field.
      * @return The value.
      */
    public java.lang.String getOrgUuid() {
      return orgUuid;
    }

    /**
      * Sets the value of the 'orgUuid' field.
      * @param value The value of 'orgUuid'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setOrgUuid(java.lang.String value) {
      validate(fields()[1], value);
      this.orgUuid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'orgUuid' field has been set.
      * @return True if the 'orgUuid' field has been set, false otherwise.
      */
    public boolean hasOrgUuid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'orgUuid' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearOrgUuid() {
      orgUuid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'userUuid' field.
      * @return The value.
      */
    public java.lang.String getUserUuid() {
      return userUuid;
    }

    /**
      * Sets the value of the 'userUuid' field.
      * @param value The value of 'userUuid'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setUserUuid(java.lang.String value) {
      validate(fields()[2], value);
      this.userUuid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'userUuid' field has been set.
      * @return True if the 'userUuid' field has been set, false otherwise.
      */
    public boolean hasUserUuid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'userUuid' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearUserUuid() {
      userUuid = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setName(java.lang.String value) {
      validate(fields()[3], value);
      this.name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearName() {
      name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setEmail(java.lang.String value) {
      validate(fields()[4], value);
      this.email = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearEmail() {
      email = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'mobileNumber' field.
      * @return The value.
      */
    public java.lang.String getMobileNumber() {
      return mobileNumber;
    }

    /**
      * Sets the value of the 'mobileNumber' field.
      * @param value The value of 'mobileNumber'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setMobileNumber(java.lang.String value) {
      validate(fields()[5], value);
      this.mobileNumber = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'mobileNumber' field has been set.
      * @return True if the 'mobileNumber' field has been set, false otherwise.
      */
    public boolean hasMobileNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'mobileNumber' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearMobileNumber() {
      mobileNumber = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalId' field.
      * @return The value.
      */
    public java.lang.String getExternalId() {
      return externalId;
    }

    /**
      * Sets the value of the 'externalId' field.
      * @param value The value of 'externalId'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setExternalId(java.lang.String value) {
      validate(fields()[6], value);
      this.externalId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'externalId' field has been set.
      * @return True if the 'externalId' field has been set, false otherwise.
      */
    public boolean hasExternalId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'externalId' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearExternalId() {
      externalId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'accessLevel' field.
      * @return The value.
      */
    public java.lang.String getAccessLevel() {
      return accessLevel;
    }

    /**
      * Sets the value of the 'accessLevel' field.
      * @param value The value of 'accessLevel'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setAccessLevel(java.lang.String value) {
      validate(fields()[7], value);
      this.accessLevel = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'accessLevel' field has been set.
      * @return True if the 'accessLevel' field has been set, false otherwise.
      */
    public boolean hasAccessLevel() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'accessLevel' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearAccessLevel() {
      accessLevel = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'relationType' field.
      * @return The value.
      */
    public java.lang.String getRelationType() {
      return relationType;
    }

    /**
      * Sets the value of the 'relationType' field.
      * @param value The value of 'relationType'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setRelationType(java.lang.String value) {
      validate(fields()[8], value);
      this.relationType = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'relationType' field has been set.
      * @return True if the 'relationType' field has been set, false otherwise.
      */
    public boolean hasRelationType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'relationType' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearRelationType() {
      relationType = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'role' field.
      * @return The value.
      */
    public com.fretron.Model.Role getRole() {
      return role;
    }

    /**
      * Sets the value of the 'role' field.
      * @param value The value of 'role'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setRole(com.fretron.Model.Role value) {
      validate(fields()[9], value);
      this.roleBuilder = null;
      this.role = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'role' field has been set.
      * @return True if the 'role' field has been set, false otherwise.
      */
    public boolean hasRole() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'role' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Role.Builder getRoleBuilder() {
      if (roleBuilder == null) {
        if (hasRole()) {
          setRoleBuilder(com.fretron.Model.Role.newBuilder(role));
        } else {
          setRoleBuilder(com.fretron.Model.Role.newBuilder());
        }
      }
      return roleBuilder;
    }

    /**
     * Sets the Builder instance for the 'role' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.UserOrgACL.Builder setRoleBuilder(com.fretron.Model.Role.Builder value) {
      clearRole();
      roleBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'role' field has an active Builder instance
     * @return True if the 'role' field has an active Builder instance
     */
    public boolean hasRoleBuilder() {
      return roleBuilder != null;
    }

    /**
      * Clears the value of the 'role' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearRole() {
      role = null;
      roleBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'isDirty' field.
      * @return The value.
      */
    public java.lang.Boolean getIsDirty() {
      return isDirty;
    }

    /**
      * Sets the value of the 'isDirty' field.
      * @param value The value of 'isDirty'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setIsDirty(java.lang.Boolean value) {
      validate(fields()[10], value);
      this.isDirty = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'isDirty' field has been set.
      * @return True if the 'isDirty' field has been set, false otherwise.
      */
    public boolean hasIsDirty() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'isDirty' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearIsDirty() {
      isDirty = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setStatus(java.lang.String value) {
      validate(fields()[11], value);
      this.status = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearStatus() {
      status = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'roles' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.Role> getRoles() {
      return roles;
    }

    /**
      * Sets the value of the 'roles' field.
      * @param value The value of 'roles'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setRoles(java.util.List<com.fretron.Model.Role> value) {
      validate(fields()[12], value);
      this.roles = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'roles' field has been set.
      * @return True if the 'roles' field has been set, false otherwise.
      */
    public boolean hasRoles() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'roles' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearRoles() {
      roles = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'updates' field.
      * @return The value.
      */
    public com.fretron.Model.Updates getUpdates() {
      return updates;
    }

    /**
      * Sets the value of the 'updates' field.
      * @param value The value of 'updates'.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder setUpdates(com.fretron.Model.Updates value) {
      validate(fields()[13], value);
      this.updatesBuilder = null;
      this.updates = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'updates' field has been set.
      * @return True if the 'updates' field has been set, false otherwise.
      */
    public boolean hasUpdates() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'updates' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Updates.Builder getUpdatesBuilder() {
      if (updatesBuilder == null) {
        if (hasUpdates()) {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder(updates));
        } else {
          setUpdatesBuilder(com.fretron.Model.Updates.newBuilder());
        }
      }
      return updatesBuilder;
    }

    /**
     * Sets the Builder instance for the 'updates' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.UserOrgACL.Builder setUpdatesBuilder(com.fretron.Model.Updates.Builder value) {
      clearUpdates();
      updatesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'updates' field has an active Builder instance
     * @return True if the 'updates' field has an active Builder instance
     */
    public boolean hasUpdatesBuilder() {
      return updatesBuilder != null;
    }

    /**
      * Clears the value of the 'updates' field.
      * @return This builder.
      */
    public com.fretron.Model.UserOrgACL.Builder clearUpdates() {
      updates = null;
      updatesBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    public UserOrgACL build() {
      try {
        UserOrgACL record = new UserOrgACL();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.orgUuid = fieldSetFlags()[1] ? this.orgUuid : (java.lang.String) defaultValue(fields()[1]);
        record.userUuid = fieldSetFlags()[2] ? this.userUuid : (java.lang.String) defaultValue(fields()[2]);
        record.name = fieldSetFlags()[3] ? this.name : (java.lang.String) defaultValue(fields()[3]);
        record.email = fieldSetFlags()[4] ? this.email : (java.lang.String) defaultValue(fields()[4]);
        record.mobileNumber = fieldSetFlags()[5] ? this.mobileNumber : (java.lang.String) defaultValue(fields()[5]);
        record.externalId = fieldSetFlags()[6] ? this.externalId : (java.lang.String) defaultValue(fields()[6]);
        record.accessLevel = fieldSetFlags()[7] ? this.accessLevel : (java.lang.String) defaultValue(fields()[7]);
        record.relationType = fieldSetFlags()[8] ? this.relationType : (java.lang.String) defaultValue(fields()[8]);
        if (roleBuilder != null) {
          record.role = this.roleBuilder.build();
        } else {
          record.role = fieldSetFlags()[9] ? this.role : (com.fretron.Model.Role) defaultValue(fields()[9]);
        }
        record.isDirty = fieldSetFlags()[10] ? this.isDirty : (java.lang.Boolean) defaultValue(fields()[10]);
        record.status = fieldSetFlags()[11] ? this.status : (java.lang.String) defaultValue(fields()[11]);
        record.roles = fieldSetFlags()[12] ? this.roles : (java.util.List<com.fretron.Model.Role>) defaultValue(fields()[12]);
        if (updatesBuilder != null) {
          record.updates = this.updatesBuilder.build();
        } else {
          record.updates = fieldSetFlags()[13] ? this.updates : (com.fretron.Model.Updates) defaultValue(fields()[13]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

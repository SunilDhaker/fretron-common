/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class VehicleLoadAllocationReceipt extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 289232285919883781L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"VehicleLoadAllocationReceipt\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"tokenUuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"consignorName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"gatedInTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String tokenUuid;
  @Deprecated public java.lang.String consignorName;
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.Long gatedInTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public VehicleLoadAllocationReceipt() {}

  /**
   * All-args constructor.
   * @param tokenUuid The new value for tokenUuid
   * @param consignorName The new value for consignorName
   * @param uuid The new value for uuid
   * @param orgId The new value for orgId
   * @param gatedInTime The new value for gatedInTime
   */
  public VehicleLoadAllocationReceipt(java.lang.String tokenUuid, java.lang.String consignorName, java.lang.String uuid, java.lang.String orgId, java.lang.Long gatedInTime) {
    this.tokenUuid = tokenUuid;
    this.consignorName = consignorName;
    this.uuid = uuid;
    this.orgId = orgId;
    this.gatedInTime = gatedInTime;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return tokenUuid;
    case 1: return consignorName;
    case 2: return uuid;
    case 3: return orgId;
    case 4: return gatedInTime;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: tokenUuid = (java.lang.String)value$; break;
    case 1: consignorName = (java.lang.String)value$; break;
    case 2: uuid = (java.lang.String)value$; break;
    case 3: orgId = (java.lang.String)value$; break;
    case 4: gatedInTime = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'tokenUuid' field.
   * @return The value of the 'tokenUuid' field.
   */
  public java.lang.String getTokenUuid() {
    return tokenUuid;
  }

  /**
   * Sets the value of the 'tokenUuid' field.
   * @param value the value to set.
   */
  public void setTokenUuid(java.lang.String value) {
    this.tokenUuid = value;
  }

  /**
   * Gets the value of the 'consignorName' field.
   * @return The value of the 'consignorName' field.
   */
  public java.lang.String getConsignorName() {
    return consignorName;
  }

  /**
   * Sets the value of the 'consignorName' field.
   * @param value the value to set.
   */
  public void setConsignorName(java.lang.String value) {
    this.consignorName = value;
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'gatedInTime' field.
   * @return The value of the 'gatedInTime' field.
   */
  public java.lang.Long getGatedInTime() {
    return gatedInTime;
  }

  /**
   * Sets the value of the 'gatedInTime' field.
   * @param value the value to set.
   */
  public void setGatedInTime(java.lang.Long value) {
    this.gatedInTime = value;
  }

  /**
   * Creates a new VehicleLoadAllocationReceipt RecordBuilder.
   * @return A new VehicleLoadAllocationReceipt RecordBuilder
   */
  public static com.fretron.Model.VehicleLoadAllocationReceipt.Builder newBuilder() {
    return new com.fretron.Model.VehicleLoadAllocationReceipt.Builder();
  }

  /**
   * Creates a new VehicleLoadAllocationReceipt RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new VehicleLoadAllocationReceipt RecordBuilder
   */
  public static com.fretron.Model.VehicleLoadAllocationReceipt.Builder newBuilder(com.fretron.Model.VehicleLoadAllocationReceipt.Builder other) {
    return new com.fretron.Model.VehicleLoadAllocationReceipt.Builder(other);
  }

  /**
   * Creates a new VehicleLoadAllocationReceipt RecordBuilder by copying an existing VehicleLoadAllocationReceipt instance.
   * @param other The existing instance to copy.
   * @return A new VehicleLoadAllocationReceipt RecordBuilder
   */
  public static com.fretron.Model.VehicleLoadAllocationReceipt.Builder newBuilder(com.fretron.Model.VehicleLoadAllocationReceipt other) {
    return new com.fretron.Model.VehicleLoadAllocationReceipt.Builder(other);
  }

  /**
   * RecordBuilder for VehicleLoadAllocationReceipt instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<VehicleLoadAllocationReceipt>
    implements org.apache.avro.data.RecordBuilder<VehicleLoadAllocationReceipt> {

    private java.lang.String tokenUuid;
    private java.lang.String consignorName;
    private java.lang.String uuid;
    private java.lang.String orgId;
    private java.lang.Long gatedInTime;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.VehicleLoadAllocationReceipt.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.tokenUuid)) {
        this.tokenUuid = data().deepCopy(fields()[0].schema(), other.tokenUuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.consignorName)) {
        this.consignorName = data().deepCopy(fields()[1].schema(), other.consignorName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.uuid)) {
        this.uuid = data().deepCopy(fields()[2].schema(), other.uuid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.orgId)) {
        this.orgId = data().deepCopy(fields()[3].schema(), other.orgId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.gatedInTime)) {
        this.gatedInTime = data().deepCopy(fields()[4].schema(), other.gatedInTime);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing VehicleLoadAllocationReceipt instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.VehicleLoadAllocationReceipt other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.tokenUuid)) {
        this.tokenUuid = data().deepCopy(fields()[0].schema(), other.tokenUuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.consignorName)) {
        this.consignorName = data().deepCopy(fields()[1].schema(), other.consignorName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.uuid)) {
        this.uuid = data().deepCopy(fields()[2].schema(), other.uuid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.orgId)) {
        this.orgId = data().deepCopy(fields()[3].schema(), other.orgId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.gatedInTime)) {
        this.gatedInTime = data().deepCopy(fields()[4].schema(), other.gatedInTime);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'tokenUuid' field.
      * @return The value.
      */
    public java.lang.String getTokenUuid() {
      return tokenUuid;
    }

    /**
      * Sets the value of the 'tokenUuid' field.
      * @param value The value of 'tokenUuid'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleLoadAllocationReceipt.Builder setTokenUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.tokenUuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'tokenUuid' field has been set.
      * @return True if the 'tokenUuid' field has been set, false otherwise.
      */
    public boolean hasTokenUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'tokenUuid' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleLoadAllocationReceipt.Builder clearTokenUuid() {
      tokenUuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'consignorName' field.
      * @return The value.
      */
    public java.lang.String getConsignorName() {
      return consignorName;
    }

    /**
      * Sets the value of the 'consignorName' field.
      * @param value The value of 'consignorName'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleLoadAllocationReceipt.Builder setConsignorName(java.lang.String value) {
      validate(fields()[1], value);
      this.consignorName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'consignorName' field has been set.
      * @return True if the 'consignorName' field has been set, false otherwise.
      */
    public boolean hasConsignorName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'consignorName' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleLoadAllocationReceipt.Builder clearConsignorName() {
      consignorName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleLoadAllocationReceipt.Builder setUuid(java.lang.String value) {
      validate(fields()[2], value);
      this.uuid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleLoadAllocationReceipt.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleLoadAllocationReceipt.Builder setOrgId(java.lang.String value) {
      validate(fields()[3], value);
      this.orgId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleLoadAllocationReceipt.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'gatedInTime' field.
      * @return The value.
      */
    public java.lang.Long getGatedInTime() {
      return gatedInTime;
    }

    /**
      * Sets the value of the 'gatedInTime' field.
      * @param value The value of 'gatedInTime'.
      * @return This builder.
      */
    public com.fretron.Model.VehicleLoadAllocationReceipt.Builder setGatedInTime(java.lang.Long value) {
      validate(fields()[4], value);
      this.gatedInTime = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'gatedInTime' field has been set.
      * @return True if the 'gatedInTime' field has been set, false otherwise.
      */
    public boolean hasGatedInTime() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'gatedInTime' field.
      * @return This builder.
      */
    public com.fretron.Model.VehicleLoadAllocationReceipt.Builder clearGatedInTime() {
      gatedInTime = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public VehicleLoadAllocationReceipt build() {
      try {
        VehicleLoadAllocationReceipt record = new VehicleLoadAllocationReceipt();
        record.tokenUuid = fieldSetFlags()[0] ? this.tokenUuid : (java.lang.String) defaultValue(fields()[0]);
        record.consignorName = fieldSetFlags()[1] ? this.consignorName : (java.lang.String) defaultValue(fields()[1]);
        record.uuid = fieldSetFlags()[2] ? this.uuid : (java.lang.String) defaultValue(fields()[2]);
        record.orgId = fieldSetFlags()[3] ? this.orgId : (java.lang.String) defaultValue(fields()[3]);
        record.gatedInTime = fieldSetFlags()[4] ? this.gatedInTime : (java.lang.Long) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

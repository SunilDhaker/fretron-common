/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TripDashboardResponseObject extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5906240250427701177L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TripDashboardResponseObject\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"latitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"gpsState\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"gpsStateDuration\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"speed\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"tripStartTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"tripEndTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"vts\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tripStartLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"FreightLocation\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"geofence\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geofence\",\"fields\":[{\"name\":\"center\",\"type\":{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}},{\"name\":\"boundry\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Location\"}],\"default\":null},{\"name\":\"circle\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Circle\",\"fields\":[{\"name\":\"center\",\"type\":\"Location\"},{\"name\":\"radius\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"GeofenceType\",\"symbols\":[\"Proximity\",\"Polygon\"]}],\"default\":null}]}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"favouriteOf\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"FreightLocType\",\"symbols\":[\"Private\",\"Public\"]}],\"default\":null}]}],\"default\":null},{\"name\":\"tripEndLocation\",\"type\":[\"null\",\"FreightLocation\"],\"default\":null},{\"name\":\"vtsDuration\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Double latitude;
  @Deprecated public java.lang.Double longitude;
  @Deprecated public java.lang.String gpsState;
  @Deprecated public java.lang.Long gpsStateDuration;
  @Deprecated public java.lang.Double speed;
  @Deprecated public java.lang.Long tripStartTime;
  @Deprecated public java.lang.Long tripEndTime;
  @Deprecated public java.lang.String vts;
  @Deprecated public com.fretron.Model.FreightLocation tripStartLocation;
  @Deprecated public com.fretron.Model.FreightLocation tripEndLocation;
  @Deprecated public java.lang.Long vtsDuration;
  @Deprecated public java.lang.String address;
  @Deprecated public java.lang.String vehicleId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TripDashboardResponseObject() {}

  /**
   * All-args constructor.
   * @param latitude The new value for latitude
   * @param longitude The new value for longitude
   * @param gpsState The new value for gpsState
   * @param gpsStateDuration The new value for gpsStateDuration
   * @param speed The new value for speed
   * @param tripStartTime The new value for tripStartTime
   * @param tripEndTime The new value for tripEndTime
   * @param vts The new value for vts
   * @param tripStartLocation The new value for tripStartLocation
   * @param tripEndLocation The new value for tripEndLocation
   * @param vtsDuration The new value for vtsDuration
   * @param address The new value for address
   * @param vehicleId The new value for vehicleId
   */
  public TripDashboardResponseObject(java.lang.Double latitude, java.lang.Double longitude, java.lang.String gpsState, java.lang.Long gpsStateDuration, java.lang.Double speed, java.lang.Long tripStartTime, java.lang.Long tripEndTime, java.lang.String vts, com.fretron.Model.FreightLocation tripStartLocation, com.fretron.Model.FreightLocation tripEndLocation, java.lang.Long vtsDuration, java.lang.String address, java.lang.String vehicleId) {
    this.latitude = latitude;
    this.longitude = longitude;
    this.gpsState = gpsState;
    this.gpsStateDuration = gpsStateDuration;
    this.speed = speed;
    this.tripStartTime = tripStartTime;
    this.tripEndTime = tripEndTime;
    this.vts = vts;
    this.tripStartLocation = tripStartLocation;
    this.tripEndLocation = tripEndLocation;
    this.vtsDuration = vtsDuration;
    this.address = address;
    this.vehicleId = vehicleId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return latitude;
    case 1: return longitude;
    case 2: return gpsState;
    case 3: return gpsStateDuration;
    case 4: return speed;
    case 5: return tripStartTime;
    case 6: return tripEndTime;
    case 7: return vts;
    case 8: return tripStartLocation;
    case 9: return tripEndLocation;
    case 10: return vtsDuration;
    case 11: return address;
    case 12: return vehicleId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: latitude = (java.lang.Double)value$; break;
    case 1: longitude = (java.lang.Double)value$; break;
    case 2: gpsState = (java.lang.String)value$; break;
    case 3: gpsStateDuration = (java.lang.Long)value$; break;
    case 4: speed = (java.lang.Double)value$; break;
    case 5: tripStartTime = (java.lang.Long)value$; break;
    case 6: tripEndTime = (java.lang.Long)value$; break;
    case 7: vts = (java.lang.String)value$; break;
    case 8: tripStartLocation = (com.fretron.Model.FreightLocation)value$; break;
    case 9: tripEndLocation = (com.fretron.Model.FreightLocation)value$; break;
    case 10: vtsDuration = (java.lang.Long)value$; break;
    case 11: address = (java.lang.String)value$; break;
    case 12: vehicleId = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'latitude' field.
   * @return The value of the 'latitude' field.
   */
  public java.lang.Double getLatitude() {
    return latitude;
  }

  /**
   * Sets the value of the 'latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(java.lang.Double value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   * @return The value of the 'longitude' field.
   */
  public java.lang.Double getLongitude() {
    return longitude;
  }

  /**
   * Sets the value of the 'longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(java.lang.Double value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'gpsState' field.
   * @return The value of the 'gpsState' field.
   */
  public java.lang.String getGpsState() {
    return gpsState;
  }

  /**
   * Sets the value of the 'gpsState' field.
   * @param value the value to set.
   */
  public void setGpsState(java.lang.String value) {
    this.gpsState = value;
  }

  /**
   * Gets the value of the 'gpsStateDuration' field.
   * @return The value of the 'gpsStateDuration' field.
   */
  public java.lang.Long getGpsStateDuration() {
    return gpsStateDuration;
  }

  /**
   * Sets the value of the 'gpsStateDuration' field.
   * @param value the value to set.
   */
  public void setGpsStateDuration(java.lang.Long value) {
    this.gpsStateDuration = value;
  }

  /**
   * Gets the value of the 'speed' field.
   * @return The value of the 'speed' field.
   */
  public java.lang.Double getSpeed() {
    return speed;
  }

  /**
   * Sets the value of the 'speed' field.
   * @param value the value to set.
   */
  public void setSpeed(java.lang.Double value) {
    this.speed = value;
  }

  /**
   * Gets the value of the 'tripStartTime' field.
   * @return The value of the 'tripStartTime' field.
   */
  public java.lang.Long getTripStartTime() {
    return tripStartTime;
  }

  /**
   * Sets the value of the 'tripStartTime' field.
   * @param value the value to set.
   */
  public void setTripStartTime(java.lang.Long value) {
    this.tripStartTime = value;
  }

  /**
   * Gets the value of the 'tripEndTime' field.
   * @return The value of the 'tripEndTime' field.
   */
  public java.lang.Long getTripEndTime() {
    return tripEndTime;
  }

  /**
   * Sets the value of the 'tripEndTime' field.
   * @param value the value to set.
   */
  public void setTripEndTime(java.lang.Long value) {
    this.tripEndTime = value;
  }

  /**
   * Gets the value of the 'vts' field.
   * @return The value of the 'vts' field.
   */
  public java.lang.String getVts() {
    return vts;
  }

  /**
   * Sets the value of the 'vts' field.
   * @param value the value to set.
   */
  public void setVts(java.lang.String value) {
    this.vts = value;
  }

  /**
   * Gets the value of the 'tripStartLocation' field.
   * @return The value of the 'tripStartLocation' field.
   */
  public com.fretron.Model.FreightLocation getTripStartLocation() {
    return tripStartLocation;
  }

  /**
   * Sets the value of the 'tripStartLocation' field.
   * @param value the value to set.
   */
  public void setTripStartLocation(com.fretron.Model.FreightLocation value) {
    this.tripStartLocation = value;
  }

  /**
   * Gets the value of the 'tripEndLocation' field.
   * @return The value of the 'tripEndLocation' field.
   */
  public com.fretron.Model.FreightLocation getTripEndLocation() {
    return tripEndLocation;
  }

  /**
   * Sets the value of the 'tripEndLocation' field.
   * @param value the value to set.
   */
  public void setTripEndLocation(com.fretron.Model.FreightLocation value) {
    this.tripEndLocation = value;
  }

  /**
   * Gets the value of the 'vtsDuration' field.
   * @return The value of the 'vtsDuration' field.
   */
  public java.lang.Long getVtsDuration() {
    return vtsDuration;
  }

  /**
   * Sets the value of the 'vtsDuration' field.
   * @param value the value to set.
   */
  public void setVtsDuration(java.lang.Long value) {
    this.vtsDuration = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public java.lang.String getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(java.lang.String value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'vehicleId' field.
   * @return The value of the 'vehicleId' field.
   */
  public java.lang.String getVehicleId() {
    return vehicleId;
  }

  /**
   * Sets the value of the 'vehicleId' field.
   * @param value the value to set.
   */
  public void setVehicleId(java.lang.String value) {
    this.vehicleId = value;
  }

  /**
   * Creates a new TripDashboardResponseObject RecordBuilder.
   * @return A new TripDashboardResponseObject RecordBuilder
   */
  public static com.fretron.Model.TripDashboardResponseObject.Builder newBuilder() {
    return new com.fretron.Model.TripDashboardResponseObject.Builder();
  }

  /**
   * Creates a new TripDashboardResponseObject RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TripDashboardResponseObject RecordBuilder
   */
  public static com.fretron.Model.TripDashboardResponseObject.Builder newBuilder(com.fretron.Model.TripDashboardResponseObject.Builder other) {
    return new com.fretron.Model.TripDashboardResponseObject.Builder(other);
  }

  /**
   * Creates a new TripDashboardResponseObject RecordBuilder by copying an existing TripDashboardResponseObject instance.
   * @param other The existing instance to copy.
   * @return A new TripDashboardResponseObject RecordBuilder
   */
  public static com.fretron.Model.TripDashboardResponseObject.Builder newBuilder(com.fretron.Model.TripDashboardResponseObject other) {
    return new com.fretron.Model.TripDashboardResponseObject.Builder(other);
  }

  /**
   * RecordBuilder for TripDashboardResponseObject instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TripDashboardResponseObject>
    implements org.apache.avro.data.RecordBuilder<TripDashboardResponseObject> {

    private java.lang.Double latitude;
    private java.lang.Double longitude;
    private java.lang.String gpsState;
    private java.lang.Long gpsStateDuration;
    private java.lang.Double speed;
    private java.lang.Long tripStartTime;
    private java.lang.Long tripEndTime;
    private java.lang.String vts;
    private com.fretron.Model.FreightLocation tripStartLocation;
    private com.fretron.Model.FreightLocation.Builder tripStartLocationBuilder;
    private com.fretron.Model.FreightLocation tripEndLocation;
    private com.fretron.Model.FreightLocation.Builder tripEndLocationBuilder;
    private java.lang.Long vtsDuration;
    private java.lang.String address;
    private java.lang.String vehicleId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.TripDashboardResponseObject.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.latitude)) {
        this.latitude = data().deepCopy(fields()[0].schema(), other.latitude);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.longitude)) {
        this.longitude = data().deepCopy(fields()[1].schema(), other.longitude);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.gpsState)) {
        this.gpsState = data().deepCopy(fields()[2].schema(), other.gpsState);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.gpsStateDuration)) {
        this.gpsStateDuration = data().deepCopy(fields()[3].schema(), other.gpsStateDuration);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.speed)) {
        this.speed = data().deepCopy(fields()[4].schema(), other.speed);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.tripStartTime)) {
        this.tripStartTime = data().deepCopy(fields()[5].schema(), other.tripStartTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.tripEndTime)) {
        this.tripEndTime = data().deepCopy(fields()[6].schema(), other.tripEndTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.vts)) {
        this.vts = data().deepCopy(fields()[7].schema(), other.vts);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.tripStartLocation)) {
        this.tripStartLocation = data().deepCopy(fields()[8].schema(), other.tripStartLocation);
        fieldSetFlags()[8] = true;
      }
      if (other.hasTripStartLocationBuilder()) {
        this.tripStartLocationBuilder = com.fretron.Model.FreightLocation.newBuilder(other.getTripStartLocationBuilder());
      }
      if (isValidValue(fields()[9], other.tripEndLocation)) {
        this.tripEndLocation = data().deepCopy(fields()[9].schema(), other.tripEndLocation);
        fieldSetFlags()[9] = true;
      }
      if (other.hasTripEndLocationBuilder()) {
        this.tripEndLocationBuilder = com.fretron.Model.FreightLocation.newBuilder(other.getTripEndLocationBuilder());
      }
      if (isValidValue(fields()[10], other.vtsDuration)) {
        this.vtsDuration = data().deepCopy(fields()[10].schema(), other.vtsDuration);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.address)) {
        this.address = data().deepCopy(fields()[11].schema(), other.address);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[12].schema(), other.vehicleId);
        fieldSetFlags()[12] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TripDashboardResponseObject instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.TripDashboardResponseObject other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.latitude)) {
        this.latitude = data().deepCopy(fields()[0].schema(), other.latitude);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.longitude)) {
        this.longitude = data().deepCopy(fields()[1].schema(), other.longitude);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.gpsState)) {
        this.gpsState = data().deepCopy(fields()[2].schema(), other.gpsState);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.gpsStateDuration)) {
        this.gpsStateDuration = data().deepCopy(fields()[3].schema(), other.gpsStateDuration);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.speed)) {
        this.speed = data().deepCopy(fields()[4].schema(), other.speed);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.tripStartTime)) {
        this.tripStartTime = data().deepCopy(fields()[5].schema(), other.tripStartTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.tripEndTime)) {
        this.tripEndTime = data().deepCopy(fields()[6].schema(), other.tripEndTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.vts)) {
        this.vts = data().deepCopy(fields()[7].schema(), other.vts);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.tripStartLocation)) {
        this.tripStartLocation = data().deepCopy(fields()[8].schema(), other.tripStartLocation);
        fieldSetFlags()[8] = true;
      }
      this.tripStartLocationBuilder = null;
      if (isValidValue(fields()[9], other.tripEndLocation)) {
        this.tripEndLocation = data().deepCopy(fields()[9].schema(), other.tripEndLocation);
        fieldSetFlags()[9] = true;
      }
      this.tripEndLocationBuilder = null;
      if (isValidValue(fields()[10], other.vtsDuration)) {
        this.vtsDuration = data().deepCopy(fields()[10].schema(), other.vtsDuration);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.address)) {
        this.address = data().deepCopy(fields()[11].schema(), other.address);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[12].schema(), other.vehicleId);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'latitude' field.
      * @return The value.
      */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    /**
      * Sets the value of the 'latitude' field.
      * @param value The value of 'latitude'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setLatitude(java.lang.Double value) {
      validate(fields()[0], value);
      this.latitude = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'latitude' field has been set.
      * @return True if the 'latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'latitude' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearLatitude() {
      latitude = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'longitude' field.
      * @return The value.
      */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    /**
      * Sets the value of the 'longitude' field.
      * @param value The value of 'longitude'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setLongitude(java.lang.Double value) {
      validate(fields()[1], value);
      this.longitude = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'longitude' field has been set.
      * @return True if the 'longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'longitude' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearLongitude() {
      longitude = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'gpsState' field.
      * @return The value.
      */
    public java.lang.String getGpsState() {
      return gpsState;
    }

    /**
      * Sets the value of the 'gpsState' field.
      * @param value The value of 'gpsState'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setGpsState(java.lang.String value) {
      validate(fields()[2], value);
      this.gpsState = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'gpsState' field has been set.
      * @return True if the 'gpsState' field has been set, false otherwise.
      */
    public boolean hasGpsState() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'gpsState' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearGpsState() {
      gpsState = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'gpsStateDuration' field.
      * @return The value.
      */
    public java.lang.Long getGpsStateDuration() {
      return gpsStateDuration;
    }

    /**
      * Sets the value of the 'gpsStateDuration' field.
      * @param value The value of 'gpsStateDuration'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setGpsStateDuration(java.lang.Long value) {
      validate(fields()[3], value);
      this.gpsStateDuration = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'gpsStateDuration' field has been set.
      * @return True if the 'gpsStateDuration' field has been set, false otherwise.
      */
    public boolean hasGpsStateDuration() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'gpsStateDuration' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearGpsStateDuration() {
      gpsStateDuration = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'speed' field.
      * @return The value.
      */
    public java.lang.Double getSpeed() {
      return speed;
    }

    /**
      * Sets the value of the 'speed' field.
      * @param value The value of 'speed'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setSpeed(java.lang.Double value) {
      validate(fields()[4], value);
      this.speed = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'speed' field has been set.
      * @return True if the 'speed' field has been set, false otherwise.
      */
    public boolean hasSpeed() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'speed' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearSpeed() {
      speed = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'tripStartTime' field.
      * @return The value.
      */
    public java.lang.Long getTripStartTime() {
      return tripStartTime;
    }

    /**
      * Sets the value of the 'tripStartTime' field.
      * @param value The value of 'tripStartTime'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setTripStartTime(java.lang.Long value) {
      validate(fields()[5], value);
      this.tripStartTime = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'tripStartTime' field has been set.
      * @return True if the 'tripStartTime' field has been set, false otherwise.
      */
    public boolean hasTripStartTime() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'tripStartTime' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearTripStartTime() {
      tripStartTime = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'tripEndTime' field.
      * @return The value.
      */
    public java.lang.Long getTripEndTime() {
      return tripEndTime;
    }

    /**
      * Sets the value of the 'tripEndTime' field.
      * @param value The value of 'tripEndTime'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setTripEndTime(java.lang.Long value) {
      validate(fields()[6], value);
      this.tripEndTime = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'tripEndTime' field has been set.
      * @return True if the 'tripEndTime' field has been set, false otherwise.
      */
    public boolean hasTripEndTime() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'tripEndTime' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearTripEndTime() {
      tripEndTime = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'vts' field.
      * @return The value.
      */
    public java.lang.String getVts() {
      return vts;
    }

    /**
      * Sets the value of the 'vts' field.
      * @param value The value of 'vts'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setVts(java.lang.String value) {
      validate(fields()[7], value);
      this.vts = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'vts' field has been set.
      * @return True if the 'vts' field has been set, false otherwise.
      */
    public boolean hasVts() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'vts' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearVts() {
      vts = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'tripStartLocation' field.
      * @return The value.
      */
    public com.fretron.Model.FreightLocation getTripStartLocation() {
      return tripStartLocation;
    }

    /**
      * Sets the value of the 'tripStartLocation' field.
      * @param value The value of 'tripStartLocation'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setTripStartLocation(com.fretron.Model.FreightLocation value) {
      validate(fields()[8], value);
      this.tripStartLocationBuilder = null;
      this.tripStartLocation = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'tripStartLocation' field has been set.
      * @return True if the 'tripStartLocation' field has been set, false otherwise.
      */
    public boolean hasTripStartLocation() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'tripStartLocation' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.FreightLocation.Builder getTripStartLocationBuilder() {
      if (tripStartLocationBuilder == null) {
        if (hasTripStartLocation()) {
          setTripStartLocationBuilder(com.fretron.Model.FreightLocation.newBuilder(tripStartLocation));
        } else {
          setTripStartLocationBuilder(com.fretron.Model.FreightLocation.newBuilder());
        }
      }
      return tripStartLocationBuilder;
    }

    /**
     * Sets the Builder instance for the 'tripStartLocation' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.TripDashboardResponseObject.Builder setTripStartLocationBuilder(com.fretron.Model.FreightLocation.Builder value) {
      clearTripStartLocation();
      tripStartLocationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'tripStartLocation' field has an active Builder instance
     * @return True if the 'tripStartLocation' field has an active Builder instance
     */
    public boolean hasTripStartLocationBuilder() {
      return tripStartLocationBuilder != null;
    }

    /**
      * Clears the value of the 'tripStartLocation' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearTripStartLocation() {
      tripStartLocation = null;
      tripStartLocationBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'tripEndLocation' field.
      * @return The value.
      */
    public com.fretron.Model.FreightLocation getTripEndLocation() {
      return tripEndLocation;
    }

    /**
      * Sets the value of the 'tripEndLocation' field.
      * @param value The value of 'tripEndLocation'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setTripEndLocation(com.fretron.Model.FreightLocation value) {
      validate(fields()[9], value);
      this.tripEndLocationBuilder = null;
      this.tripEndLocation = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'tripEndLocation' field has been set.
      * @return True if the 'tripEndLocation' field has been set, false otherwise.
      */
    public boolean hasTripEndLocation() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'tripEndLocation' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.FreightLocation.Builder getTripEndLocationBuilder() {
      if (tripEndLocationBuilder == null) {
        if (hasTripEndLocation()) {
          setTripEndLocationBuilder(com.fretron.Model.FreightLocation.newBuilder(tripEndLocation));
        } else {
          setTripEndLocationBuilder(com.fretron.Model.FreightLocation.newBuilder());
        }
      }
      return tripEndLocationBuilder;
    }

    /**
     * Sets the Builder instance for the 'tripEndLocation' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.TripDashboardResponseObject.Builder setTripEndLocationBuilder(com.fretron.Model.FreightLocation.Builder value) {
      clearTripEndLocation();
      tripEndLocationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'tripEndLocation' field has an active Builder instance
     * @return True if the 'tripEndLocation' field has an active Builder instance
     */
    public boolean hasTripEndLocationBuilder() {
      return tripEndLocationBuilder != null;
    }

    /**
      * Clears the value of the 'tripEndLocation' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearTripEndLocation() {
      tripEndLocation = null;
      tripEndLocationBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'vtsDuration' field.
      * @return The value.
      */
    public java.lang.Long getVtsDuration() {
      return vtsDuration;
    }

    /**
      * Sets the value of the 'vtsDuration' field.
      * @param value The value of 'vtsDuration'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setVtsDuration(java.lang.Long value) {
      validate(fields()[10], value);
      this.vtsDuration = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'vtsDuration' field has been set.
      * @return True if the 'vtsDuration' field has been set, false otherwise.
      */
    public boolean hasVtsDuration() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'vtsDuration' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearVtsDuration() {
      vtsDuration = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public java.lang.String getAddress() {
      return address;
    }

    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setAddress(java.lang.String value) {
      validate(fields()[11], value);
      this.address = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearAddress() {
      address = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleId' field.
      * @return The value.
      */
    public java.lang.String getVehicleId() {
      return vehicleId;
    }

    /**
      * Sets the value of the 'vehicleId' field.
      * @param value The value of 'vehicleId'.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder setVehicleId(java.lang.String value) {
      validate(fields()[12], value);
      this.vehicleId = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleId' field has been set.
      * @return True if the 'vehicleId' field has been set, false otherwise.
      */
    public boolean hasVehicleId() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'vehicleId' field.
      * @return This builder.
      */
    public com.fretron.Model.TripDashboardResponseObject.Builder clearVehicleId() {
      vehicleId = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    public TripDashboardResponseObject build() {
      try {
        TripDashboardResponseObject record = new TripDashboardResponseObject();
        record.latitude = fieldSetFlags()[0] ? this.latitude : (java.lang.Double) defaultValue(fields()[0]);
        record.longitude = fieldSetFlags()[1] ? this.longitude : (java.lang.Double) defaultValue(fields()[1]);
        record.gpsState = fieldSetFlags()[2] ? this.gpsState : (java.lang.String) defaultValue(fields()[2]);
        record.gpsStateDuration = fieldSetFlags()[3] ? this.gpsStateDuration : (java.lang.Long) defaultValue(fields()[3]);
        record.speed = fieldSetFlags()[4] ? this.speed : (java.lang.Double) defaultValue(fields()[4]);
        record.tripStartTime = fieldSetFlags()[5] ? this.tripStartTime : (java.lang.Long) defaultValue(fields()[5]);
        record.tripEndTime = fieldSetFlags()[6] ? this.tripEndTime : (java.lang.Long) defaultValue(fields()[6]);
        record.vts = fieldSetFlags()[7] ? this.vts : (java.lang.String) defaultValue(fields()[7]);
        if (tripStartLocationBuilder != null) {
          record.tripStartLocation = this.tripStartLocationBuilder.build();
        } else {
          record.tripStartLocation = fieldSetFlags()[8] ? this.tripStartLocation : (com.fretron.Model.FreightLocation) defaultValue(fields()[8]);
        }
        if (tripEndLocationBuilder != null) {
          record.tripEndLocation = this.tripEndLocationBuilder.build();
        } else {
          record.tripEndLocation = fieldSetFlags()[9] ? this.tripEndLocation : (com.fretron.Model.FreightLocation) defaultValue(fields()[9]);
        }
        record.vtsDuration = fieldSetFlags()[10] ? this.vtsDuration : (java.lang.Long) defaultValue(fields()[10]);
        record.address = fieldSetFlags()[11] ? this.address : (java.lang.String) defaultValue(fields()[11]);
        record.vehicleId = fieldSetFlags()[12] ? this.vehicleId : (java.lang.String) defaultValue(fields()[12]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class IntegrationJob extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1605103823609098056L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"IntegrationJob\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"url\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"userName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"password\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"queryParameters\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"headers\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"requestMethod\",\"type\":{\"type\":\"enum\",\"name\":\"RequestMethod\",\"symbols\":[\"GET\",\"POST\",\"PUT\"]}},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"creationTime\",\"type\":[\"null\",\"long\"]},{\"name\":\"scheduleTime\",\"type\":[\"null\",\"long\"]},{\"name\":\"lastScheduleTime\",\"type\":[\"null\",\"long\"]},{\"name\":\"selectedVechiles\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"totalVechiles\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"isActive\",\"type\":\"boolean\"},{\"name\":\"isWebhookActive\",\"type\":\"boolean\"},{\"name\":\"mapper\",\"type\":{\"type\":\"record\",\"name\":\"Mapper\",\"fields\":[{\"name\":\"longitude\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"latitude\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"speed\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"imei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},{\"name\":\"eventType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String id;
  @Deprecated public java.lang.String url;
  @Deprecated public java.lang.String userName;
  @Deprecated public java.lang.String password;
  @Deprecated public java.lang.String queryParameters;
  @Deprecated public java.lang.String headers;
  @Deprecated public java.lang.String orgId;
  @Deprecated public com.fretron.Model.RequestMethod requestMethod;
  @Deprecated public java.lang.String type;
  @Deprecated public java.lang.Long creationTime;
  @Deprecated public java.lang.Long scheduleTime;
  @Deprecated public java.lang.Long lastScheduleTime;
  @Deprecated public java.lang.String selectedVechiles;
  @Deprecated public java.lang.String totalVechiles;
  @Deprecated public boolean isActive;
  @Deprecated public boolean isWebhookActive;
  @Deprecated public com.fretron.Model.Mapper mapper;
  @Deprecated public java.lang.String eventType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public IntegrationJob() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param url The new value for url
   * @param userName The new value for userName
   * @param password The new value for password
   * @param queryParameters The new value for queryParameters
   * @param headers The new value for headers
   * @param orgId The new value for orgId
   * @param requestMethod The new value for requestMethod
   * @param type The new value for type
   * @param creationTime The new value for creationTime
   * @param scheduleTime The new value for scheduleTime
   * @param lastScheduleTime The new value for lastScheduleTime
   * @param selectedVechiles The new value for selectedVechiles
   * @param totalVechiles The new value for totalVechiles
   * @param isActive The new value for isActive
   * @param isWebhookActive The new value for isWebhookActive
   * @param mapper The new value for mapper
   * @param eventType The new value for eventType
   */
  public IntegrationJob(java.lang.String id, java.lang.String url, java.lang.String userName, java.lang.String password, java.lang.String queryParameters, java.lang.String headers, java.lang.String orgId, com.fretron.Model.RequestMethod requestMethod, java.lang.String type, java.lang.Long creationTime, java.lang.Long scheduleTime, java.lang.Long lastScheduleTime, java.lang.String selectedVechiles, java.lang.String totalVechiles, java.lang.Boolean isActive, java.lang.Boolean isWebhookActive, com.fretron.Model.Mapper mapper, java.lang.String eventType) {
    this.id = id;
    this.url = url;
    this.userName = userName;
    this.password = password;
    this.queryParameters = queryParameters;
    this.headers = headers;
    this.orgId = orgId;
    this.requestMethod = requestMethod;
    this.type = type;
    this.creationTime = creationTime;
    this.scheduleTime = scheduleTime;
    this.lastScheduleTime = lastScheduleTime;
    this.selectedVechiles = selectedVechiles;
    this.totalVechiles = totalVechiles;
    this.isActive = isActive;
    this.isWebhookActive = isWebhookActive;
    this.mapper = mapper;
    this.eventType = eventType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return url;
    case 2: return userName;
    case 3: return password;
    case 4: return queryParameters;
    case 5: return headers;
    case 6: return orgId;
    case 7: return requestMethod;
    case 8: return type;
    case 9: return creationTime;
    case 10: return scheduleTime;
    case 11: return lastScheduleTime;
    case 12: return selectedVechiles;
    case 13: return totalVechiles;
    case 14: return isActive;
    case 15: return isWebhookActive;
    case 16: return mapper;
    case 17: return eventType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: url = (java.lang.String)value$; break;
    case 2: userName = (java.lang.String)value$; break;
    case 3: password = (java.lang.String)value$; break;
    case 4: queryParameters = (java.lang.String)value$; break;
    case 5: headers = (java.lang.String)value$; break;
    case 6: orgId = (java.lang.String)value$; break;
    case 7: requestMethod = (com.fretron.Model.RequestMethod)value$; break;
    case 8: type = (java.lang.String)value$; break;
    case 9: creationTime = (java.lang.Long)value$; break;
    case 10: scheduleTime = (java.lang.Long)value$; break;
    case 11: lastScheduleTime = (java.lang.Long)value$; break;
    case 12: selectedVechiles = (java.lang.String)value$; break;
    case 13: totalVechiles = (java.lang.String)value$; break;
    case 14: isActive = (java.lang.Boolean)value$; break;
    case 15: isWebhookActive = (java.lang.Boolean)value$; break;
    case 16: mapper = (com.fretron.Model.Mapper)value$; break;
    case 17: eventType = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'url' field.
   * @return The value of the 'url' field.
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(java.lang.String value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'userName' field.
   * @return The value of the 'userName' field.
   */
  public java.lang.String getUserName() {
    return userName;
  }

  /**
   * Sets the value of the 'userName' field.
   * @param value the value to set.
   */
  public void setUserName(java.lang.String value) {
    this.userName = value;
  }

  /**
   * Gets the value of the 'password' field.
   * @return The value of the 'password' field.
   */
  public java.lang.String getPassword() {
    return password;
  }

  /**
   * Sets the value of the 'password' field.
   * @param value the value to set.
   */
  public void setPassword(java.lang.String value) {
    this.password = value;
  }

  /**
   * Gets the value of the 'queryParameters' field.
   * @return The value of the 'queryParameters' field.
   */
  public java.lang.String getQueryParameters() {
    return queryParameters;
  }

  /**
   * Sets the value of the 'queryParameters' field.
   * @param value the value to set.
   */
  public void setQueryParameters(java.lang.String value) {
    this.queryParameters = value;
  }

  /**
   * Gets the value of the 'headers' field.
   * @return The value of the 'headers' field.
   */
  public java.lang.String getHeaders() {
    return headers;
  }

  /**
   * Sets the value of the 'headers' field.
   * @param value the value to set.
   */
  public void setHeaders(java.lang.String value) {
    this.headers = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'requestMethod' field.
   * @return The value of the 'requestMethod' field.
   */
  public com.fretron.Model.RequestMethod getRequestMethod() {
    return requestMethod;
  }

  /**
   * Sets the value of the 'requestMethod' field.
   * @param value the value to set.
   */
  public void setRequestMethod(com.fretron.Model.RequestMethod value) {
    this.requestMethod = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'creationTime' field.
   * @return The value of the 'creationTime' field.
   */
  public java.lang.Long getCreationTime() {
    return creationTime;
  }

  /**
   * Sets the value of the 'creationTime' field.
   * @param value the value to set.
   */
  public void setCreationTime(java.lang.Long value) {
    this.creationTime = value;
  }

  /**
   * Gets the value of the 'scheduleTime' field.
   * @return The value of the 'scheduleTime' field.
   */
  public java.lang.Long getScheduleTime() {
    return scheduleTime;
  }

  /**
   * Sets the value of the 'scheduleTime' field.
   * @param value the value to set.
   */
  public void setScheduleTime(java.lang.Long value) {
    this.scheduleTime = value;
  }

  /**
   * Gets the value of the 'lastScheduleTime' field.
   * @return The value of the 'lastScheduleTime' field.
   */
  public java.lang.Long getLastScheduleTime() {
    return lastScheduleTime;
  }

  /**
   * Sets the value of the 'lastScheduleTime' field.
   * @param value the value to set.
   */
  public void setLastScheduleTime(java.lang.Long value) {
    this.lastScheduleTime = value;
  }

  /**
   * Gets the value of the 'selectedVechiles' field.
   * @return The value of the 'selectedVechiles' field.
   */
  public java.lang.String getSelectedVechiles() {
    return selectedVechiles;
  }

  /**
   * Sets the value of the 'selectedVechiles' field.
   * @param value the value to set.
   */
  public void setSelectedVechiles(java.lang.String value) {
    this.selectedVechiles = value;
  }

  /**
   * Gets the value of the 'totalVechiles' field.
   * @return The value of the 'totalVechiles' field.
   */
  public java.lang.String getTotalVechiles() {
    return totalVechiles;
  }

  /**
   * Sets the value of the 'totalVechiles' field.
   * @param value the value to set.
   */
  public void setTotalVechiles(java.lang.String value) {
    this.totalVechiles = value;
  }

  /**
   * Gets the value of the 'isActive' field.
   * @return The value of the 'isActive' field.
   */
  public java.lang.Boolean getIsActive() {
    return isActive;
  }

  /**
   * Sets the value of the 'isActive' field.
   * @param value the value to set.
   */
  public void setIsActive(java.lang.Boolean value) {
    this.isActive = value;
  }

  /**
   * Gets the value of the 'isWebhookActive' field.
   * @return The value of the 'isWebhookActive' field.
   */
  public java.lang.Boolean getIsWebhookActive() {
    return isWebhookActive;
  }

  /**
   * Sets the value of the 'isWebhookActive' field.
   * @param value the value to set.
   */
  public void setIsWebhookActive(java.lang.Boolean value) {
    this.isWebhookActive = value;
  }

  /**
   * Gets the value of the 'mapper' field.
   * @return The value of the 'mapper' field.
   */
  public com.fretron.Model.Mapper getMapper() {
    return mapper;
  }

  /**
   * Sets the value of the 'mapper' field.
   * @param value the value to set.
   */
  public void setMapper(com.fretron.Model.Mapper value) {
    this.mapper = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.String getEventType() {
    return eventType;
  }

  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.String value) {
    this.eventType = value;
  }

  /**
   * Creates a new IntegrationJob RecordBuilder.
   * @return A new IntegrationJob RecordBuilder
   */
  public static com.fretron.Model.IntegrationJob.Builder newBuilder() {
    return new com.fretron.Model.IntegrationJob.Builder();
  }

  /**
   * Creates a new IntegrationJob RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new IntegrationJob RecordBuilder
   */
  public static com.fretron.Model.IntegrationJob.Builder newBuilder(com.fretron.Model.IntegrationJob.Builder other) {
    return new com.fretron.Model.IntegrationJob.Builder(other);
  }

  /**
   * Creates a new IntegrationJob RecordBuilder by copying an existing IntegrationJob instance.
   * @param other The existing instance to copy.
   * @return A new IntegrationJob RecordBuilder
   */
  public static com.fretron.Model.IntegrationJob.Builder newBuilder(com.fretron.Model.IntegrationJob other) {
    return new com.fretron.Model.IntegrationJob.Builder(other);
  }

  /**
   * RecordBuilder for IntegrationJob instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<IntegrationJob>
    implements org.apache.avro.data.RecordBuilder<IntegrationJob> {

    private java.lang.String id;
    private java.lang.String url;
    private java.lang.String userName;
    private java.lang.String password;
    private java.lang.String queryParameters;
    private java.lang.String headers;
    private java.lang.String orgId;
    private com.fretron.Model.RequestMethod requestMethod;
    private java.lang.String type;
    private java.lang.Long creationTime;
    private java.lang.Long scheduleTime;
    private java.lang.Long lastScheduleTime;
    private java.lang.String selectedVechiles;
    private java.lang.String totalVechiles;
    private boolean isActive;
    private boolean isWebhookActive;
    private com.fretron.Model.Mapper mapper;
    private com.fretron.Model.Mapper.Builder mapperBuilder;
    private java.lang.String eventType;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.IntegrationJob.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.url)) {
        this.url = data().deepCopy(fields()[1].schema(), other.url);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userName)) {
        this.userName = data().deepCopy(fields()[2].schema(), other.userName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.password)) {
        this.password = data().deepCopy(fields()[3].schema(), other.password);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.queryParameters)) {
        this.queryParameters = data().deepCopy(fields()[4].schema(), other.queryParameters);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.headers)) {
        this.headers = data().deepCopy(fields()[5].schema(), other.headers);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.orgId)) {
        this.orgId = data().deepCopy(fields()[6].schema(), other.orgId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.requestMethod)) {
        this.requestMethod = data().deepCopy(fields()[7].schema(), other.requestMethod);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.type)) {
        this.type = data().deepCopy(fields()[8].schema(), other.type);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.creationTime)) {
        this.creationTime = data().deepCopy(fields()[9].schema(), other.creationTime);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.scheduleTime)) {
        this.scheduleTime = data().deepCopy(fields()[10].schema(), other.scheduleTime);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.lastScheduleTime)) {
        this.lastScheduleTime = data().deepCopy(fields()[11].schema(), other.lastScheduleTime);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.selectedVechiles)) {
        this.selectedVechiles = data().deepCopy(fields()[12].schema(), other.selectedVechiles);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.totalVechiles)) {
        this.totalVechiles = data().deepCopy(fields()[13].schema(), other.totalVechiles);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.isActive)) {
        this.isActive = data().deepCopy(fields()[14].schema(), other.isActive);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.isWebhookActive)) {
        this.isWebhookActive = data().deepCopy(fields()[15].schema(), other.isWebhookActive);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.mapper)) {
        this.mapper = data().deepCopy(fields()[16].schema(), other.mapper);
        fieldSetFlags()[16] = true;
      }
      if (other.hasMapperBuilder()) {
        this.mapperBuilder = com.fretron.Model.Mapper.newBuilder(other.getMapperBuilder());
      }
      if (isValidValue(fields()[17], other.eventType)) {
        this.eventType = data().deepCopy(fields()[17].schema(), other.eventType);
        fieldSetFlags()[17] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing IntegrationJob instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.IntegrationJob other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.url)) {
        this.url = data().deepCopy(fields()[1].schema(), other.url);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userName)) {
        this.userName = data().deepCopy(fields()[2].schema(), other.userName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.password)) {
        this.password = data().deepCopy(fields()[3].schema(), other.password);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.queryParameters)) {
        this.queryParameters = data().deepCopy(fields()[4].schema(), other.queryParameters);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.headers)) {
        this.headers = data().deepCopy(fields()[5].schema(), other.headers);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.orgId)) {
        this.orgId = data().deepCopy(fields()[6].schema(), other.orgId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.requestMethod)) {
        this.requestMethod = data().deepCopy(fields()[7].schema(), other.requestMethod);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.type)) {
        this.type = data().deepCopy(fields()[8].schema(), other.type);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.creationTime)) {
        this.creationTime = data().deepCopy(fields()[9].schema(), other.creationTime);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.scheduleTime)) {
        this.scheduleTime = data().deepCopy(fields()[10].schema(), other.scheduleTime);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.lastScheduleTime)) {
        this.lastScheduleTime = data().deepCopy(fields()[11].schema(), other.lastScheduleTime);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.selectedVechiles)) {
        this.selectedVechiles = data().deepCopy(fields()[12].schema(), other.selectedVechiles);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.totalVechiles)) {
        this.totalVechiles = data().deepCopy(fields()[13].schema(), other.totalVechiles);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.isActive)) {
        this.isActive = data().deepCopy(fields()[14].schema(), other.isActive);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.isWebhookActive)) {
        this.isWebhookActive = data().deepCopy(fields()[15].schema(), other.isWebhookActive);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.mapper)) {
        this.mapper = data().deepCopy(fields()[16].schema(), other.mapper);
        fieldSetFlags()[16] = true;
      }
      this.mapperBuilder = null;
      if (isValidValue(fields()[17], other.eventType)) {
        this.eventType = data().deepCopy(fields()[17].schema(), other.eventType);
        fieldSetFlags()[17] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'url' field.
      * @return The value.
      */
    public java.lang.String getUrl() {
      return url;
    }

    /**
      * Sets the value of the 'url' field.
      * @param value The value of 'url'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setUrl(java.lang.String value) {
      validate(fields()[1], value);
      this.url = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'url' field has been set.
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'url' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearUrl() {
      url = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'userName' field.
      * @return The value.
      */
    public java.lang.String getUserName() {
      return userName;
    }

    /**
      * Sets the value of the 'userName' field.
      * @param value The value of 'userName'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setUserName(java.lang.String value) {
      validate(fields()[2], value);
      this.userName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'userName' field has been set.
      * @return True if the 'userName' field has been set, false otherwise.
      */
    public boolean hasUserName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'userName' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearUserName() {
      userName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'password' field.
      * @return The value.
      */
    public java.lang.String getPassword() {
      return password;
    }

    /**
      * Sets the value of the 'password' field.
      * @param value The value of 'password'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setPassword(java.lang.String value) {
      validate(fields()[3], value);
      this.password = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'password' field has been set.
      * @return True if the 'password' field has been set, false otherwise.
      */
    public boolean hasPassword() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'password' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearPassword() {
      password = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'queryParameters' field.
      * @return The value.
      */
    public java.lang.String getQueryParameters() {
      return queryParameters;
    }

    /**
      * Sets the value of the 'queryParameters' field.
      * @param value The value of 'queryParameters'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setQueryParameters(java.lang.String value) {
      validate(fields()[4], value);
      this.queryParameters = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'queryParameters' field has been set.
      * @return True if the 'queryParameters' field has been set, false otherwise.
      */
    public boolean hasQueryParameters() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'queryParameters' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearQueryParameters() {
      queryParameters = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'headers' field.
      * @return The value.
      */
    public java.lang.String getHeaders() {
      return headers;
    }

    /**
      * Sets the value of the 'headers' field.
      * @param value The value of 'headers'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setHeaders(java.lang.String value) {
      validate(fields()[5], value);
      this.headers = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'headers' field has been set.
      * @return True if the 'headers' field has been set, false otherwise.
      */
    public boolean hasHeaders() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'headers' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearHeaders() {
      headers = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setOrgId(java.lang.String value) {
      validate(fields()[6], value);
      this.orgId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestMethod' field.
      * @return The value.
      */
    public com.fretron.Model.RequestMethod getRequestMethod() {
      return requestMethod;
    }

    /**
      * Sets the value of the 'requestMethod' field.
      * @param value The value of 'requestMethod'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setRequestMethod(com.fretron.Model.RequestMethod value) {
      validate(fields()[7], value);
      this.requestMethod = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'requestMethod' field has been set.
      * @return True if the 'requestMethod' field has been set, false otherwise.
      */
    public boolean hasRequestMethod() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'requestMethod' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearRequestMethod() {
      requestMethod = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setType(java.lang.String value) {
      validate(fields()[8], value);
      this.type = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearType() {
      type = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'creationTime' field.
      * @return The value.
      */
    public java.lang.Long getCreationTime() {
      return creationTime;
    }

    /**
      * Sets the value of the 'creationTime' field.
      * @param value The value of 'creationTime'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setCreationTime(java.lang.Long value) {
      validate(fields()[9], value);
      this.creationTime = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'creationTime' field has been set.
      * @return True if the 'creationTime' field has been set, false otherwise.
      */
    public boolean hasCreationTime() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'creationTime' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearCreationTime() {
      creationTime = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'scheduleTime' field.
      * @return The value.
      */
    public java.lang.Long getScheduleTime() {
      return scheduleTime;
    }

    /**
      * Sets the value of the 'scheduleTime' field.
      * @param value The value of 'scheduleTime'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setScheduleTime(java.lang.Long value) {
      validate(fields()[10], value);
      this.scheduleTime = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'scheduleTime' field has been set.
      * @return True if the 'scheduleTime' field has been set, false otherwise.
      */
    public boolean hasScheduleTime() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'scheduleTime' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearScheduleTime() {
      scheduleTime = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastScheduleTime' field.
      * @return The value.
      */
    public java.lang.Long getLastScheduleTime() {
      return lastScheduleTime;
    }

    /**
      * Sets the value of the 'lastScheduleTime' field.
      * @param value The value of 'lastScheduleTime'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setLastScheduleTime(java.lang.Long value) {
      validate(fields()[11], value);
      this.lastScheduleTime = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'lastScheduleTime' field has been set.
      * @return True if the 'lastScheduleTime' field has been set, false otherwise.
      */
    public boolean hasLastScheduleTime() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'lastScheduleTime' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearLastScheduleTime() {
      lastScheduleTime = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'selectedVechiles' field.
      * @return The value.
      */
    public java.lang.String getSelectedVechiles() {
      return selectedVechiles;
    }

    /**
      * Sets the value of the 'selectedVechiles' field.
      * @param value The value of 'selectedVechiles'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setSelectedVechiles(java.lang.String value) {
      validate(fields()[12], value);
      this.selectedVechiles = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'selectedVechiles' field has been set.
      * @return True if the 'selectedVechiles' field has been set, false otherwise.
      */
    public boolean hasSelectedVechiles() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'selectedVechiles' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearSelectedVechiles() {
      selectedVechiles = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalVechiles' field.
      * @return The value.
      */
    public java.lang.String getTotalVechiles() {
      return totalVechiles;
    }

    /**
      * Sets the value of the 'totalVechiles' field.
      * @param value The value of 'totalVechiles'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setTotalVechiles(java.lang.String value) {
      validate(fields()[13], value);
      this.totalVechiles = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'totalVechiles' field has been set.
      * @return True if the 'totalVechiles' field has been set, false otherwise.
      */
    public boolean hasTotalVechiles() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'totalVechiles' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearTotalVechiles() {
      totalVechiles = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'isActive' field.
      * @return The value.
      */
    public java.lang.Boolean getIsActive() {
      return isActive;
    }

    /**
      * Sets the value of the 'isActive' field.
      * @param value The value of 'isActive'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setIsActive(boolean value) {
      validate(fields()[14], value);
      this.isActive = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'isActive' field has been set.
      * @return True if the 'isActive' field has been set, false otherwise.
      */
    public boolean hasIsActive() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'isActive' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearIsActive() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'isWebhookActive' field.
      * @return The value.
      */
    public java.lang.Boolean getIsWebhookActive() {
      return isWebhookActive;
    }

    /**
      * Sets the value of the 'isWebhookActive' field.
      * @param value The value of 'isWebhookActive'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setIsWebhookActive(boolean value) {
      validate(fields()[15], value);
      this.isWebhookActive = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'isWebhookActive' field has been set.
      * @return True if the 'isWebhookActive' field has been set, false otherwise.
      */
    public boolean hasIsWebhookActive() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'isWebhookActive' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearIsWebhookActive() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'mapper' field.
      * @return The value.
      */
    public com.fretron.Model.Mapper getMapper() {
      return mapper;
    }

    /**
      * Sets the value of the 'mapper' field.
      * @param value The value of 'mapper'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setMapper(com.fretron.Model.Mapper value) {
      validate(fields()[16], value);
      this.mapperBuilder = null;
      this.mapper = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'mapper' field has been set.
      * @return True if the 'mapper' field has been set, false otherwise.
      */
    public boolean hasMapper() {
      return fieldSetFlags()[16];
    }

    /**
     * Gets the Builder instance for the 'mapper' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Mapper.Builder getMapperBuilder() {
      if (mapperBuilder == null) {
        if (hasMapper()) {
          setMapperBuilder(com.fretron.Model.Mapper.newBuilder(mapper));
        } else {
          setMapperBuilder(com.fretron.Model.Mapper.newBuilder());
        }
      }
      return mapperBuilder;
    }

    /**
     * Sets the Builder instance for the 'mapper' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.IntegrationJob.Builder setMapperBuilder(com.fretron.Model.Mapper.Builder value) {
      clearMapper();
      mapperBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'mapper' field has an active Builder instance
     * @return True if the 'mapper' field has an active Builder instance
     */
    public boolean hasMapperBuilder() {
      return mapperBuilder != null;
    }

    /**
      * Clears the value of the 'mapper' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearMapper() {
      mapper = null;
      mapperBuilder = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.String getEventType() {
      return eventType;
    }

    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder setEventType(java.lang.String value) {
      validate(fields()[17], value);
      this.eventType = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public com.fretron.Model.IntegrationJob.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    @Override
    public IntegrationJob build() {
      try {
        IntegrationJob record = new IntegrationJob();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.url = fieldSetFlags()[1] ? this.url : (java.lang.String) defaultValue(fields()[1]);
        record.userName = fieldSetFlags()[2] ? this.userName : (java.lang.String) defaultValue(fields()[2]);
        record.password = fieldSetFlags()[3] ? this.password : (java.lang.String) defaultValue(fields()[3]);
        record.queryParameters = fieldSetFlags()[4] ? this.queryParameters : (java.lang.String) defaultValue(fields()[4]);
        record.headers = fieldSetFlags()[5] ? this.headers : (java.lang.String) defaultValue(fields()[5]);
        record.orgId = fieldSetFlags()[6] ? this.orgId : (java.lang.String) defaultValue(fields()[6]);
        record.requestMethod = fieldSetFlags()[7] ? this.requestMethod : (com.fretron.Model.RequestMethod) defaultValue(fields()[7]);
        record.type = fieldSetFlags()[8] ? this.type : (java.lang.String) defaultValue(fields()[8]);
        record.creationTime = fieldSetFlags()[9] ? this.creationTime : (java.lang.Long) defaultValue(fields()[9]);
        record.scheduleTime = fieldSetFlags()[10] ? this.scheduleTime : (java.lang.Long) defaultValue(fields()[10]);
        record.lastScheduleTime = fieldSetFlags()[11] ? this.lastScheduleTime : (java.lang.Long) defaultValue(fields()[11]);
        record.selectedVechiles = fieldSetFlags()[12] ? this.selectedVechiles : (java.lang.String) defaultValue(fields()[12]);
        record.totalVechiles = fieldSetFlags()[13] ? this.totalVechiles : (java.lang.String) defaultValue(fields()[13]);
        record.isActive = fieldSetFlags()[14] ? this.isActive : (java.lang.Boolean) defaultValue(fields()[14]);
        record.isWebhookActive = fieldSetFlags()[15] ? this.isWebhookActive : (java.lang.Boolean) defaultValue(fields()[15]);
        if (mapperBuilder != null) {
          record.mapper = this.mapperBuilder.build();
        } else {
          record.mapper = fieldSetFlags()[16] ? this.mapper : (com.fretron.Model.Mapper) defaultValue(fields()[16]);
        }
        record.eventType = fieldSetFlags()[17] ? this.eventType : (java.lang.String) defaultValue(fields()[17]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

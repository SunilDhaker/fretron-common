/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FleetInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5504729885604041906L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FleetInfo\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"vehicle\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vehicle\",\"fields\":[{\"name\":\"customerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleModel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleMake\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vtsDeviceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"vehicleRegistrationNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"associatedWith\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isDeleted\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"updateTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"groups\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sharedWith\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"driverId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"attachedDocs\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isTrackingEnabled\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"groupsExtended\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrganisationGroup\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"groupName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"groupType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sharedWith\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}}],\"default\":null},{\"name\":\"truckLength\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"loadCapacity\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"floorType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"kmDriven\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"mileageLoaded\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"mileageEmpty\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"driver\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Driver\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dlNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dlExpiryTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"attachedDocs\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pincode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vehicleRegistrationNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"mobileNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}],\"default\":null},{\"name\":\"device\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Device\",\"fields\":[{\"name\":\"imei\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"manufacturerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"isAssociated\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isDeleted\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"updateTime\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"groups\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sharedWith\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"isSuspended\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"usedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"attachedResourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"attachedResourceNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"fleetType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fleetOwner\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BuisnessPartner\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fretronId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"geoFence\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoJsonFence\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Properties\",\"fields\":[{\"name\":\"catagory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"level\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customeFields\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hubId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"district\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subDistrict\",\"type\":[\"null\",","{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isOwned\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"geometry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geometry\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"coordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null}]}],\"default\":null},{\"name\":\"metadata\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MetaData\",\"fields\":[{\"name\":\"clazz\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isFavorite\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"places\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Place\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"center\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}],\"default\":null},{\"name\":\"centerCoordinates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}],\"default\":null},{\"name\":\"suggestedRadius\",\"type\":\"double\",\"default\":null},{\"name\":\"viewport\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ViewPort\",\"fields\":[{\"name\":\"northeast\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"southwest\",\"type\":[\"null\",\"Location\"],\"default\":null}]}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"placeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hubId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"district\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subDistrict\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"boundary\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}],\"default\":null},{\"name\":\"places\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Place\"}],\"default\":null},{\"name\":\"accessibility\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isOwned\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"geoJsonBoundry\",\"type\":[\"null\",\"Geometry\"],\"default\":null}]}}],\"default\":null},{\"name\":\"contacts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Contact\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"emails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"mobileNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",\"Location\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isPortalEnabled\",\"type\":\"boolean\",\"default\":false},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"trackingMode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"trainInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TrainInfo\",\"fields\":[{\"name\":\"rrNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"lbsNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"forwardingAgent\",\"type\":[\"null\",\"BuisnessPartner\"],\"default\":null},{\"name\":\"broker\",\"type\":[\"null\",\"BuisnessPartner\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.fretron.Model.Vehicle vehicle;
  @Deprecated public com.fretron.Model.Driver driver;
  @Deprecated public com.fretron.Model.Device device;
  @Deprecated public java.lang.String fleetType;
  @Deprecated public com.fretron.Model.BuisnessPartner fleetOwner;
  @Deprecated public java.lang.String trackingMode;
  @Deprecated public com.fretron.Model.TrainInfo trainInfo;
  @Deprecated public java.lang.String lbsNumber;
  @Deprecated public com.fretron.Model.BuisnessPartner forwardingAgent;
  @Deprecated public com.fretron.Model.BuisnessPartner broker;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FleetInfo() {}

  /**
   * All-args constructor.
   * @param vehicle The new value for vehicle
   * @param driver The new value for driver
   * @param device The new value for device
   * @param fleetType The new value for fleetType
   * @param fleetOwner The new value for fleetOwner
   * @param trackingMode The new value for trackingMode
   * @param trainInfo The new value for trainInfo
   * @param lbsNumber The new value for lbsNumber
   * @param forwardingAgent The new value for forwardingAgent
   * @param broker The new value for broker
   */
  public FleetInfo(com.fretron.Model.Vehicle vehicle, com.fretron.Model.Driver driver, com.fretron.Model.Device device, java.lang.String fleetType, com.fretron.Model.BuisnessPartner fleetOwner, java.lang.String trackingMode, com.fretron.Model.TrainInfo trainInfo, java.lang.String lbsNumber, com.fretron.Model.BuisnessPartner forwardingAgent, com.fretron.Model.BuisnessPartner broker) {
    this.vehicle = vehicle;
    this.driver = driver;
    this.device = device;
    this.fleetType = fleetType;
    this.fleetOwner = fleetOwner;
    this.trackingMode = trackingMode;
    this.trainInfo = trainInfo;
    this.lbsNumber = lbsNumber;
    this.forwardingAgent = forwardingAgent;
    this.broker = broker;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return vehicle;
    case 1: return driver;
    case 2: return device;
    case 3: return fleetType;
    case 4: return fleetOwner;
    case 5: return trackingMode;
    case 6: return trainInfo;
    case 7: return lbsNumber;
    case 8: return forwardingAgent;
    case 9: return broker;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: vehicle = (com.fretron.Model.Vehicle)value$; break;
    case 1: driver = (com.fretron.Model.Driver)value$; break;
    case 2: device = (com.fretron.Model.Device)value$; break;
    case 3: fleetType = (java.lang.String)value$; break;
    case 4: fleetOwner = (com.fretron.Model.BuisnessPartner)value$; break;
    case 5: trackingMode = (java.lang.String)value$; break;
    case 6: trainInfo = (com.fretron.Model.TrainInfo)value$; break;
    case 7: lbsNumber = (java.lang.String)value$; break;
    case 8: forwardingAgent = (com.fretron.Model.BuisnessPartner)value$; break;
    case 9: broker = (com.fretron.Model.BuisnessPartner)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'vehicle' field.
   * @return The value of the 'vehicle' field.
   */
  public com.fretron.Model.Vehicle getVehicle() {
    return vehicle;
  }

  /**
   * Sets the value of the 'vehicle' field.
   * @param value the value to set.
   */
  public void setVehicle(com.fretron.Model.Vehicle value) {
    this.vehicle = value;
  }

  /**
   * Gets the value of the 'driver' field.
   * @return The value of the 'driver' field.
   */
  public com.fretron.Model.Driver getDriver() {
    return driver;
  }

  /**
   * Sets the value of the 'driver' field.
   * @param value the value to set.
   */
  public void setDriver(com.fretron.Model.Driver value) {
    this.driver = value;
  }

  /**
   * Gets the value of the 'device' field.
   * @return The value of the 'device' field.
   */
  public com.fretron.Model.Device getDevice() {
    return device;
  }

  /**
   * Sets the value of the 'device' field.
   * @param value the value to set.
   */
  public void setDevice(com.fretron.Model.Device value) {
    this.device = value;
  }

  /**
   * Gets the value of the 'fleetType' field.
   * @return The value of the 'fleetType' field.
   */
  public java.lang.String getFleetType() {
    return fleetType;
  }

  /**
   * Sets the value of the 'fleetType' field.
   * @param value the value to set.
   */
  public void setFleetType(java.lang.String value) {
    this.fleetType = value;
  }

  /**
   * Gets the value of the 'fleetOwner' field.
   * @return The value of the 'fleetOwner' field.
   */
  public com.fretron.Model.BuisnessPartner getFleetOwner() {
    return fleetOwner;
  }

  /**
   * Sets the value of the 'fleetOwner' field.
   * @param value the value to set.
   */
  public void setFleetOwner(com.fretron.Model.BuisnessPartner value) {
    this.fleetOwner = value;
  }

  /**
   * Gets the value of the 'trackingMode' field.
   * @return The value of the 'trackingMode' field.
   */
  public java.lang.String getTrackingMode() {
    return trackingMode;
  }

  /**
   * Sets the value of the 'trackingMode' field.
   * @param value the value to set.
   */
  public void setTrackingMode(java.lang.String value) {
    this.trackingMode = value;
  }

  /**
   * Gets the value of the 'trainInfo' field.
   * @return The value of the 'trainInfo' field.
   */
  public com.fretron.Model.TrainInfo getTrainInfo() {
    return trainInfo;
  }

  /**
   * Sets the value of the 'trainInfo' field.
   * @param value the value to set.
   */
  public void setTrainInfo(com.fretron.Model.TrainInfo value) {
    this.trainInfo = value;
  }

  /**
   * Gets the value of the 'lbsNumber' field.
   * @return The value of the 'lbsNumber' field.
   */
  public java.lang.String getLbsNumber() {
    return lbsNumber;
  }

  /**
   * Sets the value of the 'lbsNumber' field.
   * @param value the value to set.
   */
  public void setLbsNumber(java.lang.String value) {
    this.lbsNumber = value;
  }

  /**
   * Gets the value of the 'forwardingAgent' field.
   * @return The value of the 'forwardingAgent' field.
   */
  public com.fretron.Model.BuisnessPartner getForwardingAgent() {
    return forwardingAgent;
  }

  /**
   * Sets the value of the 'forwardingAgent' field.
   * @param value the value to set.
   */
  public void setForwardingAgent(com.fretron.Model.BuisnessPartner value) {
    this.forwardingAgent = value;
  }

  /**
   * Gets the value of the 'broker' field.
   * @return The value of the 'broker' field.
   */
  public com.fretron.Model.BuisnessPartner getBroker() {
    return broker;
  }

  /**
   * Sets the value of the 'broker' field.
   * @param value the value to set.
   */
  public void setBroker(com.fretron.Model.BuisnessPartner value) {
    this.broker = value;
  }

  /**
   * Creates a new FleetInfo RecordBuilder.
   * @return A new FleetInfo RecordBuilder
   */
  public static com.fretron.Model.FleetInfo.Builder newBuilder() {
    return new com.fretron.Model.FleetInfo.Builder();
  }

  /**
   * Creates a new FleetInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FleetInfo RecordBuilder
   */
  public static com.fretron.Model.FleetInfo.Builder newBuilder(com.fretron.Model.FleetInfo.Builder other) {
    return new com.fretron.Model.FleetInfo.Builder(other);
  }

  /**
   * Creates a new FleetInfo RecordBuilder by copying an existing FleetInfo instance.
   * @param other The existing instance to copy.
   * @return A new FleetInfo RecordBuilder
   */
  public static com.fretron.Model.FleetInfo.Builder newBuilder(com.fretron.Model.FleetInfo other) {
    return new com.fretron.Model.FleetInfo.Builder(other);
  }

  /**
   * RecordBuilder for FleetInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FleetInfo>
    implements org.apache.avro.data.RecordBuilder<FleetInfo> {

    private com.fretron.Model.Vehicle vehicle;
    private com.fretron.Model.Vehicle.Builder vehicleBuilder;
    private com.fretron.Model.Driver driver;
    private com.fretron.Model.Driver.Builder driverBuilder;
    private com.fretron.Model.Device device;
    private com.fretron.Model.Device.Builder deviceBuilder;
    private java.lang.String fleetType;
    private com.fretron.Model.BuisnessPartner fleetOwner;
    private com.fretron.Model.BuisnessPartner.Builder fleetOwnerBuilder;
    private java.lang.String trackingMode;
    private com.fretron.Model.TrainInfo trainInfo;
    private com.fretron.Model.TrainInfo.Builder trainInfoBuilder;
    private java.lang.String lbsNumber;
    private com.fretron.Model.BuisnessPartner forwardingAgent;
    private com.fretron.Model.BuisnessPartner.Builder forwardingAgentBuilder;
    private com.fretron.Model.BuisnessPartner broker;
    private com.fretron.Model.BuisnessPartner.Builder brokerBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.FleetInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.vehicle)) {
        this.vehicle = data().deepCopy(fields()[0].schema(), other.vehicle);
        fieldSetFlags()[0] = true;
      }
      if (other.hasVehicleBuilder()) {
        this.vehicleBuilder = com.fretron.Model.Vehicle.newBuilder(other.getVehicleBuilder());
      }
      if (isValidValue(fields()[1], other.driver)) {
        this.driver = data().deepCopy(fields()[1].schema(), other.driver);
        fieldSetFlags()[1] = true;
      }
      if (other.hasDriverBuilder()) {
        this.driverBuilder = com.fretron.Model.Driver.newBuilder(other.getDriverBuilder());
      }
      if (isValidValue(fields()[2], other.device)) {
        this.device = data().deepCopy(fields()[2].schema(), other.device);
        fieldSetFlags()[2] = true;
      }
      if (other.hasDeviceBuilder()) {
        this.deviceBuilder = com.fretron.Model.Device.newBuilder(other.getDeviceBuilder());
      }
      if (isValidValue(fields()[3], other.fleetType)) {
        this.fleetType = data().deepCopy(fields()[3].schema(), other.fleetType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fleetOwner)) {
        this.fleetOwner = data().deepCopy(fields()[4].schema(), other.fleetOwner);
        fieldSetFlags()[4] = true;
      }
      if (other.hasFleetOwnerBuilder()) {
        this.fleetOwnerBuilder = com.fretron.Model.BuisnessPartner.newBuilder(other.getFleetOwnerBuilder());
      }
      if (isValidValue(fields()[5], other.trackingMode)) {
        this.trackingMode = data().deepCopy(fields()[5].schema(), other.trackingMode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.trainInfo)) {
        this.trainInfo = data().deepCopy(fields()[6].schema(), other.trainInfo);
        fieldSetFlags()[6] = true;
      }
      if (other.hasTrainInfoBuilder()) {
        this.trainInfoBuilder = com.fretron.Model.TrainInfo.newBuilder(other.getTrainInfoBuilder());
      }
      if (isValidValue(fields()[7], other.lbsNumber)) {
        this.lbsNumber = data().deepCopy(fields()[7].schema(), other.lbsNumber);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.forwardingAgent)) {
        this.forwardingAgent = data().deepCopy(fields()[8].schema(), other.forwardingAgent);
        fieldSetFlags()[8] = true;
      }
      if (other.hasForwardingAgentBuilder()) {
        this.forwardingAgentBuilder = com.fretron.Model.BuisnessPartner.newBuilder(other.getForwardingAgentBuilder());
      }
      if (isValidValue(fields()[9], other.broker)) {
        this.broker = data().deepCopy(fields()[9].schema(), other.broker);
        fieldSetFlags()[9] = true;
      }
      if (other.hasBrokerBuilder()) {
        this.brokerBuilder = com.fretron.Model.BuisnessPartner.newBuilder(other.getBrokerBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing FleetInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.FleetInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.vehicle)) {
        this.vehicle = data().deepCopy(fields()[0].schema(), other.vehicle);
        fieldSetFlags()[0] = true;
      }
      this.vehicleBuilder = null;
      if (isValidValue(fields()[1], other.driver)) {
        this.driver = data().deepCopy(fields()[1].schema(), other.driver);
        fieldSetFlags()[1] = true;
      }
      this.driverBuilder = null;
      if (isValidValue(fields()[2], other.device)) {
        this.device = data().deepCopy(fields()[2].schema(), other.device);
        fieldSetFlags()[2] = true;
      }
      this.deviceBuilder = null;
      if (isValidValue(fields()[3], other.fleetType)) {
        this.fleetType = data().deepCopy(fields()[3].schema(), other.fleetType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fleetOwner)) {
        this.fleetOwner = data().deepCopy(fields()[4].schema(), other.fleetOwner);
        fieldSetFlags()[4] = true;
      }
      this.fleetOwnerBuilder = null;
      if (isValidValue(fields()[5], other.trackingMode)) {
        this.trackingMode = data().deepCopy(fields()[5].schema(), other.trackingMode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.trainInfo)) {
        this.trainInfo = data().deepCopy(fields()[6].schema(), other.trainInfo);
        fieldSetFlags()[6] = true;
      }
      this.trainInfoBuilder = null;
      if (isValidValue(fields()[7], other.lbsNumber)) {
        this.lbsNumber = data().deepCopy(fields()[7].schema(), other.lbsNumber);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.forwardingAgent)) {
        this.forwardingAgent = data().deepCopy(fields()[8].schema(), other.forwardingAgent);
        fieldSetFlags()[8] = true;
      }
      this.forwardingAgentBuilder = null;
      if (isValidValue(fields()[9], other.broker)) {
        this.broker = data().deepCopy(fields()[9].schema(), other.broker);
        fieldSetFlags()[9] = true;
      }
      this.brokerBuilder = null;
    }

    /**
      * Gets the value of the 'vehicle' field.
      * @return The value.
      */
    public com.fretron.Model.Vehicle getVehicle() {
      return vehicle;
    }

    /**
      * Sets the value of the 'vehicle' field.
      * @param value The value of 'vehicle'.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder setVehicle(com.fretron.Model.Vehicle value) {
      validate(fields()[0], value);
      this.vehicleBuilder = null;
      this.vehicle = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicle' field has been set.
      * @return True if the 'vehicle' field has been set, false otherwise.
      */
    public boolean hasVehicle() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'vehicle' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Vehicle.Builder getVehicleBuilder() {
      if (vehicleBuilder == null) {
        if (hasVehicle()) {
          setVehicleBuilder(com.fretron.Model.Vehicle.newBuilder(vehicle));
        } else {
          setVehicleBuilder(com.fretron.Model.Vehicle.newBuilder());
        }
      }
      return vehicleBuilder;
    }

    /**
     * Sets the Builder instance for the 'vehicle' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FleetInfo.Builder setVehicleBuilder(com.fretron.Model.Vehicle.Builder value) {
      clearVehicle();
      vehicleBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'vehicle' field has an active Builder instance
     * @return True if the 'vehicle' field has an active Builder instance
     */
    public boolean hasVehicleBuilder() {
      return vehicleBuilder != null;
    }

    /**
      * Clears the value of the 'vehicle' field.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder clearVehicle() {
      vehicle = null;
      vehicleBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'driver' field.
      * @return The value.
      */
    public com.fretron.Model.Driver getDriver() {
      return driver;
    }

    /**
      * Sets the value of the 'driver' field.
      * @param value The value of 'driver'.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder setDriver(com.fretron.Model.Driver value) {
      validate(fields()[1], value);
      this.driverBuilder = null;
      this.driver = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'driver' field has been set.
      * @return True if the 'driver' field has been set, false otherwise.
      */
    public boolean hasDriver() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'driver' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Driver.Builder getDriverBuilder() {
      if (driverBuilder == null) {
        if (hasDriver()) {
          setDriverBuilder(com.fretron.Model.Driver.newBuilder(driver));
        } else {
          setDriverBuilder(com.fretron.Model.Driver.newBuilder());
        }
      }
      return driverBuilder;
    }

    /**
     * Sets the Builder instance for the 'driver' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FleetInfo.Builder setDriverBuilder(com.fretron.Model.Driver.Builder value) {
      clearDriver();
      driverBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'driver' field has an active Builder instance
     * @return True if the 'driver' field has an active Builder instance
     */
    public boolean hasDriverBuilder() {
      return driverBuilder != null;
    }

    /**
      * Clears the value of the 'driver' field.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder clearDriver() {
      driver = null;
      driverBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'device' field.
      * @return The value.
      */
    public com.fretron.Model.Device getDevice() {
      return device;
    }

    /**
      * Sets the value of the 'device' field.
      * @param value The value of 'device'.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder setDevice(com.fretron.Model.Device value) {
      validate(fields()[2], value);
      this.deviceBuilder = null;
      this.device = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'device' field has been set.
      * @return True if the 'device' field has been set, false otherwise.
      */
    public boolean hasDevice() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'device' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.Device.Builder getDeviceBuilder() {
      if (deviceBuilder == null) {
        if (hasDevice()) {
          setDeviceBuilder(com.fretron.Model.Device.newBuilder(device));
        } else {
          setDeviceBuilder(com.fretron.Model.Device.newBuilder());
        }
      }
      return deviceBuilder;
    }

    /**
     * Sets the Builder instance for the 'device' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FleetInfo.Builder setDeviceBuilder(com.fretron.Model.Device.Builder value) {
      clearDevice();
      deviceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'device' field has an active Builder instance
     * @return True if the 'device' field has an active Builder instance
     */
    public boolean hasDeviceBuilder() {
      return deviceBuilder != null;
    }

    /**
      * Clears the value of the 'device' field.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder clearDevice() {
      device = null;
      deviceBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'fleetType' field.
      * @return The value.
      */
    public java.lang.String getFleetType() {
      return fleetType;
    }

    /**
      * Sets the value of the 'fleetType' field.
      * @param value The value of 'fleetType'.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder setFleetType(java.lang.String value) {
      validate(fields()[3], value);
      this.fleetType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'fleetType' field has been set.
      * @return True if the 'fleetType' field has been set, false otherwise.
      */
    public boolean hasFleetType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'fleetType' field.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder clearFleetType() {
      fleetType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'fleetOwner' field.
      * @return The value.
      */
    public com.fretron.Model.BuisnessPartner getFleetOwner() {
      return fleetOwner;
    }

    /**
      * Sets the value of the 'fleetOwner' field.
      * @param value The value of 'fleetOwner'.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder setFleetOwner(com.fretron.Model.BuisnessPartner value) {
      validate(fields()[4], value);
      this.fleetOwnerBuilder = null;
      this.fleetOwner = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'fleetOwner' field has been set.
      * @return True if the 'fleetOwner' field has been set, false otherwise.
      */
    public boolean hasFleetOwner() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'fleetOwner' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.BuisnessPartner.Builder getFleetOwnerBuilder() {
      if (fleetOwnerBuilder == null) {
        if (hasFleetOwner()) {
          setFleetOwnerBuilder(com.fretron.Model.BuisnessPartner.newBuilder(fleetOwner));
        } else {
          setFleetOwnerBuilder(com.fretron.Model.BuisnessPartner.newBuilder());
        }
      }
      return fleetOwnerBuilder;
    }

    /**
     * Sets the Builder instance for the 'fleetOwner' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FleetInfo.Builder setFleetOwnerBuilder(com.fretron.Model.BuisnessPartner.Builder value) {
      clearFleetOwner();
      fleetOwnerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'fleetOwner' field has an active Builder instance
     * @return True if the 'fleetOwner' field has an active Builder instance
     */
    public boolean hasFleetOwnerBuilder() {
      return fleetOwnerBuilder != null;
    }

    /**
      * Clears the value of the 'fleetOwner' field.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder clearFleetOwner() {
      fleetOwner = null;
      fleetOwnerBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'trackingMode' field.
      * @return The value.
      */
    public java.lang.String getTrackingMode() {
      return trackingMode;
    }

    /**
      * Sets the value of the 'trackingMode' field.
      * @param value The value of 'trackingMode'.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder setTrackingMode(java.lang.String value) {
      validate(fields()[5], value);
      this.trackingMode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'trackingMode' field has been set.
      * @return True if the 'trackingMode' field has been set, false otherwise.
      */
    public boolean hasTrackingMode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'trackingMode' field.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder clearTrackingMode() {
      trackingMode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'trainInfo' field.
      * @return The value.
      */
    public com.fretron.Model.TrainInfo getTrainInfo() {
      return trainInfo;
    }

    /**
      * Sets the value of the 'trainInfo' field.
      * @param value The value of 'trainInfo'.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder setTrainInfo(com.fretron.Model.TrainInfo value) {
      validate(fields()[6], value);
      this.trainInfoBuilder = null;
      this.trainInfo = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'trainInfo' field has been set.
      * @return True if the 'trainInfo' field has been set, false otherwise.
      */
    public boolean hasTrainInfo() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'trainInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.TrainInfo.Builder getTrainInfoBuilder() {
      if (trainInfoBuilder == null) {
        if (hasTrainInfo()) {
          setTrainInfoBuilder(com.fretron.Model.TrainInfo.newBuilder(trainInfo));
        } else {
          setTrainInfoBuilder(com.fretron.Model.TrainInfo.newBuilder());
        }
      }
      return trainInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'trainInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FleetInfo.Builder setTrainInfoBuilder(com.fretron.Model.TrainInfo.Builder value) {
      clearTrainInfo();
      trainInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'trainInfo' field has an active Builder instance
     * @return True if the 'trainInfo' field has an active Builder instance
     */
    public boolean hasTrainInfoBuilder() {
      return trainInfoBuilder != null;
    }

    /**
      * Clears the value of the 'trainInfo' field.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder clearTrainInfo() {
      trainInfo = null;
      trainInfoBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'lbsNumber' field.
      * @return The value.
      */
    public java.lang.String getLbsNumber() {
      return lbsNumber;
    }

    /**
      * Sets the value of the 'lbsNumber' field.
      * @param value The value of 'lbsNumber'.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder setLbsNumber(java.lang.String value) {
      validate(fields()[7], value);
      this.lbsNumber = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'lbsNumber' field has been set.
      * @return True if the 'lbsNumber' field has been set, false otherwise.
      */
    public boolean hasLbsNumber() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'lbsNumber' field.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder clearLbsNumber() {
      lbsNumber = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'forwardingAgent' field.
      * @return The value.
      */
    public com.fretron.Model.BuisnessPartner getForwardingAgent() {
      return forwardingAgent;
    }

    /**
      * Sets the value of the 'forwardingAgent' field.
      * @param value The value of 'forwardingAgent'.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder setForwardingAgent(com.fretron.Model.BuisnessPartner value) {
      validate(fields()[8], value);
      this.forwardingAgentBuilder = null;
      this.forwardingAgent = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'forwardingAgent' field has been set.
      * @return True if the 'forwardingAgent' field has been set, false otherwise.
      */
    public boolean hasForwardingAgent() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'forwardingAgent' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.BuisnessPartner.Builder getForwardingAgentBuilder() {
      if (forwardingAgentBuilder == null) {
        if (hasForwardingAgent()) {
          setForwardingAgentBuilder(com.fretron.Model.BuisnessPartner.newBuilder(forwardingAgent));
        } else {
          setForwardingAgentBuilder(com.fretron.Model.BuisnessPartner.newBuilder());
        }
      }
      return forwardingAgentBuilder;
    }

    /**
     * Sets the Builder instance for the 'forwardingAgent' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FleetInfo.Builder setForwardingAgentBuilder(com.fretron.Model.BuisnessPartner.Builder value) {
      clearForwardingAgent();
      forwardingAgentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'forwardingAgent' field has an active Builder instance
     * @return True if the 'forwardingAgent' field has an active Builder instance
     */
    public boolean hasForwardingAgentBuilder() {
      return forwardingAgentBuilder != null;
    }

    /**
      * Clears the value of the 'forwardingAgent' field.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder clearForwardingAgent() {
      forwardingAgent = null;
      forwardingAgentBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'broker' field.
      * @return The value.
      */
    public com.fretron.Model.BuisnessPartner getBroker() {
      return broker;
    }

    /**
      * Sets the value of the 'broker' field.
      * @param value The value of 'broker'.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder setBroker(com.fretron.Model.BuisnessPartner value) {
      validate(fields()[9], value);
      this.brokerBuilder = null;
      this.broker = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'broker' field has been set.
      * @return True if the 'broker' field has been set, false otherwise.
      */
    public boolean hasBroker() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'broker' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.BuisnessPartner.Builder getBrokerBuilder() {
      if (brokerBuilder == null) {
        if (hasBroker()) {
          setBrokerBuilder(com.fretron.Model.BuisnessPartner.newBuilder(broker));
        } else {
          setBrokerBuilder(com.fretron.Model.BuisnessPartner.newBuilder());
        }
      }
      return brokerBuilder;
    }

    /**
     * Sets the Builder instance for the 'broker' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.FleetInfo.Builder setBrokerBuilder(com.fretron.Model.BuisnessPartner.Builder value) {
      clearBroker();
      brokerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'broker' field has an active Builder instance
     * @return True if the 'broker' field has an active Builder instance
     */
    public boolean hasBrokerBuilder() {
      return brokerBuilder != null;
    }

    /**
      * Clears the value of the 'broker' field.
      * @return This builder.
      */
    public com.fretron.Model.FleetInfo.Builder clearBroker() {
      broker = null;
      brokerBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public FleetInfo build() {
      try {
        FleetInfo record = new FleetInfo();
        if (vehicleBuilder != null) {
          record.vehicle = this.vehicleBuilder.build();
        } else {
          record.vehicle = fieldSetFlags()[0] ? this.vehicle : (com.fretron.Model.Vehicle) defaultValue(fields()[0]);
        }
        if (driverBuilder != null) {
          record.driver = this.driverBuilder.build();
        } else {
          record.driver = fieldSetFlags()[1] ? this.driver : (com.fretron.Model.Driver) defaultValue(fields()[1]);
        }
        if (deviceBuilder != null) {
          record.device = this.deviceBuilder.build();
        } else {
          record.device = fieldSetFlags()[2] ? this.device : (com.fretron.Model.Device) defaultValue(fields()[2]);
        }
        record.fleetType = fieldSetFlags()[3] ? this.fleetType : (java.lang.String) defaultValue(fields()[3]);
        if (fleetOwnerBuilder != null) {
          record.fleetOwner = this.fleetOwnerBuilder.build();
        } else {
          record.fleetOwner = fieldSetFlags()[4] ? this.fleetOwner : (com.fretron.Model.BuisnessPartner) defaultValue(fields()[4]);
        }
        record.trackingMode = fieldSetFlags()[5] ? this.trackingMode : (java.lang.String) defaultValue(fields()[5]);
        if (trainInfoBuilder != null) {
          record.trainInfo = this.trainInfoBuilder.build();
        } else {
          record.trainInfo = fieldSetFlags()[6] ? this.trainInfo : (com.fretron.Model.TrainInfo) defaultValue(fields()[6]);
        }
        record.lbsNumber = fieldSetFlags()[7] ? this.lbsNumber : (java.lang.String) defaultValue(fields()[7]);
        if (forwardingAgentBuilder != null) {
          record.forwardingAgent = this.forwardingAgentBuilder.build();
        } else {
          record.forwardingAgent = fieldSetFlags()[8] ? this.forwardingAgent : (com.fretron.Model.BuisnessPartner) defaultValue(fields()[8]);
        }
        if (brokerBuilder != null) {
          record.broker = this.brokerBuilder.build();
        } else {
          record.broker = fieldSetFlags()[9] ? this.broker : (com.fretron.Model.BuisnessPartner) defaultValue(fields()[9]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

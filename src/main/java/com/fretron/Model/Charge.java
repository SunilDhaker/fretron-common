/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fretron.Model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Charge extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1718130265713086568L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Charge\",\"namespace\":\"com.fretron.Model\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isCalculated\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"rate\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"rateUnit\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"baseValue\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"baseValueRule\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"chartsOfAccount\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ChartsOfAccountLite\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accountGroup\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"accountPath\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}],\"default\":null},{\"name\":\"chargeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"postingType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"applicableFor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billingType\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"roundingRule\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"postingNature\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"allowedServices\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Materials\",\"fields\":[{\"name\":\"uuid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orgId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"measurementType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"unitOfMeasurement\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pricePerUnit\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"updates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Updates\",\"fields\":[{\"name\":\"forwardReasons\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"updatedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfInformation\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updateType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"forwardedFrom\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"revision\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"traceID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"changes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ChangeUpdate\",\"fields\":[{\"name\":\"currentValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null}]}],\"default\":null},{\"name\":\"materialType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"materialGroup\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"controlCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"division\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"taxCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"partnerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"linkedMaterialId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"materialGroupId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"materialDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"partnerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"measuredQuantity\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"companyCodes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}}],\"default\":null},{\"name\":\"gmLevel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"arAPChargeType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ResourceInfo\",\"fields\":[{\"name\":\"resourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"resourceIdentifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"reimbursementChargeType\",\"type\":[\"null\",\"ResourceInfo\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String orgId;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.Boolean isCalculated;
  @Deprecated public java.lang.Double rate;
  @Deprecated public java.lang.String rateUnit;
  @Deprecated public java.lang.Double amount;
  @Deprecated public java.lang.Double baseValue;
  @Deprecated public java.lang.String baseValueRule;
  @Deprecated public java.lang.String status;
  @Deprecated public com.fretron.Model.ChartsOfAccountLite chartsOfAccount;
  @Deprecated public java.lang.String chargeCode;
  @Deprecated public java.lang.String postingType;
  @Deprecated public java.lang.String category;
  @Deprecated public java.lang.String applicableFor;
  @Deprecated public java.util.List<java.lang.String> billingType;
  @Deprecated public java.lang.String roundingRule;
  @Deprecated public java.lang.String postingNature;
  @Deprecated public java.util.List<com.fretron.Model.Materials> allowedServices;
  @Deprecated public java.lang.String gmLevel;
  @Deprecated public com.fretron.Model.ResourceInfo arAPChargeType;
  @Deprecated public com.fretron.Model.ResourceInfo reimbursementChargeType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Charge() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param orgId The new value for orgId
   * @param name The new value for name
   * @param isCalculated The new value for isCalculated
   * @param rate The new value for rate
   * @param rateUnit The new value for rateUnit
   * @param amount The new value for amount
   * @param baseValue The new value for baseValue
   * @param baseValueRule The new value for baseValueRule
   * @param status The new value for status
   * @param chartsOfAccount The new value for chartsOfAccount
   * @param chargeCode The new value for chargeCode
   * @param postingType The new value for postingType
   * @param category The new value for category
   * @param applicableFor The new value for applicableFor
   * @param billingType The new value for billingType
   * @param roundingRule The new value for roundingRule
   * @param postingNature The new value for postingNature
   * @param allowedServices The new value for allowedServices
   * @param gmLevel The new value for gmLevel
   * @param arAPChargeType The new value for arAPChargeType
   * @param reimbursementChargeType The new value for reimbursementChargeType
   */
  public Charge(java.lang.String uuid, java.lang.String orgId, java.lang.String name, java.lang.Boolean isCalculated, java.lang.Double rate, java.lang.String rateUnit, java.lang.Double amount, java.lang.Double baseValue, java.lang.String baseValueRule, java.lang.String status, com.fretron.Model.ChartsOfAccountLite chartsOfAccount, java.lang.String chargeCode, java.lang.String postingType, java.lang.String category, java.lang.String applicableFor, java.util.List<java.lang.String> billingType, java.lang.String roundingRule, java.lang.String postingNature, java.util.List<com.fretron.Model.Materials> allowedServices, java.lang.String gmLevel, com.fretron.Model.ResourceInfo arAPChargeType, com.fretron.Model.ResourceInfo reimbursementChargeType) {
    this.uuid = uuid;
    this.orgId = orgId;
    this.name = name;
    this.isCalculated = isCalculated;
    this.rate = rate;
    this.rateUnit = rateUnit;
    this.amount = amount;
    this.baseValue = baseValue;
    this.baseValueRule = baseValueRule;
    this.status = status;
    this.chartsOfAccount = chartsOfAccount;
    this.chargeCode = chargeCode;
    this.postingType = postingType;
    this.category = category;
    this.applicableFor = applicableFor;
    this.billingType = billingType;
    this.roundingRule = roundingRule;
    this.postingNature = postingNature;
    this.allowedServices = allowedServices;
    this.gmLevel = gmLevel;
    this.arAPChargeType = arAPChargeType;
    this.reimbursementChargeType = reimbursementChargeType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return orgId;
    case 2: return name;
    case 3: return isCalculated;
    case 4: return rate;
    case 5: return rateUnit;
    case 6: return amount;
    case 7: return baseValue;
    case 8: return baseValueRule;
    case 9: return status;
    case 10: return chartsOfAccount;
    case 11: return chargeCode;
    case 12: return postingType;
    case 13: return category;
    case 14: return applicableFor;
    case 15: return billingType;
    case 16: return roundingRule;
    case 17: return postingNature;
    case 18: return allowedServices;
    case 19: return gmLevel;
    case 20: return arAPChargeType;
    case 21: return reimbursementChargeType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: orgId = (java.lang.String)value$; break;
    case 2: name = (java.lang.String)value$; break;
    case 3: isCalculated = (java.lang.Boolean)value$; break;
    case 4: rate = (java.lang.Double)value$; break;
    case 5: rateUnit = (java.lang.String)value$; break;
    case 6: amount = (java.lang.Double)value$; break;
    case 7: baseValue = (java.lang.Double)value$; break;
    case 8: baseValueRule = (java.lang.String)value$; break;
    case 9: status = (java.lang.String)value$; break;
    case 10: chartsOfAccount = (com.fretron.Model.ChartsOfAccountLite)value$; break;
    case 11: chargeCode = (java.lang.String)value$; break;
    case 12: postingType = (java.lang.String)value$; break;
    case 13: category = (java.lang.String)value$; break;
    case 14: applicableFor = (java.lang.String)value$; break;
    case 15: billingType = (java.util.List<java.lang.String>)value$; break;
    case 16: roundingRule = (java.lang.String)value$; break;
    case 17: postingNature = (java.lang.String)value$; break;
    case 18: allowedServices = (java.util.List<com.fretron.Model.Materials>)value$; break;
    case 19: gmLevel = (java.lang.String)value$; break;
    case 20: arAPChargeType = (com.fretron.Model.ResourceInfo)value$; break;
    case 21: reimbursementChargeType = (com.fretron.Model.ResourceInfo)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   * @return The value of the 'orgId' field.
   */
  public java.lang.String getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.String value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'isCalculated' field.
   * @return The value of the 'isCalculated' field.
   */
  public java.lang.Boolean getIsCalculated() {
    return isCalculated;
  }

  /**
   * Sets the value of the 'isCalculated' field.
   * @param value the value to set.
   */
  public void setIsCalculated(java.lang.Boolean value) {
    this.isCalculated = value;
  }

  /**
   * Gets the value of the 'rate' field.
   * @return The value of the 'rate' field.
   */
  public java.lang.Double getRate() {
    return rate;
  }

  /**
   * Sets the value of the 'rate' field.
   * @param value the value to set.
   */
  public void setRate(java.lang.Double value) {
    this.rate = value;
  }

  /**
   * Gets the value of the 'rateUnit' field.
   * @return The value of the 'rateUnit' field.
   */
  public java.lang.String getRateUnit() {
    return rateUnit;
  }

  /**
   * Sets the value of the 'rateUnit' field.
   * @param value the value to set.
   */
  public void setRateUnit(java.lang.String value) {
    this.rateUnit = value;
  }

  /**
   * Gets the value of the 'amount' field.
   * @return The value of the 'amount' field.
   */
  public java.lang.Double getAmount() {
    return amount;
  }

  /**
   * Sets the value of the 'amount' field.
   * @param value the value to set.
   */
  public void setAmount(java.lang.Double value) {
    this.amount = value;
  }

  /**
   * Gets the value of the 'baseValue' field.
   * @return The value of the 'baseValue' field.
   */
  public java.lang.Double getBaseValue() {
    return baseValue;
  }

  /**
   * Sets the value of the 'baseValue' field.
   * @param value the value to set.
   */
  public void setBaseValue(java.lang.Double value) {
    this.baseValue = value;
  }

  /**
   * Gets the value of the 'baseValueRule' field.
   * @return The value of the 'baseValueRule' field.
   */
  public java.lang.String getBaseValueRule() {
    return baseValueRule;
  }

  /**
   * Sets the value of the 'baseValueRule' field.
   * @param value the value to set.
   */
  public void setBaseValueRule(java.lang.String value) {
    this.baseValueRule = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'chartsOfAccount' field.
   * @return The value of the 'chartsOfAccount' field.
   */
  public com.fretron.Model.ChartsOfAccountLite getChartsOfAccount() {
    return chartsOfAccount;
  }

  /**
   * Sets the value of the 'chartsOfAccount' field.
   * @param value the value to set.
   */
  public void setChartsOfAccount(com.fretron.Model.ChartsOfAccountLite value) {
    this.chartsOfAccount = value;
  }

  /**
   * Gets the value of the 'chargeCode' field.
   * @return The value of the 'chargeCode' field.
   */
  public java.lang.String getChargeCode() {
    return chargeCode;
  }

  /**
   * Sets the value of the 'chargeCode' field.
   * @param value the value to set.
   */
  public void setChargeCode(java.lang.String value) {
    this.chargeCode = value;
  }

  /**
   * Gets the value of the 'postingType' field.
   * @return The value of the 'postingType' field.
   */
  public java.lang.String getPostingType() {
    return postingType;
  }

  /**
   * Sets the value of the 'postingType' field.
   * @param value the value to set.
   */
  public void setPostingType(java.lang.String value) {
    this.postingType = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public java.lang.String getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(java.lang.String value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'applicableFor' field.
   * @return The value of the 'applicableFor' field.
   */
  public java.lang.String getApplicableFor() {
    return applicableFor;
  }

  /**
   * Sets the value of the 'applicableFor' field.
   * @param value the value to set.
   */
  public void setApplicableFor(java.lang.String value) {
    this.applicableFor = value;
  }

  /**
   * Gets the value of the 'billingType' field.
   * @return The value of the 'billingType' field.
   */
  public java.util.List<java.lang.String> getBillingType() {
    return billingType;
  }

  /**
   * Sets the value of the 'billingType' field.
   * @param value the value to set.
   */
  public void setBillingType(java.util.List<java.lang.String> value) {
    this.billingType = value;
  }

  /**
   * Gets the value of the 'roundingRule' field.
   * @return The value of the 'roundingRule' field.
   */
  public java.lang.String getRoundingRule() {
    return roundingRule;
  }

  /**
   * Sets the value of the 'roundingRule' field.
   * @param value the value to set.
   */
  public void setRoundingRule(java.lang.String value) {
    this.roundingRule = value;
  }

  /**
   * Gets the value of the 'postingNature' field.
   * @return The value of the 'postingNature' field.
   */
  public java.lang.String getPostingNature() {
    return postingNature;
  }

  /**
   * Sets the value of the 'postingNature' field.
   * @param value the value to set.
   */
  public void setPostingNature(java.lang.String value) {
    this.postingNature = value;
  }

  /**
   * Gets the value of the 'allowedServices' field.
   * @return The value of the 'allowedServices' field.
   */
  public java.util.List<com.fretron.Model.Materials> getAllowedServices() {
    return allowedServices;
  }

  /**
   * Sets the value of the 'allowedServices' field.
   * @param value the value to set.
   */
  public void setAllowedServices(java.util.List<com.fretron.Model.Materials> value) {
    this.allowedServices = value;
  }

  /**
   * Gets the value of the 'gmLevel' field.
   * @return The value of the 'gmLevel' field.
   */
  public java.lang.String getGmLevel() {
    return gmLevel;
  }

  /**
   * Sets the value of the 'gmLevel' field.
   * @param value the value to set.
   */
  public void setGmLevel(java.lang.String value) {
    this.gmLevel = value;
  }

  /**
   * Gets the value of the 'arAPChargeType' field.
   * @return The value of the 'arAPChargeType' field.
   */
  public com.fretron.Model.ResourceInfo getArAPChargeType() {
    return arAPChargeType;
  }

  /**
   * Sets the value of the 'arAPChargeType' field.
   * @param value the value to set.
   */
  public void setArAPChargeType(com.fretron.Model.ResourceInfo value) {
    this.arAPChargeType = value;
  }

  /**
   * Gets the value of the 'reimbursementChargeType' field.
   * @return The value of the 'reimbursementChargeType' field.
   */
  public com.fretron.Model.ResourceInfo getReimbursementChargeType() {
    return reimbursementChargeType;
  }

  /**
   * Sets the value of the 'reimbursementChargeType' field.
   * @param value the value to set.
   */
  public void setReimbursementChargeType(com.fretron.Model.ResourceInfo value) {
    this.reimbursementChargeType = value;
  }

  /**
   * Creates a new Charge RecordBuilder.
   * @return A new Charge RecordBuilder
   */
  public static com.fretron.Model.Charge.Builder newBuilder() {
    return new com.fretron.Model.Charge.Builder();
  }

  /**
   * Creates a new Charge RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Charge RecordBuilder
   */
  public static com.fretron.Model.Charge.Builder newBuilder(com.fretron.Model.Charge.Builder other) {
    return new com.fretron.Model.Charge.Builder(other);
  }

  /**
   * Creates a new Charge RecordBuilder by copying an existing Charge instance.
   * @param other The existing instance to copy.
   * @return A new Charge RecordBuilder
   */
  public static com.fretron.Model.Charge.Builder newBuilder(com.fretron.Model.Charge other) {
    return new com.fretron.Model.Charge.Builder(other);
  }

  /**
   * RecordBuilder for Charge instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Charge>
    implements org.apache.avro.data.RecordBuilder<Charge> {

    private java.lang.String uuid;
    private java.lang.String orgId;
    private java.lang.String name;
    private java.lang.Boolean isCalculated;
    private java.lang.Double rate;
    private java.lang.String rateUnit;
    private java.lang.Double amount;
    private java.lang.Double baseValue;
    private java.lang.String baseValueRule;
    private java.lang.String status;
    private com.fretron.Model.ChartsOfAccountLite chartsOfAccount;
    private com.fretron.Model.ChartsOfAccountLite.Builder chartsOfAccountBuilder;
    private java.lang.String chargeCode;
    private java.lang.String postingType;
    private java.lang.String category;
    private java.lang.String applicableFor;
    private java.util.List<java.lang.String> billingType;
    private java.lang.String roundingRule;
    private java.lang.String postingNature;
    private java.util.List<com.fretron.Model.Materials> allowedServices;
    private java.lang.String gmLevel;
    private com.fretron.Model.ResourceInfo arAPChargeType;
    private com.fretron.Model.ResourceInfo.Builder arAPChargeTypeBuilder;
    private com.fretron.Model.ResourceInfo reimbursementChargeType;
    private com.fretron.Model.ResourceInfo.Builder reimbursementChargeTypeBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fretron.Model.Charge.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgId)) {
        this.orgId = data().deepCopy(fields()[1].schema(), other.orgId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isCalculated)) {
        this.isCalculated = data().deepCopy(fields()[3].schema(), other.isCalculated);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rate)) {
        this.rate = data().deepCopy(fields()[4].schema(), other.rate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.rateUnit)) {
        this.rateUnit = data().deepCopy(fields()[5].schema(), other.rateUnit);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.amount)) {
        this.amount = data().deepCopy(fields()[6].schema(), other.amount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.baseValue)) {
        this.baseValue = data().deepCopy(fields()[7].schema(), other.baseValue);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.baseValueRule)) {
        this.baseValueRule = data().deepCopy(fields()[8].schema(), other.baseValueRule);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.chartsOfAccount)) {
        this.chartsOfAccount = data().deepCopy(fields()[10].schema(), other.chartsOfAccount);
        fieldSetFlags()[10] = true;
      }
      if (other.hasChartsOfAccountBuilder()) {
        this.chartsOfAccountBuilder = com.fretron.Model.ChartsOfAccountLite.newBuilder(other.getChartsOfAccountBuilder());
      }
      if (isValidValue(fields()[11], other.chargeCode)) {
        this.chargeCode = data().deepCopy(fields()[11].schema(), other.chargeCode);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.postingType)) {
        this.postingType = data().deepCopy(fields()[12].schema(), other.postingType);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.category)) {
        this.category = data().deepCopy(fields()[13].schema(), other.category);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.applicableFor)) {
        this.applicableFor = data().deepCopy(fields()[14].schema(), other.applicableFor);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.billingType)) {
        this.billingType = data().deepCopy(fields()[15].schema(), other.billingType);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.roundingRule)) {
        this.roundingRule = data().deepCopy(fields()[16].schema(), other.roundingRule);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.postingNature)) {
        this.postingNature = data().deepCopy(fields()[17].schema(), other.postingNature);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.allowedServices)) {
        this.allowedServices = data().deepCopy(fields()[18].schema(), other.allowedServices);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.gmLevel)) {
        this.gmLevel = data().deepCopy(fields()[19].schema(), other.gmLevel);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.arAPChargeType)) {
        this.arAPChargeType = data().deepCopy(fields()[20].schema(), other.arAPChargeType);
        fieldSetFlags()[20] = true;
      }
      if (other.hasArAPChargeTypeBuilder()) {
        this.arAPChargeTypeBuilder = com.fretron.Model.ResourceInfo.newBuilder(other.getArAPChargeTypeBuilder());
      }
      if (isValidValue(fields()[21], other.reimbursementChargeType)) {
        this.reimbursementChargeType = data().deepCopy(fields()[21].schema(), other.reimbursementChargeType);
        fieldSetFlags()[21] = true;
      }
      if (other.hasReimbursementChargeTypeBuilder()) {
        this.reimbursementChargeTypeBuilder = com.fretron.Model.ResourceInfo.newBuilder(other.getReimbursementChargeTypeBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Charge instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fretron.Model.Charge other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgId)) {
        this.orgId = data().deepCopy(fields()[1].schema(), other.orgId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isCalculated)) {
        this.isCalculated = data().deepCopy(fields()[3].schema(), other.isCalculated);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rate)) {
        this.rate = data().deepCopy(fields()[4].schema(), other.rate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.rateUnit)) {
        this.rateUnit = data().deepCopy(fields()[5].schema(), other.rateUnit);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.amount)) {
        this.amount = data().deepCopy(fields()[6].schema(), other.amount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.baseValue)) {
        this.baseValue = data().deepCopy(fields()[7].schema(), other.baseValue);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.baseValueRule)) {
        this.baseValueRule = data().deepCopy(fields()[8].schema(), other.baseValueRule);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.chartsOfAccount)) {
        this.chartsOfAccount = data().deepCopy(fields()[10].schema(), other.chartsOfAccount);
        fieldSetFlags()[10] = true;
      }
      this.chartsOfAccountBuilder = null;
      if (isValidValue(fields()[11], other.chargeCode)) {
        this.chargeCode = data().deepCopy(fields()[11].schema(), other.chargeCode);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.postingType)) {
        this.postingType = data().deepCopy(fields()[12].schema(), other.postingType);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.category)) {
        this.category = data().deepCopy(fields()[13].schema(), other.category);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.applicableFor)) {
        this.applicableFor = data().deepCopy(fields()[14].schema(), other.applicableFor);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.billingType)) {
        this.billingType = data().deepCopy(fields()[15].schema(), other.billingType);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.roundingRule)) {
        this.roundingRule = data().deepCopy(fields()[16].schema(), other.roundingRule);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.postingNature)) {
        this.postingNature = data().deepCopy(fields()[17].schema(), other.postingNature);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.allowedServices)) {
        this.allowedServices = data().deepCopy(fields()[18].schema(), other.allowedServices);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.gmLevel)) {
        this.gmLevel = data().deepCopy(fields()[19].schema(), other.gmLevel);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.arAPChargeType)) {
        this.arAPChargeType = data().deepCopy(fields()[20].schema(), other.arAPChargeType);
        fieldSetFlags()[20] = true;
      }
      this.arAPChargeTypeBuilder = null;
      if (isValidValue(fields()[21], other.reimbursementChargeType)) {
        this.reimbursementChargeType = data().deepCopy(fields()[21].schema(), other.reimbursementChargeType);
        fieldSetFlags()[21] = true;
      }
      this.reimbursementChargeTypeBuilder = null;
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgId' field.
      * @return The value.
      */
    public java.lang.String getOrgId() {
      return orgId;
    }

    /**
      * Sets the value of the 'orgId' field.
      * @param value The value of 'orgId'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setOrgId(java.lang.String value) {
      validate(fields()[1], value);
      this.orgId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'orgId' field has been set.
      * @return True if the 'orgId' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'orgId' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'isCalculated' field.
      * @return The value.
      */
    public java.lang.Boolean getIsCalculated() {
      return isCalculated;
    }

    /**
      * Sets the value of the 'isCalculated' field.
      * @param value The value of 'isCalculated'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setIsCalculated(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.isCalculated = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'isCalculated' field has been set.
      * @return True if the 'isCalculated' field has been set, false otherwise.
      */
    public boolean hasIsCalculated() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'isCalculated' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearIsCalculated() {
      isCalculated = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'rate' field.
      * @return The value.
      */
    public java.lang.Double getRate() {
      return rate;
    }

    /**
      * Sets the value of the 'rate' field.
      * @param value The value of 'rate'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setRate(java.lang.Double value) {
      validate(fields()[4], value);
      this.rate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'rate' field has been set.
      * @return True if the 'rate' field has been set, false otherwise.
      */
    public boolean hasRate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'rate' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearRate() {
      rate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'rateUnit' field.
      * @return The value.
      */
    public java.lang.String getRateUnit() {
      return rateUnit;
    }

    /**
      * Sets the value of the 'rateUnit' field.
      * @param value The value of 'rateUnit'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setRateUnit(java.lang.String value) {
      validate(fields()[5], value);
      this.rateUnit = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'rateUnit' field has been set.
      * @return True if the 'rateUnit' field has been set, false otherwise.
      */
    public boolean hasRateUnit() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'rateUnit' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearRateUnit() {
      rateUnit = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'amount' field.
      * @return The value.
      */
    public java.lang.Double getAmount() {
      return amount;
    }

    /**
      * Sets the value of the 'amount' field.
      * @param value The value of 'amount'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setAmount(java.lang.Double value) {
      validate(fields()[6], value);
      this.amount = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'amount' field has been set.
      * @return True if the 'amount' field has been set, false otherwise.
      */
    public boolean hasAmount() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'amount' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearAmount() {
      amount = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'baseValue' field.
      * @return The value.
      */
    public java.lang.Double getBaseValue() {
      return baseValue;
    }

    /**
      * Sets the value of the 'baseValue' field.
      * @param value The value of 'baseValue'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setBaseValue(java.lang.Double value) {
      validate(fields()[7], value);
      this.baseValue = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'baseValue' field has been set.
      * @return True if the 'baseValue' field has been set, false otherwise.
      */
    public boolean hasBaseValue() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'baseValue' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearBaseValue() {
      baseValue = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'baseValueRule' field.
      * @return The value.
      */
    public java.lang.String getBaseValueRule() {
      return baseValueRule;
    }

    /**
      * Sets the value of the 'baseValueRule' field.
      * @param value The value of 'baseValueRule'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setBaseValueRule(java.lang.String value) {
      validate(fields()[8], value);
      this.baseValueRule = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'baseValueRule' field has been set.
      * @return True if the 'baseValueRule' field has been set, false otherwise.
      */
    public boolean hasBaseValueRule() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'baseValueRule' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearBaseValueRule() {
      baseValueRule = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setStatus(java.lang.String value) {
      validate(fields()[9], value);
      this.status = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearStatus() {
      status = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'chartsOfAccount' field.
      * @return The value.
      */
    public com.fretron.Model.ChartsOfAccountLite getChartsOfAccount() {
      return chartsOfAccount;
    }

    /**
      * Sets the value of the 'chartsOfAccount' field.
      * @param value The value of 'chartsOfAccount'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setChartsOfAccount(com.fretron.Model.ChartsOfAccountLite value) {
      validate(fields()[10], value);
      this.chartsOfAccountBuilder = null;
      this.chartsOfAccount = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'chartsOfAccount' field has been set.
      * @return True if the 'chartsOfAccount' field has been set, false otherwise.
      */
    public boolean hasChartsOfAccount() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'chartsOfAccount' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.ChartsOfAccountLite.Builder getChartsOfAccountBuilder() {
      if (chartsOfAccountBuilder == null) {
        if (hasChartsOfAccount()) {
          setChartsOfAccountBuilder(com.fretron.Model.ChartsOfAccountLite.newBuilder(chartsOfAccount));
        } else {
          setChartsOfAccountBuilder(com.fretron.Model.ChartsOfAccountLite.newBuilder());
        }
      }
      return chartsOfAccountBuilder;
    }

    /**
     * Sets the Builder instance for the 'chartsOfAccount' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Charge.Builder setChartsOfAccountBuilder(com.fretron.Model.ChartsOfAccountLite.Builder value) {
      clearChartsOfAccount();
      chartsOfAccountBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chartsOfAccount' field has an active Builder instance
     * @return True if the 'chartsOfAccount' field has an active Builder instance
     */
    public boolean hasChartsOfAccountBuilder() {
      return chartsOfAccountBuilder != null;
    }

    /**
      * Clears the value of the 'chartsOfAccount' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearChartsOfAccount() {
      chartsOfAccount = null;
      chartsOfAccountBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeCode' field.
      * @return The value.
      */
    public java.lang.String getChargeCode() {
      return chargeCode;
    }

    /**
      * Sets the value of the 'chargeCode' field.
      * @param value The value of 'chargeCode'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setChargeCode(java.lang.String value) {
      validate(fields()[11], value);
      this.chargeCode = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeCode' field has been set.
      * @return True if the 'chargeCode' field has been set, false otherwise.
      */
    public boolean hasChargeCode() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'chargeCode' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearChargeCode() {
      chargeCode = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'postingType' field.
      * @return The value.
      */
    public java.lang.String getPostingType() {
      return postingType;
    }

    /**
      * Sets the value of the 'postingType' field.
      * @param value The value of 'postingType'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setPostingType(java.lang.String value) {
      validate(fields()[12], value);
      this.postingType = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'postingType' field has been set.
      * @return True if the 'postingType' field has been set, false otherwise.
      */
    public boolean hasPostingType() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'postingType' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearPostingType() {
      postingType = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public java.lang.String getCategory() {
      return category;
    }

    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setCategory(java.lang.String value) {
      validate(fields()[13], value);
      this.category = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearCategory() {
      category = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'applicableFor' field.
      * @return The value.
      */
    public java.lang.String getApplicableFor() {
      return applicableFor;
    }

    /**
      * Sets the value of the 'applicableFor' field.
      * @param value The value of 'applicableFor'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setApplicableFor(java.lang.String value) {
      validate(fields()[14], value);
      this.applicableFor = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'applicableFor' field has been set.
      * @return True if the 'applicableFor' field has been set, false otherwise.
      */
    public boolean hasApplicableFor() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'applicableFor' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearApplicableFor() {
      applicableFor = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'billingType' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getBillingType() {
      return billingType;
    }

    /**
      * Sets the value of the 'billingType' field.
      * @param value The value of 'billingType'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setBillingType(java.util.List<java.lang.String> value) {
      validate(fields()[15], value);
      this.billingType = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'billingType' field has been set.
      * @return True if the 'billingType' field has been set, false otherwise.
      */
    public boolean hasBillingType() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'billingType' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearBillingType() {
      billingType = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'roundingRule' field.
      * @return The value.
      */
    public java.lang.String getRoundingRule() {
      return roundingRule;
    }

    /**
      * Sets the value of the 'roundingRule' field.
      * @param value The value of 'roundingRule'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setRoundingRule(java.lang.String value) {
      validate(fields()[16], value);
      this.roundingRule = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'roundingRule' field has been set.
      * @return True if the 'roundingRule' field has been set, false otherwise.
      */
    public boolean hasRoundingRule() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'roundingRule' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearRoundingRule() {
      roundingRule = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'postingNature' field.
      * @return The value.
      */
    public java.lang.String getPostingNature() {
      return postingNature;
    }

    /**
      * Sets the value of the 'postingNature' field.
      * @param value The value of 'postingNature'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setPostingNature(java.lang.String value) {
      validate(fields()[17], value);
      this.postingNature = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'postingNature' field has been set.
      * @return True if the 'postingNature' field has been set, false otherwise.
      */
    public boolean hasPostingNature() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'postingNature' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearPostingNature() {
      postingNature = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowedServices' field.
      * @return The value.
      */
    public java.util.List<com.fretron.Model.Materials> getAllowedServices() {
      return allowedServices;
    }

    /**
      * Sets the value of the 'allowedServices' field.
      * @param value The value of 'allowedServices'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setAllowedServices(java.util.List<com.fretron.Model.Materials> value) {
      validate(fields()[18], value);
      this.allowedServices = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'allowedServices' field has been set.
      * @return True if the 'allowedServices' field has been set, false otherwise.
      */
    public boolean hasAllowedServices() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'allowedServices' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearAllowedServices() {
      allowedServices = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'gmLevel' field.
      * @return The value.
      */
    public java.lang.String getGmLevel() {
      return gmLevel;
    }

    /**
      * Sets the value of the 'gmLevel' field.
      * @param value The value of 'gmLevel'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setGmLevel(java.lang.String value) {
      validate(fields()[19], value);
      this.gmLevel = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'gmLevel' field has been set.
      * @return True if the 'gmLevel' field has been set, false otherwise.
      */
    public boolean hasGmLevel() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'gmLevel' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearGmLevel() {
      gmLevel = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'arAPChargeType' field.
      * @return The value.
      */
    public com.fretron.Model.ResourceInfo getArAPChargeType() {
      return arAPChargeType;
    }

    /**
      * Sets the value of the 'arAPChargeType' field.
      * @param value The value of 'arAPChargeType'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setArAPChargeType(com.fretron.Model.ResourceInfo value) {
      validate(fields()[20], value);
      this.arAPChargeTypeBuilder = null;
      this.arAPChargeType = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'arAPChargeType' field has been set.
      * @return True if the 'arAPChargeType' field has been set, false otherwise.
      */
    public boolean hasArAPChargeType() {
      return fieldSetFlags()[20];
    }

    /**
     * Gets the Builder instance for the 'arAPChargeType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.ResourceInfo.Builder getArAPChargeTypeBuilder() {
      if (arAPChargeTypeBuilder == null) {
        if (hasArAPChargeType()) {
          setArAPChargeTypeBuilder(com.fretron.Model.ResourceInfo.newBuilder(arAPChargeType));
        } else {
          setArAPChargeTypeBuilder(com.fretron.Model.ResourceInfo.newBuilder());
        }
      }
      return arAPChargeTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'arAPChargeType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Charge.Builder setArAPChargeTypeBuilder(com.fretron.Model.ResourceInfo.Builder value) {
      clearArAPChargeType();
      arAPChargeTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'arAPChargeType' field has an active Builder instance
     * @return True if the 'arAPChargeType' field has an active Builder instance
     */
    public boolean hasArAPChargeTypeBuilder() {
      return arAPChargeTypeBuilder != null;
    }

    /**
      * Clears the value of the 'arAPChargeType' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearArAPChargeType() {
      arAPChargeType = null;
      arAPChargeTypeBuilder = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'reimbursementChargeType' field.
      * @return The value.
      */
    public com.fretron.Model.ResourceInfo getReimbursementChargeType() {
      return reimbursementChargeType;
    }

    /**
      * Sets the value of the 'reimbursementChargeType' field.
      * @param value The value of 'reimbursementChargeType'.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder setReimbursementChargeType(com.fretron.Model.ResourceInfo value) {
      validate(fields()[21], value);
      this.reimbursementChargeTypeBuilder = null;
      this.reimbursementChargeType = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'reimbursementChargeType' field has been set.
      * @return True if the 'reimbursementChargeType' field has been set, false otherwise.
      */
    public boolean hasReimbursementChargeType() {
      return fieldSetFlags()[21];
    }

    /**
     * Gets the Builder instance for the 'reimbursementChargeType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.fretron.Model.ResourceInfo.Builder getReimbursementChargeTypeBuilder() {
      if (reimbursementChargeTypeBuilder == null) {
        if (hasReimbursementChargeType()) {
          setReimbursementChargeTypeBuilder(com.fretron.Model.ResourceInfo.newBuilder(reimbursementChargeType));
        } else {
          setReimbursementChargeTypeBuilder(com.fretron.Model.ResourceInfo.newBuilder());
        }
      }
      return reimbursementChargeTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'reimbursementChargeType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.fretron.Model.Charge.Builder setReimbursementChargeTypeBuilder(com.fretron.Model.ResourceInfo.Builder value) {
      clearReimbursementChargeType();
      reimbursementChargeTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'reimbursementChargeType' field has an active Builder instance
     * @return True if the 'reimbursementChargeType' field has an active Builder instance
     */
    public boolean hasReimbursementChargeTypeBuilder() {
      return reimbursementChargeTypeBuilder != null;
    }

    /**
      * Clears the value of the 'reimbursementChargeType' field.
      * @return This builder.
      */
    public com.fretron.Model.Charge.Builder clearReimbursementChargeType() {
      reimbursementChargeType = null;
      reimbursementChargeTypeBuilder = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    @Override
    public Charge build() {
      try {
        Charge record = new Charge();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.orgId = fieldSetFlags()[1] ? this.orgId : (java.lang.String) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        record.isCalculated = fieldSetFlags()[3] ? this.isCalculated : (java.lang.Boolean) defaultValue(fields()[3]);
        record.rate = fieldSetFlags()[4] ? this.rate : (java.lang.Double) defaultValue(fields()[4]);
        record.rateUnit = fieldSetFlags()[5] ? this.rateUnit : (java.lang.String) defaultValue(fields()[5]);
        record.amount = fieldSetFlags()[6] ? this.amount : (java.lang.Double) defaultValue(fields()[6]);
        record.baseValue = fieldSetFlags()[7] ? this.baseValue : (java.lang.Double) defaultValue(fields()[7]);
        record.baseValueRule = fieldSetFlags()[8] ? this.baseValueRule : (java.lang.String) defaultValue(fields()[8]);
        record.status = fieldSetFlags()[9] ? this.status : (java.lang.String) defaultValue(fields()[9]);
        if (chartsOfAccountBuilder != null) {
          record.chartsOfAccount = this.chartsOfAccountBuilder.build();
        } else {
          record.chartsOfAccount = fieldSetFlags()[10] ? this.chartsOfAccount : (com.fretron.Model.ChartsOfAccountLite) defaultValue(fields()[10]);
        }
        record.chargeCode = fieldSetFlags()[11] ? this.chargeCode : (java.lang.String) defaultValue(fields()[11]);
        record.postingType = fieldSetFlags()[12] ? this.postingType : (java.lang.String) defaultValue(fields()[12]);
        record.category = fieldSetFlags()[13] ? this.category : (java.lang.String) defaultValue(fields()[13]);
        record.applicableFor = fieldSetFlags()[14] ? this.applicableFor : (java.lang.String) defaultValue(fields()[14]);
        record.billingType = fieldSetFlags()[15] ? this.billingType : (java.util.List<java.lang.String>) defaultValue(fields()[15]);
        record.roundingRule = fieldSetFlags()[16] ? this.roundingRule : (java.lang.String) defaultValue(fields()[16]);
        record.postingNature = fieldSetFlags()[17] ? this.postingNature : (java.lang.String) defaultValue(fields()[17]);
        record.allowedServices = fieldSetFlags()[18] ? this.allowedServices : (java.util.List<com.fretron.Model.Materials>) defaultValue(fields()[18]);
        record.gmLevel = fieldSetFlags()[19] ? this.gmLevel : (java.lang.String) defaultValue(fields()[19]);
        if (arAPChargeTypeBuilder != null) {
          record.arAPChargeType = this.arAPChargeTypeBuilder.build();
        } else {
          record.arAPChargeType = fieldSetFlags()[20] ? this.arAPChargeType : (com.fretron.Model.ResourceInfo) defaultValue(fields()[20]);
        }
        if (reimbursementChargeTypeBuilder != null) {
          record.reimbursementChargeType = this.reimbursementChargeTypeBuilder.build();
        } else {
          record.reimbursementChargeType = fieldSetFlags()[21] ? this.reimbursementChargeType : (com.fretron.Model.ResourceInfo) defaultValue(fields()[21]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

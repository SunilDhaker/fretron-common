apply plugin: 'java'
apply plugin: 'maven'

group = 'com.fretron'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}



repositories {

//     maven { url "http://packages.confluent.io/maven/" }
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
//    compile group: 'org.apache.kafka', name: 'kafka-clients', version:'0.10.2.1'
//    compile group: 'io.confluent', name: 'kafka-avro-serializer', version:'3.2.1'
//    compile group: 'org.apache.kafka', name: 'kafka-streams', version:'0.10.2.1'
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version:'2.0'
    compile group: 'org.glassfish', name: 'javax.json', version:'1.0.4'
    compile group: 'com.ning', name: 'async-http-client', version:'1.9.40'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.1.1'
    compile group: 'org.mockito', name: 'mockito-core', version:'2.7.14'
    compile "redis.clients:jedis:2.9.0"
    compile "org.json:json:20170516"
    compile "io.jsonwebtoken:jjwt:0.6.0"
    compile "org.mongodb:mongo-java-driver:3.5.0"
//    testCompile group: 'io.confluent', name: 'kafka-schema-registry', version:'3.2.1'
//    testCompile group: 'io.confluent', name: 'kafka-schema-registry', version:'3.2.1', classifier:'tests'
//    testCompile group: 'org.apache.kafka', name: 'kafka_2.11', version:'0.10.2.1'
//    testCompile group: 'org.apache.kafka', name: 'kafka_2.11', version:'0.10.2.1', classifier:'test'
//    testCompile group: 'org.apache.kafka', name: 'kafka-clients', version:'0.10.2.1', classifier:'test'
//    testCompile group: 'org.apache.kafka', name: 'kafka-streams', version:'0.10.2.1', classifier:'test'
//    testCompile group: 'org.apache.curator', name: 'curator-test', version:'2.9.0'
//    testCompile group: 'junit', name: 'junit', version:'4.12'
//    testCompile group: 'org.assertj', name: 'assertj-core', version:'3.3.0'
}


apply plugin: 'java'
apply plugin: 'maven'
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.10.0"
    }
}
//apply plugin: "com.commercehub.gradle.plugin.avro-base"

group = 'com.fretron'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}



repositories {

//    maven { url "http://packages.confluent.io/maven/" }
    maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile "org.apache.avro:avro:1.8.1"
//    compile group: 'org.apache.kafka', name: 'kafka-clients', version:'0.10.2.1'
//    compile group: 'io.confluent', name: 'kafka-avro-serializer', version:'3.2.1'
//    compile group: 'org.apache.kafka', name: 'kafka-streams', version:'0.10.2.1'
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version:'2.0'
    compile group: 'org.glassfish', name: 'javax.json', version:'1.0.4'
    compile group: 'com.ning', name: 'async-http-client', version:'1.9.40'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.1.1'
    compile group: 'org.mockito', name: 'mockito-core', version:'2.7.14'
//    testCompile group: 'io.confluent', name: 'kafka-schema-registry', version:'3.2.1'
//    testCompile group: 'io.confluent', name: 'kafka-schema-registry', version:'3.2.1', classifier:'tests'
//    testCompile group: 'org.apache.kafka', name: 'kafka_2.11', version:'0.10.2.1'
//    testCompile group: 'org.apache.kafka', name: 'kafka_2.11', version:'0.10.2.1', classifier:'test'
//    testCompile group: 'org.apache.kafka', name: 'kafka-clients', version:'0.10.2.1', classifier:'test'
//    testCompile group: 'org.apache.kafka', name: 'kafka-streams', version:'0.10.2.1', classifier:'test'
//    testCompile group: 'org.apache.curator', name: 'curator-test', version:'2.9.0'
//    testCompile group: 'junit', name: 'junit', version:'4.12'
//    testCompile group: 'org.assertj', name: 'assertj-core', version:'3.3.0'

}




task renewAvro << {
    delete "src/main/java/com/fretron/Model"
    copy {
        from "build/avro/com/fretron/Model"
        into "src/main/java/com/fretron/Model"
    }
}



task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/avro")
    include("**/**/*.avsc")
    outputDir = file("build/avro")
}


renewAvro.dependsOn generateAvro
build.dependsOn renewAvro

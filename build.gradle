apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'kotlin'


group = 'com.fretron'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


buildscript {
    ext.kotlin_version = '1.2.10'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.10.0"

    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}




repositories {

//     maven { url "http://packages.confluent.io/maven/" }
    maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {

    compile "org.slf4j:slf4j-simple:1.7.25"
    compile "log4j:log4j:1.2.17"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile "org.apache.avro:avro:1.8.1"
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version:'2.0'
    compile group: 'org.glassfish', name: 'javax.json', version:'1.0.4'
    compile group: 'com.ning', name: 'async-http-client', version:'1.9.40'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.1.1'
    compile group: 'org.mockito', name: 'mockito-core', version:'2.7.14'
    compile "redis.clients:jedis:2.9.0"
    compile "org.json:json:20170516"
    compile "io.jsonwebtoken:jjwt:0.6.0"
    compile "org.mongodb:mongo-java-driver:3.5.0"

    // https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile "org.apache.logging.log4j:log4j-core:2.11.0"
    compile "org.apache.logging.log4j:log4j-api:2.11.0"

//    testCompile group: 'io.confluent', name: 'kafka-schema-registry', version:'3.2.1'
//    testCompile group: 'io.confluent', name: 'kafka-schema-registry', version:'3.2.1', classifier:'tests'
//    testCompile group: 'org.apache.kafka', name: 'kafka_2.11', version:'0.10.2.1'
//    testCompile group: 'org.apache.kafka', name: 'kafka_2.11', version:'0.10.2.1', classifier:'test'
//    testCompile group: 'org.apache.kafka', name: 'kafka-clients', version:'0.10.2.1', classifier:'test'
//    testCompile group: 'org.apache.kafka', name: 'kafka-streams', version:'0.10.2.1', classifier:'test'
//    testCompile group: 'org.apache.curator', name: 'curator-test', version:'2.9.0'


    testCompile group: 'junit', name: 'junit', version:'4.12'
//    testCompile group: 'org.assertj', name: 'assertj-core', version:'3.3.0'
    compile "org.apache.httpcomponents:httpasyncclient:4.1.3"

}


task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Common',
                'Implementation-Version': version,
                'Main-Class': 'integrationTests.CommonRunner'
    }
    baseName = project.name + '-all'
    from sourceSets.test.output

    //collect all dependencies
    from { configurations.testRuntime.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    exclude ('META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA')

}

task renewAvro << {
    delete "src/main/java/com/fretron/Model"
    copy {
        from "build/avro/com/fretron/Model"
        into "src/main/java/com/fretron/Model"
    }
}



task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/avro")
    include("**/**/*.avsc")
    outputDir = file("build/avro")
}


renewAvro.dependsOn generateAvro
build.dependsOn renewAvro
